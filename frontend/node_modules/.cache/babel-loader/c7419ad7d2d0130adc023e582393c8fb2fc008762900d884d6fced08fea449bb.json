{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WSSecurity = void 0;\nconst crypto = require(\"crypto\");\nconst utils_1 = require(\"../utils\");\nconst validPasswordTypes = ['PasswordDigest', 'PasswordText'];\nclass WSSecurity {\n  constructor(username, password, options) {\n    options = options || {};\n    this._username = username;\n    this._password = password;\n    this._envelopeKey = 'soap';\n    // must account for backward compatibility for passwordType String param as well as object options defaults: passwordType = 'PasswordText', hasTimeStamp = true\n    if (typeof options === 'string') {\n      this._passwordType = options ? options : 'PasswordText';\n      options = {};\n    } else {\n      this._passwordType = options.passwordType ? options.passwordType : 'PasswordText';\n    }\n    if (validPasswordTypes.indexOf(this._passwordType) === -1) {\n      this._passwordType = 'PasswordText';\n    }\n    this._hasTimeStamp = options.hasTimeStamp || typeof options.hasTimeStamp === 'boolean' ? !!options.hasTimeStamp : true;\n    /*jshint eqnull:true */\n    if (options.hasNonce != null) {\n      this._hasNonce = !!options.hasNonce;\n    }\n    this._hasTokenCreated = options.hasTokenCreated || typeof options.hasTokenCreated === 'boolean' ? !!options.hasTokenCreated : true;\n    if (options.actor != null) {\n      this._actor = options.actor;\n    }\n    if (options.mustUnderstand != null) {\n      this._mustUnderstand = !!options.mustUnderstand;\n    }\n    if (options.envelopeKey) {\n      this._envelopeKey = options.envelopeKey;\n    }\n  }\n  toXML() {\n    // avoid dependency on date formatting libraries\n    function getDate(d) {\n      function pad(n) {\n        return n < 10 ? '0' + n : n;\n      }\n      return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + 'Z';\n    }\n    const now = new Date();\n    const created = getDate(now);\n    let timeStampXml = '';\n    if (this._hasTimeStamp) {\n      const expires = getDate(new Date(now.getTime() + 1000 * 600));\n      timeStampXml = '<wsu:Timestamp wsu:Id=\"Timestamp-' + created + '\">' + '<wsu:Created>' + created + '</wsu:Created>' + '<wsu:Expires>' + expires + '</wsu:Expires>' + '</wsu:Timestamp>';\n    }\n    let password;\n    let nonce;\n    if (this._hasNonce || this._passwordType !== 'PasswordText') {\n      // nonce = base64 ( sha1 ( created + random ) )\n      const nHash = crypto.createHash('sha1');\n      nHash.update(created + Math.random());\n      nonce = nHash.digest('base64');\n    }\n    if (this._passwordType === 'PasswordText') {\n      password = '<wsse:Password Type=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\">' + (0, utils_1.xmlEscape)(this._password) + '</wsse:Password>';\n      if (nonce) {\n        password += '<wsse:Nonce EncodingType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\">' + nonce + '</wsse:Nonce>';\n      }\n    } else {\n      /* Specific Testcase for passwordDigest calculation cover this code\n      /* istanbul ignore next */\n      password = '<wsse:Password Type=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest\">' + (0, utils_1.passwordDigest)(nonce, created, this._password) + '</wsse:Password>' + '<wsse:Nonce EncodingType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\">' + nonce + '</wsse:Nonce>';\n    }\n    return '<wsse:Security ' + (this._actor ? `${this._envelopeKey}:actor=\"${this._actor}\" ` : '') + (this._mustUnderstand ? `${this._envelopeKey}:mustUnderstand=\"1\" ` : '') + 'xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">' + timeStampXml + '<wsse:UsernameToken xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\" wsu:Id=\"SecurityToken-' + created + '\">' + '<wsse:Username>' + (0, utils_1.xmlEscape)(this._username) + '</wsse:Username>' + password + (this._hasTokenCreated ? '<wsu:Created>' + created + '</wsu:Created>' : '') + '</wsse:UsernameToken>' + '</wsse:Security>';\n  }\n}\nexports.WSSecurity = WSSecurity;","map":{"version":3,"names":["crypto","require","utils_1","validPasswordTypes","WSSecurity","constructor","username","password","options","_username","_password","_envelopeKey","_passwordType","passwordType","indexOf","_hasTimeStamp","hasTimeStamp","hasNonce","_hasNonce","_hasTokenCreated","hasTokenCreated","actor","_actor","mustUnderstand","_mustUnderstand","envelopeKey","toXML","getDate","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","now","Date","created","timeStampXml","expires","getTime","nonce","nHash","createHash","update","Math","random","digest","xmlEscape","passwordDigest","exports"],"sources":["../../src/security/WSSecurity.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}