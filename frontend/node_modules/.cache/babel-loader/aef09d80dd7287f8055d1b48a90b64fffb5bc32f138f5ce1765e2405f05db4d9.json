{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpClient = void 0;\nconst req = require(\"axios\");\nconst axios_ntlm_1 = require(\"axios-ntlm\");\nconst crypto_1 = require(\"crypto\");\nconst debug_1 = require(\"debug\");\nconst url = require(\"url\");\nconst MIMEType = require(\"whatwg-mimetype\");\nconst zlib_1 = require(\"zlib\");\nconst utils_1 = require(\"./utils\");\nconst debug = (0, debug_1.default)('node-soap');\nconst VERSION = require('../package.json').version;\n/**\n * A class representing the http client\n * @param {Object} [options] Options object. It allows the customization of\n * `request` module\n *\n * @constructor\n */\nclass HttpClient {\n  constructor(options) {\n    options = options || {};\n    this.options = options;\n    this._request = options.request || req.create();\n  }\n  /**\n   * Build the HTTP request (method, uri, headers, ...)\n   * @param {String} rurl The resource url\n   * @param {Object|String} data The payload\n   * @param {Object} exheaders Extra http headers\n   * @param {Object} exoptions Extra options\n   * @returns {Object} The http request object for the `request` module\n   */\n  buildRequest(rurl, data, exheaders, exoptions = {}) {\n    const curl = url.parse(rurl);\n    const method = data ? 'POST' : 'GET';\n    const host = curl.hostname;\n    const port = parseInt(curl.port, 10);\n    const headers = {\n      'User-Agent': 'node-soap/' + VERSION,\n      'Accept': 'text/html,application/xhtml+xml,application/xml,text/xml;q=0.9,*/*;q=0.8',\n      'Accept-Encoding': 'none',\n      'Accept-Charset': 'utf-8',\n      'Connection': exoptions.forever ? 'keep-alive' : 'close',\n      'Host': host + (isNaN(port) ? '' : ':' + port)\n    };\n    const mergeOptions = ['headers'];\n    const {\n      attachments: _attachments,\n      ...newExoptions\n    } = exoptions;\n    const attachments = _attachments || [];\n    if (typeof data === 'string' && attachments.length === 0 && !exoptions.forceMTOM) {\n      headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n      headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n    exheaders = exheaders || {};\n    for (const attr in exheaders) {\n      headers[attr] = exheaders[attr];\n    }\n    const options = {\n      url: curl.href,\n      method: method,\n      headers: headers,\n      transformResponse: data => data\n    };\n    if (!exoptions.ntlm) {\n      options.validateStatus = null;\n    }\n    if (exoptions.forceMTOM || attachments.length > 0) {\n      const start = (0, crypto_1.randomUUID)();\n      let action = null;\n      if (headers['Content-Type'].indexOf('action') > -1) {\n        for (const ct of headers['Content-Type'].split('; ')) {\n          if (ct.indexOf('action') > -1) {\n            action = ct;\n          }\n        }\n      }\n      const boundary = (0, crypto_1.randomUUID)();\n      headers['Content-Type'] = 'multipart/related; type=\"application/xop+xml\"; start=\"<' + start + '>\"; start-info=\"text/xml\"; boundary=' + boundary;\n      if (action) {\n        headers['Content-Type'] = headers['Content-Type'] + '; ' + action;\n      }\n      const multipart = [{\n        'Content-Type': 'application/xop+xml; charset=UTF-8; type=\"text/xml\"',\n        'Content-ID': '<' + start + '>',\n        'body': data\n      }];\n      attachments.forEach(attachment => {\n        multipart.push({\n          'Content-Type': attachment.mimetype,\n          'Content-Transfer-Encoding': 'binary',\n          'Content-ID': '<' + attachment.contentId + '>',\n          'Content-Disposition': 'attachment; filename=\"' + attachment.name + '\"',\n          'body': attachment.body\n        });\n      });\n      options.data = [Buffer.from(`--${boundary}\\r\\n`)];\n      let multipartCount = 0;\n      multipart.forEach(part => {\n        Object.keys(part).forEach(key => {\n          if (key !== 'body') {\n            options.data.push(Buffer.from(`${key}: ${part[key]}\\r\\n`));\n          }\n        });\n        options.data.push(Buffer.from('\\r\\n'), Buffer.from(part.body), Buffer.from(`\\r\\n--${boundary}${multipartCount === multipart.length - 1 ? '--' : ''}\\r\\n`));\n        multipartCount++;\n      });\n      options.data = Buffer.concat(options.data);\n    } else {\n      options.data = data;\n    }\n    if (exoptions.forceGzip) {\n      options.decompress = true;\n      options.data = (0, zlib_1.gzipSync)(options.data);\n      options.headers['Accept-Encoding'] = 'gzip,deflate';\n      options.headers['Content-Encoding'] = 'gzip';\n    }\n    for (const attr in newExoptions) {\n      if (mergeOptions.indexOf(attr) !== -1) {\n        for (const header in exoptions[attr]) {\n          options[attr][header] = exoptions[attr][header];\n        }\n      } else {\n        options[attr] = exoptions[attr];\n      }\n    }\n    debug('Http request: %j', options);\n    return options;\n  }\n  /**\n   * Handle the http response\n   * @param {Object} The req object\n   * @param {Object} res The res object\n   * @param {Object} body The http body\n   * @param {Object} The parsed body\n   */\n  handleResponse(req, res, body) {\n    debug('Http response body: %j', body);\n    if (typeof body === 'string') {\n      // Remove any extra characters that appear before or after the SOAP envelope.\n      const regex = /(?:<\\?[^?]*\\?>[\\s]*)?<([^:]*):Envelope([\\S\\s]*)<\\/\\1:Envelope>/i;\n      const match = body.replace(/<!--[\\s\\S]*?-->/, '').match(regex);\n      if (match) {\n        body = match[0];\n      }\n    }\n    return body;\n  }\n  request(rurl, data, callback, exheaders, exoptions, caller) {\n    const options = this.buildRequest(rurl, data, exheaders, exoptions);\n    let req;\n    if (exoptions !== undefined && exoptions.ntlm) {\n      const ntlmReq = (0, axios_ntlm_1.NtlmClient)({\n        username: exoptions.username,\n        password: exoptions.password,\n        workstation: exoptions.workstation || '',\n        domain: exoptions.domain || ''\n      });\n      req = ntlmReq(options);\n    } else {\n      if (this.options.parseReponseAttachments) {\n        options.responseType = 'arraybuffer';\n        options.responseEncoding = 'binary';\n      }\n      req = this._request(options);\n    }\n    const _this = this;\n    req.then(res => {\n      const handleBody = body => {\n        res.data = this.handleResponse(req, res, body || res.data);\n        callback(null, res, res.data);\n        return res;\n      };\n      if (_this.options.parseReponseAttachments) {\n        const isMultipartResp = res.headers['content-type'] && res.headers['content-type'].toLowerCase().indexOf('multipart/related') > -1;\n        if (isMultipartResp) {\n          let boundary;\n          const parsedContentType = MIMEType.parse(res.headers['content-type']);\n          if (parsedContentType) {\n            boundary = parsedContentType.parameters.get('boundary');\n          }\n          if (!boundary) {\n            return callback(new Error('Missing boundary from content-type'));\n          }\n          return (0, utils_1.parseMTOMResp)(res.data, boundary, (err, multipartResponse) => {\n            if (err) {\n              return callback(err);\n            }\n            // first part is the soap response\n            const firstPart = multipartResponse.parts.shift();\n            if (!firstPart || !firstPart.body) {\n              return callback(new Error('Cannot parse multipart response'));\n            }\n            res.mtomResponseAttachments = multipartResponse;\n            return handleBody(firstPart.body.toString('utf8'));\n          });\n        } else {\n          return handleBody(res.data.toString('utf8'));\n        }\n      } else {\n        return handleBody();\n      }\n    }, err => {\n      return callback(err);\n    });\n    return req;\n  }\n  requestStream(rurl, data, exheaders, exoptions, caller) {\n    const options = this.buildRequest(rurl, data, exheaders, exoptions);\n    options.responseType = 'stream';\n    const req = this._request(options).then(res => {\n      res.data = this.handleResponse(req, res, res.data);\n      return res;\n    });\n    return req;\n  }\n}\nexports.HttpClient = HttpClient;","map":{"version":3,"names":["req","require","axios_ntlm_1","crypto_1","debug_1","url","MIMEType","zlib_1","utils_1","debug","default","VERSION","version","HttpClient","constructor","options","_request","request","create","buildRequest","rurl","data","exheaders","exoptions","curl","parse","method","host","hostname","port","parseInt","headers","forever","isNaN","mergeOptions","attachments","_attachments","newExoptions","length","forceMTOM","Buffer","byteLength","attr","href","transformResponse","ntlm","validateStatus","start","randomUUID","action","indexOf","ct","split","boundary","multipart","forEach","attachment","push","mimetype","contentId","name","body","from","multipartCount","part","Object","keys","key","concat","forceGzip","decompress","gzipSync","header","handleResponse","res","regex","match","replace","callback","caller","undefined","ntlmReq","NtlmClient","username","password","workstation","domain","parseReponseAttachments","responseType","responseEncoding","_this","then","handleBody","isMultipartResp","toLowerCase","parsedContentType","parameters","get","Error","parseMTOMResp","err","multipartResponse","firstPart","parts","shift","mtomResponseAttachments","toString","requestStream","exports"],"sources":["../src/http.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}