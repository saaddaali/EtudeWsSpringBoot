{"ast":null,"code":"'use strict';\n\n// Original file https://raw.githubusercontent.com/elasticio/node-ntlm-client/master/lib/ntlm.js\nvar os = require('os'),\n  flags = require('./flags'),\n  hash = require('./hash');\nvar NTLMSIGNATURE = \"NTLMSSP\\0\";\nfunction createType1Message(workstation, target) {\n  var dataPos = 32,\n    pos = 0,\n    buf = new Buffer.alloc(1024);\n  workstation = workstation === undefined ? os.hostname() : workstation;\n  target = target === undefined ? '' : target;\n  //signature\n  buf.write(NTLMSIGNATURE, pos, NTLMSIGNATURE.length, 'ascii');\n  pos += NTLMSIGNATURE.length;\n  //message type\n  buf.writeUInt32LE(1, pos);\n  pos += 4;\n  //flags\n  buf.writeUInt32LE(flags.NTLMFLAG_NEGOTIATE_OEM | flags.NTLMFLAG_REQUEST_TARGET | flags.NTLMFLAG_NEGOTIATE_NTLM_KEY | flags.NTLMFLAG_NEGOTIATE_NTLM2_KEY | flags.NTLMFLAG_NEGOTIATE_ALWAYS_SIGN, pos);\n  pos += 4;\n  //domain security buffer\n  buf.writeUInt16LE(target.length, pos);\n  pos += 2;\n  buf.writeUInt16LE(target.length, pos);\n  pos += 2;\n  buf.writeUInt32LE(target.length === 0 ? 0 : dataPos, pos);\n  pos += 4;\n  if (target.length > 0) {\n    dataPos += buf.write(target, dataPos, 'ascii');\n  }\n  //workstation security buffer\n  buf.writeUInt16LE(workstation.length, pos);\n  pos += 2;\n  buf.writeUInt16LE(workstation.length, pos);\n  pos += 2;\n  buf.writeUInt32LE(workstation.length === 0 ? 0 : dataPos, pos);\n  pos += 4;\n  if (workstation.length > 0) {\n    dataPos += buf.write(workstation, dataPos, 'ascii');\n  }\n  return 'NTLM ' + buf.toString('base64', 0, dataPos);\n}\nfunction decodeType2Message(str) {\n  if (str === undefined) {\n    throw new Error('Invalid argument');\n  }\n  //convenience\n  if (Object.prototype.toString.call(str) !== '[object String]') {\n    if (str.hasOwnProperty('headers') && str.headers.hasOwnProperty('www-authenticate')) {\n      str = str.headers['www-authenticate'];\n    } else {\n      throw new Error('Invalid argument');\n    }\n  }\n  var ntlmMatch = /^NTLM ([^,\\s]+)/.exec(str);\n  if (ntlmMatch) {\n    str = ntlmMatch[1];\n  }\n  var buf = new Buffer.from(str, 'base64'),\n    obj = {};\n  //check signature\n  if (buf.toString('ascii', 0, NTLMSIGNATURE.length) !== NTLMSIGNATURE) {\n    throw new Error('Invalid message signature: ' + str);\n  }\n  //check message type\n  if (buf.readUInt32LE(NTLMSIGNATURE.length) !== 2) {\n    throw new Error('Invalid message type (no type 2)');\n  }\n  //read flags\n  obj.flags = buf.readUInt32LE(20);\n  obj.encoding = obj.flags & flags.NTLMFLAG_NEGOTIATE_OEM ? 'ascii' : 'ucs2';\n  obj.version = obj.flags & flags.NTLMFLAG_NEGOTIATE_NTLM2_KEY ? 2 : 1;\n  obj.challenge = buf.slice(24, 32);\n  //read target name\n  obj.targetName = function () {\n    var length = buf.readUInt16LE(12);\n    //skipping allocated space\n    var offset = buf.readUInt32LE(16);\n    if (length === 0) {\n      return '';\n    }\n    if (offset + length > buf.length || offset < 32) {\n      throw new Error('Bad type 2 message');\n    }\n    return buf.toString(obj.encoding, offset, offset + length);\n  }();\n  //read target info\n  if (obj.flags & flags.NTLMFLAG_NEGOTIATE_TARGET_INFO) {\n    obj.targetInfo = function () {\n      var info = {};\n      var length = buf.readUInt16LE(40);\n      //skipping allocated space\n      var offset = buf.readUInt32LE(44);\n      var targetInfoBuffer = new Buffer.alloc(length);\n      buf.copy(targetInfoBuffer, 0, offset, offset + length);\n      if (length === 0) {\n        return info;\n      }\n      if (offset + length > buf.length || offset < 32) {\n        throw new Error('Bad type 2 message');\n      }\n      var pos = offset;\n      while (pos < offset + length) {\n        var blockType = buf.readUInt16LE(pos);\n        pos += 2;\n        var blockLength = buf.readUInt16LE(pos);\n        pos += 2;\n        if (blockType === 0) {\n          //reached the terminator subblock\n          break;\n        }\n        var blockTypeStr = void 0;\n        switch (blockType) {\n          case 1:\n            blockTypeStr = 'SERVER';\n            break;\n          case 2:\n            blockTypeStr = 'DOMAIN';\n            break;\n          case 3:\n            blockTypeStr = 'FQDN';\n            break;\n          case 4:\n            blockTypeStr = 'DNS';\n            break;\n          case 5:\n            blockTypeStr = 'PARENT_DNS';\n            break;\n          default:\n            blockTypeStr = '';\n            break;\n        }\n        if (blockTypeStr) {\n          info[blockTypeStr] = buf.toString('ucs2', pos, pos + blockLength);\n        }\n        pos += blockLength;\n      }\n      return {\n        parsed: info,\n        buffer: targetInfoBuffer\n      };\n    }();\n  }\n  return obj;\n}\nfunction createType3Message(type2Message, username, password, workstation, target) {\n  var dataPos = 52,\n    buf = new Buffer.alloc(1024);\n  if (workstation === undefined) {\n    workstation = os.hostname();\n  }\n  if (target === undefined) {\n    target = type2Message.targetName;\n  }\n  //signature\n  buf.write(NTLMSIGNATURE, 0, NTLMSIGNATURE.length, 'ascii');\n  //message type\n  buf.writeUInt32LE(3, 8);\n  if (type2Message.version === 2) {\n    dataPos = 64;\n    var ntlmHash = hash.createNTLMHash(password),\n      nonce = hash.createPseudoRandomValue(16),\n      lmv2 = hash.createLMv2Response(type2Message, username, ntlmHash, nonce, target),\n      ntlmv2 = hash.createNTLMv2Response(type2Message, username, ntlmHash, nonce, target);\n    //lmv2 security buffer\n    buf.writeUInt16LE(lmv2.length, 12);\n    buf.writeUInt16LE(lmv2.length, 14);\n    buf.writeUInt32LE(dataPos, 16);\n    lmv2.copy(buf, dataPos);\n    dataPos += lmv2.length;\n    //ntlmv2 security buffer\n    buf.writeUInt16LE(ntlmv2.length, 20);\n    buf.writeUInt16LE(ntlmv2.length, 22);\n    buf.writeUInt32LE(dataPos, 24);\n    ntlmv2.copy(buf, dataPos);\n    dataPos += ntlmv2.length;\n  } else {\n    var lmHash = hash.createLMHash(password),\n      ntlmHash = hash.createNTLMHash(password),\n      lm = hash.createLMResponse(type2Message.challenge, lmHash),\n      ntlm = hash.createNTLMResponse(type2Message.challenge, ntlmHash);\n    //lm security buffer\n    buf.writeUInt16LE(lm.length, 12);\n    buf.writeUInt16LE(lm.length, 14);\n    buf.writeUInt32LE(dataPos, 16);\n    lm.copy(buf, dataPos);\n    dataPos += lm.length;\n    //ntlm security buffer\n    buf.writeUInt16LE(ntlm.length, 20);\n    buf.writeUInt16LE(ntlm.length, 22);\n    buf.writeUInt32LE(dataPos, 24);\n    ntlm.copy(buf, dataPos);\n    dataPos += ntlm.length;\n  }\n  //target name security buffer\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? target.length : target.length * 2, 28);\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? target.length : target.length * 2, 30);\n  buf.writeUInt32LE(dataPos, 32);\n  dataPos += buf.write(target, dataPos, type2Message.encoding);\n  //user name security buffer\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? username.length : username.length * 2, 36);\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? username.length : username.length * 2, 38);\n  buf.writeUInt32LE(dataPos, 40);\n  dataPos += buf.write(username, dataPos, type2Message.encoding);\n  //workstation name security buffer\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? workstation.length : workstation.length * 2, 44);\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? workstation.length : workstation.length * 2, 46);\n  buf.writeUInt32LE(dataPos, 48);\n  dataPos += buf.write(workstation, dataPos, type2Message.encoding);\n  if (type2Message.version === 2) {\n    //session key security buffer\n    buf.writeUInt16LE(0, 52);\n    buf.writeUInt16LE(0, 54);\n    buf.writeUInt32LE(0, 56);\n    //flags\n    buf.writeUInt32LE(type2Message.flags, 60);\n  }\n  return 'NTLM ' + buf.toString('base64', 0, dataPos);\n}\nmodule.exports = {\n  createType1Message: createType1Message,\n  decodeType2Message: decodeType2Message,\n  createType3Message: createType3Message\n};","map":{"version":3,"names":["os","require","flags","hash","NTLMSIGNATURE","createType1Message","workstation","target","dataPos","pos","buf","Buffer","alloc","undefined","hostname","write","length","writeUInt32LE","NTLMFLAG_NEGOTIATE_OEM","NTLMFLAG_REQUEST_TARGET","NTLMFLAG_NEGOTIATE_NTLM_KEY","NTLMFLAG_NEGOTIATE_NTLM2_KEY","NTLMFLAG_NEGOTIATE_ALWAYS_SIGN","writeUInt16LE","toString","decodeType2Message","str","Error","Object","prototype","call","hasOwnProperty","headers","ntlmMatch","exec","from","obj","readUInt32LE","encoding","version","challenge","slice","targetName","readUInt16LE","offset","NTLMFLAG_NEGOTIATE_TARGET_INFO","targetInfo","info","targetInfoBuffer","copy","blockType","blockLength","blockTypeStr","parsed","buffer","createType3Message","type2Message","username","password","ntlmHash","createNTLMHash","nonce","createPseudoRandomValue","lmv2","createLMv2Response","ntlmv2","createNTLMv2Response","lmHash","createLMHash","lm","createLMResponse","ntlm","createNTLMResponse","module","exports"],"sources":["../src/ntlm.js"],"sourcesContent":[null],"mappings":"AAAA,YAAY;;AACZ;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;EACvBC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;EAC1BE,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAEzB,IAAMG,aAAa,GAAG,WAAW;AAEjC,SAASC,kBAAkBA,CAACC,WAAW,EAAEC,MAAM;EAC9C,IAAIC,OAAO,GAAG,EAAE;IACfC,GAAG,GAAG,CAAC;IACPC,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAE7BN,WAAW,GAAGA,WAAW,KAAKO,SAAS,GAAGb,EAAE,CAACc,QAAQ,EAAE,GAAGR,WAAW;EACrEC,MAAM,GAAGA,MAAM,KAAKM,SAAS,GAAG,EAAE,GAAGN,MAAM;EAE3C;EACAG,GAAG,CAACK,KAAK,CAACX,aAAa,EAAEK,GAAG,EAAEL,aAAa,CAACY,MAAM,EAAE,OAAO,CAAC;EAC5DP,GAAG,IAAIL,aAAa,CAACY,MAAM;EAE3B;EACAN,GAAG,CAACO,aAAa,CAAC,CAAC,EAAER,GAAG,CAAC;EACzBA,GAAG,IAAI,CAAC;EAER;EACAC,GAAG,CAACO,aAAa,CAACf,KAAK,CAACgB,sBAAsB,GACzChB,KAAK,CAACiB,uBAAuB,GAC7BjB,KAAK,CAACkB,2BAA2B,GACjClB,KAAK,CAACmB,4BAA4B,GAClCnB,KAAK,CAACoB,8BAA8B,EAAEb,GAAG,CAAC;EAC/CA,GAAG,IAAI,CAAC;EAER;EACAC,GAAG,CAACa,aAAa,CAAChB,MAAM,CAACS,MAAM,EAAEP,GAAG,CAAC;EACrCA,GAAG,IAAI,CAAC;EACRC,GAAG,CAACa,aAAa,CAAChB,MAAM,CAACS,MAAM,EAAEP,GAAG,CAAC;EACrCA,GAAG,IAAI,CAAC;EACRC,GAAG,CAACO,aAAa,CAACV,MAAM,CAACS,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGR,OAAO,EAAEC,GAAG,CAAC;EACzDA,GAAG,IAAI,CAAC;EAER,IAAIF,MAAM,CAACS,MAAM,GAAG,CAAC,EAAE;IACtBR,OAAO,IAAIE,GAAG,CAACK,KAAK,CAACR,MAAM,EAAEC,OAAO,EAAE,OAAO,CAAC;;EAG/C;EACAE,GAAG,CAACa,aAAa,CAACjB,WAAW,CAACU,MAAM,EAAEP,GAAG,CAAC;EAC1CA,GAAG,IAAI,CAAC;EACRC,GAAG,CAACa,aAAa,CAACjB,WAAW,CAACU,MAAM,EAAEP,GAAG,CAAC;EAC1CA,GAAG,IAAI,CAAC;EACRC,GAAG,CAACO,aAAa,CAACX,WAAW,CAACU,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGR,OAAO,EAAEC,GAAG,CAAC;EAC9DA,GAAG,IAAI,CAAC;EAER,IAAIH,WAAW,CAACU,MAAM,GAAG,CAAC,EAAE;IAC3BR,OAAO,IAAIE,GAAG,CAACK,KAAK,CAACT,WAAW,EAAEE,OAAO,EAAE,OAAO,CAAC;;EAGpD,OAAO,OAAO,GAAGE,GAAG,CAACc,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAEhB,OAAO,CAAC;AACpD;AAEA,SAASiB,kBAAkBA,CAACC,GAAG;EAC9B,IAAIA,GAAG,KAAKb,SAAS,EAAE;IACtB,MAAM,IAAIc,KAAK,CAAC,kBAAkB,CAAC;;EAGpC;EACA,IAAIC,MAAM,CAACC,SAAS,CAACL,QAAQ,CAACM,IAAI,CAACJ,GAAG,CAAC,KAAK,iBAAiB,EAAE;IAC9D,IAAIA,GAAG,CAACK,cAAc,CAAC,SAAS,CAAC,IAAIL,GAAG,CAACM,OAAO,CAACD,cAAc,CAAC,kBAAkB,CAAC,EAAE;MACpFL,GAAG,GAAGA,GAAG,CAACM,OAAO,CAAC,kBAAkB,CAAC;KACrC,MAAM;MACN,MAAM,IAAIL,KAAK,CAAC,kBAAkB,CAAC;;;EAIrC,IAAIM,SAAS,GAAG,iBAAiB,CAACC,IAAI,CAACR,GAAG,CAAC;EAE3C,IAAIO,SAAS,EAAE;IACdP,GAAG,GAAGO,SAAS,CAAC,CAAC,CAAC;;EAGnB,IAAIvB,GAAG,GAAG,IAAIC,MAAM,CAACwB,IAAI,CAACT,GAAG,EAAE,QAAQ,CAAC;IACvCU,GAAG,GAAG,EAAE;EAET;EACA,IAAI1B,GAAG,CAACc,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAEpB,aAAa,CAACY,MAAM,CAAC,KAAKZ,aAAa,EAAE;IACrE,MAAM,IAAIuB,KAAK,CAAC,6BAA6B,GAAGD,GAAG,CAAC;;EAGrD;EACA,IAAIhB,GAAG,CAAC2B,YAAY,CAACjC,aAAa,CAACY,MAAM,CAAC,KAAK,CAAC,EAAE;IACjD,MAAM,IAAIW,KAAK,CAAC,kCAAkC,CAAC;;EAGpD;EACAS,GAAG,CAAClC,KAAK,GAAGQ,GAAG,CAAC2B,YAAY,CAAC,EAAE,CAAC;EAEhCD,GAAG,CAACE,QAAQ,GAAIF,GAAG,CAAClC,KAAK,GAAGA,KAAK,CAACgB,sBAAsB,GAAI,OAAO,GAAG,MAAM;EAE5EkB,GAAG,CAACG,OAAO,GAAIH,GAAG,CAAClC,KAAK,GAAGA,KAAK,CAACmB,4BAA4B,GAAI,CAAC,GAAG,CAAC;EAEtEe,GAAG,CAACI,SAAS,GAAG9B,GAAG,CAAC+B,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;EAEjC;EACAL,GAAG,CAACM,UAAU,GAAI;IACjB,IAAI1B,MAAM,GAAGN,GAAG,CAACiC,YAAY,CAAC,EAAE,CAAC;IACjC;IACA,IAAIC,MAAM,GAAGlC,GAAG,CAAC2B,YAAY,CAAC,EAAE,CAAC;IAEjC,IAAIrB,MAAM,KAAK,CAAC,EAAE;MACjB,OAAO,EAAE;;IAGV,IAAK4B,MAAM,GAAG5B,MAAM,GAAIN,GAAG,CAACM,MAAM,IAAI4B,MAAM,GAAG,EAAE,EAAE;MAClD,MAAM,IAAIjB,KAAK,CAAC,oBAAoB,CAAC;;IAGtC,OAAOjB,GAAG,CAACc,QAAQ,CAACY,GAAG,CAACE,QAAQ,EAAEM,MAAM,EAAEA,MAAM,GAAG5B,MAAM,CAAC;EAC3D,CAAC,CAAC,CAAE;EAEJ;EACA,IAAIoB,GAAG,CAAClC,KAAK,GAAGA,KAAK,CAAC2C,8BAA8B,EAAE;IACrDT,GAAG,CAACU,UAAU,GAAI;MACjB,IAAIC,IAAI,GAAG,EAAE;MAEb,IAAI/B,MAAM,GAAGN,GAAG,CAACiC,YAAY,CAAC,EAAE,CAAC;MACjC;MACA,IAAIC,MAAM,GAAGlC,GAAG,CAAC2B,YAAY,CAAC,EAAE,CAAC;MAEjC,IAAIW,gBAAgB,GAAG,IAAIrC,MAAM,CAACC,KAAK,CAACI,MAAM,CAAC;MAC/CN,GAAG,CAACuC,IAAI,CAACD,gBAAgB,EAAE,CAAC,EAAEJ,MAAM,EAAEA,MAAM,GAAG5B,MAAM,CAAC;MAEtD,IAAIA,MAAM,KAAK,CAAC,EAAE;QACjB,OAAO+B,IAAI;;MAGZ,IAAKH,MAAM,GAAG5B,MAAM,GAAIN,GAAG,CAACM,MAAM,IAAI4B,MAAM,GAAG,EAAE,EAAE;QAClD,MAAM,IAAIjB,KAAK,CAAC,oBAAoB,CAAC;;MAGtC,IAAIlB,GAAG,GAAGmC,MAAM;MAEhB,OAAOnC,GAAG,GAAImC,MAAM,GAAG5B,MAAO,EAAE;QAC/B,IAAIkC,SAAS,GAAGxC,GAAG,CAACiC,YAAY,CAAClC,GAAG,CAAC;QACrCA,GAAG,IAAI,CAAC;QACR,IAAI0C,WAAW,GAAGzC,GAAG,CAACiC,YAAY,CAAClC,GAAG,CAAC;QACvCA,GAAG,IAAI,CAAC;QAER,IAAIyC,SAAS,KAAK,CAAC,EAAE;UACpB;UACA;;QAGD,IAAIE,YAAY;QAEhB,QAAQF,SAAS;UAChB,KAAK,CAAC;YACLE,YAAY,GAAG,QAAQ;YACvB;UACD,KAAK,CAAC;YACLA,YAAY,GAAG,QAAQ;YACvB;UACD,KAAK,CAAC;YACLA,YAAY,GAAG,MAAM;YACrB;UACD,KAAK,CAAC;YACLA,YAAY,GAAG,KAAK;YACpB;UACD,KAAK,CAAC;YACLA,YAAY,GAAG,YAAY;YAC3B;UACD;YACCA,YAAY,GAAG,EAAE;YACjB;;QAGF,IAAIA,YAAY,EAAE;UACjBL,IAAI,CAACK,YAAY,CAAC,GAAG1C,GAAG,CAACc,QAAQ,CAAC,MAAM,EAAEf,GAAG,EAAEA,GAAG,GAAG0C,WAAW,CAAC;;QAGlE1C,GAAG,IAAI0C,WAAW;;MAGnB,OAAO;QACNE,MAAM,EAAEN,IAAI;QACZO,MAAM,EAAEN;OACR;IACF,CAAC,CAAC,CAAE;;EAGL,OAAOZ,GAAG;AACX;AAEA,SAASmB,kBAAkBA,CAACC,YAAY,EAAEC,QAAQ,EAAEC,QAAQ,EAAEpD,WAAW,EAAEC,MAAM;EAChF,IAAIC,OAAO,GAAG,EAAE;IACfE,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAE7B,IAAIN,WAAW,KAAKO,SAAS,EAAE;IAC9BP,WAAW,GAAGN,EAAE,CAACc,QAAQ,EAAE;;EAG5B,IAAIP,MAAM,KAAKM,SAAS,EAAE;IACzBN,MAAM,GAAGiD,YAAY,CAACd,UAAU;;EAGjC;EACAhC,GAAG,CAACK,KAAK,CAACX,aAAa,EAAE,CAAC,EAAEA,aAAa,CAACY,MAAM,EAAE,OAAO,CAAC;EAE1D;EACAN,GAAG,CAACO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;EAEvB,IAAIuC,YAAY,CAACjB,OAAO,KAAK,CAAC,EAAE;IAC/B/B,OAAO,GAAG,EAAE;IAEZ,IAAImD,QAAQ,GAAGxD,IAAI,CAACyD,cAAc,CAACF,QAAQ,CAAC;MAC3CG,KAAK,GAAG1D,IAAI,CAAC2D,uBAAuB,CAAC,EAAE,CAAC;MACxCC,IAAI,GAAG5D,IAAI,CAAC6D,kBAAkB,CAACR,YAAY,EAAEC,QAAQ,EAAEE,QAAQ,EAAEE,KAAK,EAAEtD,MAAM,CAAC;MAC/E0D,MAAM,GAAG9D,IAAI,CAAC+D,oBAAoB,CAACV,YAAY,EAAEC,QAAQ,EAAEE,QAAQ,EAAEE,KAAK,EAAEtD,MAAM,CAAC;IAEpF;IACAG,GAAG,CAACa,aAAa,CAACwC,IAAI,CAAC/C,MAAM,EAAE,EAAE,CAAC;IAClCN,GAAG,CAACa,aAAa,CAACwC,IAAI,CAAC/C,MAAM,EAAE,EAAE,CAAC;IAClCN,GAAG,CAACO,aAAa,CAACT,OAAO,EAAE,EAAE,CAAC;IAE9BuD,IAAI,CAACd,IAAI,CAACvC,GAAG,EAAEF,OAAO,CAAC;IACvBA,OAAO,IAAIuD,IAAI,CAAC/C,MAAM;IAEtB;IACAN,GAAG,CAACa,aAAa,CAAC0C,MAAM,CAACjD,MAAM,EAAE,EAAE,CAAC;IACpCN,GAAG,CAACa,aAAa,CAAC0C,MAAM,CAACjD,MAAM,EAAE,EAAE,CAAC;IACpCN,GAAG,CAACO,aAAa,CAACT,OAAO,EAAE,EAAE,CAAC;IAE9ByD,MAAM,CAAChB,IAAI,CAACvC,GAAG,EAAEF,OAAO,CAAC;IACzBA,OAAO,IAAIyD,MAAM,CAACjD,MAAM;GACxB,MAAM;IACN,IAAImD,MAAM,GAAGhE,IAAI,CAACiE,YAAY,CAACV,QAAQ,CAAC;MACvCC,QAAQ,GAAGxD,IAAI,CAACyD,cAAc,CAACF,QAAQ,CAAC;MACxCW,EAAE,GAAGlE,IAAI,CAACmE,gBAAgB,CAACd,YAAY,CAAChB,SAAS,EAAE2B,MAAM,CAAC;MAC1DI,IAAI,GAAGpE,IAAI,CAACqE,kBAAkB,CAAChB,YAAY,CAAChB,SAAS,EAAEmB,QAAQ,CAAC;IAEjE;IACAjD,GAAG,CAACa,aAAa,CAAC8C,EAAE,CAACrD,MAAM,EAAE,EAAE,CAAC;IAChCN,GAAG,CAACa,aAAa,CAAC8C,EAAE,CAACrD,MAAM,EAAE,EAAE,CAAC;IAChCN,GAAG,CAACO,aAAa,CAACT,OAAO,EAAE,EAAE,CAAC;IAE9B6D,EAAE,CAACpB,IAAI,CAACvC,GAAG,EAAEF,OAAO,CAAC;IACrBA,OAAO,IAAI6D,EAAE,CAACrD,MAAM;IAEpB;IACAN,GAAG,CAACa,aAAa,CAACgD,IAAI,CAACvD,MAAM,EAAE,EAAE,CAAC;IAClCN,GAAG,CAACa,aAAa,CAACgD,IAAI,CAACvD,MAAM,EAAE,EAAE,CAAC;IAClCN,GAAG,CAACO,aAAa,CAACT,OAAO,EAAE,EAAE,CAAC;IAE9B+D,IAAI,CAACtB,IAAI,CAACvC,GAAG,EAAEF,OAAO,CAAC;IACvBA,OAAO,IAAI+D,IAAI,CAACvD,MAAM;;EAGvB;EACAN,GAAG,CAACa,aAAa,CAACiC,YAAY,CAAClB,QAAQ,KAAK,OAAO,GAAG/B,MAAM,CAACS,MAAM,GAAGT,MAAM,CAACS,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC;EAC5FN,GAAG,CAACa,aAAa,CAACiC,YAAY,CAAClB,QAAQ,KAAK,OAAO,GAAG/B,MAAM,CAACS,MAAM,GAAGT,MAAM,CAACS,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC;EAC5FN,GAAG,CAACO,aAAa,CAACT,OAAO,EAAE,EAAE,CAAC;EAE9BA,OAAO,IAAIE,GAAG,CAACK,KAAK,CAACR,MAAM,EAAEC,OAAO,EAAEgD,YAAY,CAAClB,QAAQ,CAAC;EAE5D;EACA5B,GAAG,CAACa,aAAa,CAACiC,YAAY,CAAClB,QAAQ,KAAK,OAAO,GAAGmB,QAAQ,CAACzC,MAAM,GAAGyC,QAAQ,CAACzC,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC;EAChGN,GAAG,CAACa,aAAa,CAACiC,YAAY,CAAClB,QAAQ,KAAK,OAAO,GAAGmB,QAAQ,CAACzC,MAAM,GAAGyC,QAAQ,CAACzC,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC;EAChGN,GAAG,CAACO,aAAa,CAACT,OAAO,EAAE,EAAE,CAAC;EAE9BA,OAAO,IAAIE,GAAG,CAACK,KAAK,CAAC0C,QAAQ,EAAEjD,OAAO,EAAEgD,YAAY,CAAClB,QAAQ,CAAC;EAE9D;EACA5B,GAAG,CAACa,aAAa,CAACiC,YAAY,CAAClB,QAAQ,KAAK,OAAO,GAAGhC,WAAW,CAACU,MAAM,GAAGV,WAAW,CAACU,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC;EACtGN,GAAG,CAACa,aAAa,CAACiC,YAAY,CAAClB,QAAQ,KAAK,OAAO,GAAGhC,WAAW,CAACU,MAAM,GAAGV,WAAW,CAACU,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC;EACtGN,GAAG,CAACO,aAAa,CAACT,OAAO,EAAE,EAAE,CAAC;EAE9BA,OAAO,IAAIE,GAAG,CAACK,KAAK,CAACT,WAAW,EAAEE,OAAO,EAAEgD,YAAY,CAAClB,QAAQ,CAAC;EAEjE,IAAIkB,YAAY,CAACjB,OAAO,KAAK,CAAC,EAAE;IAC/B;IACA7B,GAAG,CAACa,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC;IACxBb,GAAG,CAACa,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC;IACxBb,GAAG,CAACO,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC;IAExB;IACAP,GAAG,CAACO,aAAa,CAACuC,YAAY,CAACtD,KAAK,EAAE,EAAE,CAAC;;EAG1C,OAAO,OAAO,GAAGQ,GAAG,CAACc,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAEhB,OAAO,CAAC;AACpD;AAEAiE,MAAM,CAACC,OAAO,GAAG;EAChBrE,kBAAkB,EAAAA,kBAAA;EAClBoB,kBAAkB,EAAAA,kBAAA;EAClB8B,kBAAkB,EAAAA;CAClB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}