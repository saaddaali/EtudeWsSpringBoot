{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api\"; // URL de votre backend Spring Boot\n\nexport const reservationService = {\n  // Créer une réservation\n  createReservation: async reservationData => {\n    try {\n      const response = await axios.post(`${API_URL}/reservations`, reservationData);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error(\"Erreur lors de la création:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  },\n  // Récupérer toutes les réservations\n  getReservations: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Erreur lors de la récupération:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  },\n  // Mettre à jour une réservation\n  updateReservation: async (id, reservationData) => {\n    try {\n      const response = await axios.put(`${API_URL}/reservations/${id}`, reservationData);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Erreur lors de la mise à jour:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw error;\n    }\n  },\n  // Supprimer une réservation\n  deleteReservation: async id => {\n    try {\n      await axios.delete(`${API_URL}/reservations/${id}`);\n      return true;\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Erreur lors de la suppression:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      throw error;\n    }\n  },\n  // Obtenir une réservation par ID (nouveau)\n  getReservationById: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      console.error(\"Erreur lors de la récupération:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","reservationService","createReservation","reservationData","response","post","data","error","_error$response","console","message","getReservations","get","_error$response2","updateReservation","id","put","_error$response3","deleteReservation","delete","_error$response4","getReservationById","_error$response5"],"sources":["/Users/soukaina/Desktop/hotel-reservation-management-rest/frontend/src/services/reservationService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api\"; // URL de votre backend Spring Boot\n\nexport const reservationService = {\n  // Créer une réservation\n  createReservation: async (reservationData) => {\n    try {\n      const response = await axios.post(\n        `${API_URL}/reservations`,\n        reservationData\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la création:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n\n  // Récupérer toutes les réservations\n  getReservations: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations`);\n      return response.data;\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la récupération:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n\n  // Mettre à jour une réservation\n  updateReservation: async (id, reservationData) => {\n    try {\n      const response = await axios.put(\n        `${API_URL}/reservations/${id}`,\n        reservationData\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la mise à jour:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n\n  // Supprimer une réservation\n  deleteReservation: async (id) => {\n    try {\n      await axios.delete(`${API_URL}/reservations/${id}`);\n      return true;\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la suppression:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n\n  // Obtenir une réservation par ID (nouveau)\n  getReservationById: async (id) => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la récupération:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,OAAO,MAAMC,kBAAkB,GAAG;EAChC;EACAC,iBAAiB,EAAE,MAAOC,eAAe,IAAK;IAC5C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,GAAGL,OAAO,eAAe,EACzBG,eACF,CAAC;MACD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CACX,6BAA6B,EAC7B,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAChC,CAAC;MACD,MAAMH,KAAK;IACb;EACF,CAAC;EAED;EACAI,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,eAAe,CAAC;MAC3D,OAAOI,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAM,gBAAA;MACdJ,OAAO,CAACF,KAAK,CACX,iCAAiC,EACjC,EAAAM,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,KAAIC,KAAK,CAACG,OAChC,CAAC;MACD,MAAMH,KAAK;IACb;EACF,CAAC;EAED;EACAO,iBAAiB,EAAE,MAAAA,CAAOC,EAAE,EAAEZ,eAAe,KAAK;IAChD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACiB,GAAG,CAC9B,GAAGhB,OAAO,iBAAiBe,EAAE,EAAE,EAC/BZ,eACF,CAAC;MACD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAU,gBAAA;MACdR,OAAO,CAACF,KAAK,CACX,gCAAgC,EAChC,EAAAU,gBAAA,GAAAV,KAAK,CAACH,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBX,IAAI,KAAIC,KAAK,CAACG,OAChC,CAAC;MACD,MAAMH,KAAK;IACb;EACF,CAAC;EAED;EACAW,iBAAiB,EAAE,MAAOH,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMhB,KAAK,CAACoB,MAAM,CAAC,GAAGnB,OAAO,iBAAiBe,EAAE,EAAE,CAAC;MACnD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOR,KAAK,EAAE;MAAA,IAAAa,gBAAA;MACdX,OAAO,CAACF,KAAK,CACX,gCAAgC,EAChC,EAAAa,gBAAA,GAAAb,KAAK,CAACH,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBd,IAAI,KAAIC,KAAK,CAACG,OAChC,CAAC;MACD,MAAMH,KAAK;IACb;EACF,CAAC;EAED;EACAc,kBAAkB,EAAE,MAAON,EAAE,IAAK;IAChC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,iBAAiBe,EAAE,EAAE,CAAC;MACjE,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAe,gBAAA;MACdb,OAAO,CAACF,KAAK,CACX,iCAAiC,EACjC,EAAAe,gBAAA,GAAAf,KAAK,CAACH,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBhB,IAAI,KAAIC,KAAK,CAACG,OAChC,CAAC;MACD,MAAMH,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}