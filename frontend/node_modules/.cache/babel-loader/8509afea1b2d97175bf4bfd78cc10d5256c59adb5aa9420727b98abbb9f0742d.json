{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NamespaceContext = void 0;\n/**\n * Scope for XML namespaces\n * @param {NamespaceScope} [parent] Parent scope\n * @returns {NamespaceScope}\n * @constructor\n */\nclass NamespaceScope {\n  constructor(parent) {\n    this.parent = parent;\n    this.namespaces = {};\n  }\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n  getNamespaceURI(prefix, localOnly) {\n    switch (prefix) {\n      case 'xml':\n        return 'http://www.w3.org/XML/1998/namespace';\n      case 'xmlns':\n        return 'http://www.w3.org/2000/xmlns/';\n      default:\n        const nsUri = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (nsUri != null) {\n          return nsUri.uri;\n        } else if (!localOnly && this.parent) {\n          return this.parent.getNamespaceURI(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n  getNamespaceMapping(prefix) {\n    switch (prefix) {\n      case 'xml':\n        return {\n          uri: 'http://www.w3.org/XML/1998/namespace',\n          prefix: 'xml',\n          declared: true\n        };\n      case 'xmlns':\n        return {\n          uri: 'http://www.w3.org/2000/xmlns/',\n          prefix: 'xmlns',\n          declared: true\n        };\n      default:\n        const mapping = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (mapping != null) {\n          return mapping;\n        } else if (this.parent) {\n          return this.parent.getNamespaceMapping(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsUri Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefix(nsUri, localOnly) {\n    switch (nsUri) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (const p in this.namespaces) {\n          if (this.namespaces[p].uri === nsUri) {\n            return p;\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefix(nsUri);\n        } else {\n          return null;\n        }\n    }\n  }\n}\n/**\n * Namespace context that manages hierarchical scopes\n * @returns {NamespaceContext}\n * @constructor\n */\nclass NamespaceContext {\n  constructor() {\n    this.scopes = [];\n    this.pushContext();\n    this.prefixCount = 0;\n  }\n  /**\n   * Add a prefix/URI namespace mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsUri Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {boolean} true if the mapping is added or false if the mapping\n   * already exists\n   */\n  addNamespace(prefix, nsUri, localOnly) {\n    if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n      return false;\n    }\n    if (this.currentScope) {\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: false\n      };\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Push a scope into the context\n   * @returns {NamespaceScope} The current scope\n   */\n  pushContext() {\n    const scope = new NamespaceScope(this.currentScope);\n    this.scopes.push(scope);\n    this.currentScope = scope;\n    return scope;\n  }\n  /**\n   * Pop a scope out of the context\n   * @returns {NamespaceScope} The removed scope\n   */\n  popContext() {\n    const scope = this.scopes.pop();\n    if (scope) {\n      this.currentScope = scope.parent;\n    } else {\n      this.currentScope = null;\n    }\n    return scope;\n  }\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n  getNamespaceURI(prefix, localOnly) {\n    return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n  }\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefix(nsUri, localOnly) {\n    return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n  }\n  /**\n   * Register a namespace\n   * @param {String} nsUri Namespace URI\n   * @returns {String} The matching or generated namespace prefix\n   */\n  registerNamespace(nsUri) {\n    let prefix = this.getPrefix(nsUri);\n    if (prefix) {\n      // If the namespace has already mapped to a prefix\n      return prefix;\n    } else {\n      // Try to generate a unique namespace\n      while (true) {\n        prefix = 'ns' + ++this.prefixCount;\n        if (!this.getNamespaceURI(prefix)) {\n          // The prefix is not used\n          break;\n        }\n      }\n    }\n    this.addNamespace(prefix, nsUri, true);\n    return prefix;\n  }\n  /**\n   * Declare a namespace prefix/uri mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsUri Namespace URI\n   * @returns {Boolean} true if the declaration is created\n   */\n  declareNamespace(prefix, nsUri) {\n    if (this.currentScope) {\n      const mapping = this.currentScope.getNamespaceMapping(prefix);\n      if (mapping && mapping.uri === nsUri && mapping.declared) {\n        return false;\n      }\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: true\n      };\n      return true;\n    }\n    return false;\n  }\n}\nexports.NamespaceContext = NamespaceContext;","map":{"version":3,"names":["NamespaceScope","constructor","parent","namespaces","getNamespaceURI","prefix","localOnly","nsUri","uri","getNamespaceMapping","declared","mapping","getPrefix","p","NamespaceContext","scopes","pushContext","prefixCount","addNamespace","currentScope","scope","push","popContext","pop","registerNamespace","declareNamespace","exports"],"sources":["../src/nscontext.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}