{"ast":null,"code":"import { Client } from \"soap\";\nconst WSDL_URL = \"http://localhost:8080/services/ws?wsdl\";\nexport const reservationService = {\n  client: null,\n  async initClient() {\n    if (!this.client) {\n      this.client = await new Promise((resolve, reject) => {\n        Client.createClient(WSDL_URL, (err, client) => {\n          if (err) reject(err);\n          resolve(client);\n        });\n      });\n    }\n    return this.client;\n  },\n  async getReservations() {\n    const client = await this.initClient();\n    const result = await client.getAllReservationsAsync({});\n    return this.transformReservations(result[0].return);\n  },\n  async createReservation(formData) {\n    const client = await this.initClient();\n    const [firstName, ...lastNameParts] = formData.clientName.split(\" \");\n    const soapData = {\n      dateDebut: formData.startDate,\n      dateFin: formData.endDate,\n      client: {\n        nom: lastNameParts.join(\" \"),\n        prenom: firstName,\n        email: formData.email,\n        telephone: formData.phone\n      },\n      chambre: {\n        type: formData.roomType,\n        disponible: true\n      }\n    };\n    const result = await client.createReservationAsync(soapData);\n    return this.transformReservation(result[0].return);\n  },\n  async getReservationById(id) {\n    const client = await this.initClient();\n    const result = await client.getReservationByIdAsync({\n      id\n    });\n    return this.transformReservation(result[0].return);\n  },\n  async deleteReservation(id) {\n    const client = await this.initClient();\n    const result = await client.deleteReservationAsync({\n      id\n    });\n    return result[0].return;\n  },\n  transformReservation(data) {\n    var _data$client, _data$client2, _data$client3, _data$client4, _data$chambre;\n    return {\n      id: data.id,\n      clientName: `${((_data$client = data.client) === null || _data$client === void 0 ? void 0 : _data$client.prenom) || \"\"} ${((_data$client2 = data.client) === null || _data$client2 === void 0 ? void 0 : _data$client2.nom) || \"\"}`.trim(),\n      email: ((_data$client3 = data.client) === null || _data$client3 === void 0 ? void 0 : _data$client3.email) || \"\",\n      phone: ((_data$client4 = data.client) === null || _data$client4 === void 0 ? void 0 : _data$client4.telephone) || \"\",\n      roomType: ((_data$chambre = data.chambre) === null || _data$chambre === void 0 ? void 0 : _data$chambre.type) || \"SIMPLE\",\n      startDate: data.dateDebut || \"\",\n      endDate: data.dateFin || \"\",\n      preferences: data.preferences || \"\"\n    };\n  },\n  transformReservations(data) {\n    return Array.isArray(data) ? data.map(item => this.transformReservation(item)) : [];\n  }\n};","map":{"version":3,"names":["Client","WSDL_URL","reservationService","client","initClient","Promise","resolve","reject","createClient","err","getReservations","result","getAllReservationsAsync","transformReservations","return","createReservation","formData","firstName","lastNameParts","clientName","split","soapData","dateDebut","startDate","dateFin","endDate","nom","join","prenom","email","telephone","phone","chambre","type","roomType","disponible","createReservationAsync","transformReservation","getReservationById","id","getReservationByIdAsync","deleteReservation","deleteReservationAsync","data","_data$client","_data$client2","_data$client3","_data$client4","_data$chambre","trim","preferences","Array","isArray","map","item"],"sources":["/Users/soukaina/Desktop/hotel-reservation-management-soap/frontend-soapt/src/services/reservationService.js"],"sourcesContent":["import { Client } from \"soap\";\n\nconst WSDL_URL = \"http://localhost:8080/services/ws?wsdl\";\n\nexport const reservationService = {\n  client: null,\n\n  async initClient() {\n    if (!this.client) {\n      this.client = await new Promise((resolve, reject) => {\n        Client.createClient(WSDL_URL, (err, client) => {\n          if (err) reject(err);\n          resolve(client);\n        });\n      });\n    }\n    return this.client;\n  },\n\n  async getReservations() {\n    const client = await this.initClient();\n    const result = await client.getAllReservationsAsync({});\n    return this.transformReservations(result[0].return);\n  },\n\n  async createReservation(formData) {\n    const client = await this.initClient();\n    const [firstName, ...lastNameParts] = formData.clientName.split(\" \");\n\n    const soapData = {\n      dateDebut: formData.startDate,\n      dateFin: formData.endDate,\n      client: {\n        nom: lastNameParts.join(\" \"),\n        prenom: firstName,\n        email: formData.email,\n        telephone: formData.phone,\n      },\n      chambre: {\n        type: formData.roomType,\n        disponible: true,\n      },\n    };\n\n    const result = await client.createReservationAsync(soapData);\n    return this.transformReservation(result[0].return);\n  },\n\n  async getReservationById(id) {\n    const client = await this.initClient();\n    const result = await client.getReservationByIdAsync({ id });\n    return this.transformReservation(result[0].return);\n  },\n\n  async deleteReservation(id) {\n    const client = await this.initClient();\n    const result = await client.deleteReservationAsync({ id });\n    return result[0].return;\n  },\n\n  transformReservation(data) {\n    return {\n      id: data.id,\n      clientName: `${data.client?.prenom || \"\"} ${\n        data.client?.nom || \"\"\n      }`.trim(),\n      email: data.client?.email || \"\",\n      phone: data.client?.telephone || \"\",\n      roomType: data.chambre?.type || \"SIMPLE\",\n      startDate: data.dateDebut || \"\",\n      endDate: data.dateFin || \"\",\n      preferences: data.preferences || \"\",\n    };\n  },\n\n  transformReservations(data) {\n    return Array.isArray(data)\n      ? data.map((item) => this.transformReservation(item))\n      : [];\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}