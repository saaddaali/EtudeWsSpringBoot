{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImportElement = exports.IncludeElement = exports.BodyElement = exports.DefinitionsElement = exports.ServiceElement = exports.PortElement = exports.BindingElement = exports.PortTypeElement = exports.OperationElement = exports.TypesElement = exports.SchemaElement = exports.DocumentationElement = exports.MessageElement = exports.AllElement = exports.AttributeElement = exports.SequenceElement = exports.SimpleContentElement = exports.ComplexContentElement = exports.ComplexTypeElement = exports.EnumerationElement = exports.ChoiceElement = exports.ExtensionElement = exports.RestrictionElement = exports.SimpleTypeElement = exports.OutputElement = exports.InputElement = exports.AnyElement = exports.ElementElement = exports.UnexpectedElement = exports.Element = void 0;\nconst assert_1 = require(\"assert\");\nconst debug_1 = require(\"debug\");\nconst _ = require(\"lodash\");\nconst utils_1 = require(\"../utils\");\nconst debug = (0, debug_1.default)('node-soap');\nconst Primitives = {\n  string: 1,\n  boolean: 1,\n  decimal: 1,\n  float: 1,\n  double: 1,\n  anyType: 1,\n  byte: 1,\n  int: 1,\n  long: 1,\n  short: 1,\n  negativeInteger: 1,\n  nonNegativeInteger: 1,\n  positiveInteger: 1,\n  nonPositiveInteger: 1,\n  unsignedByte: 1,\n  unsignedInt: 1,\n  unsignedLong: 1,\n  unsignedShort: 1,\n  duration: 0,\n  dateTime: 0,\n  time: 0,\n  date: 0,\n  gYearMonth: 0,\n  gYear: 0,\n  gMonthDay: 0,\n  gDay: 0,\n  gMonth: 0,\n  hexBinary: 0,\n  base64Binary: 0,\n  anyURI: 0,\n  QName: 0,\n  NOTATION: 0\n};\nclass Element {\n  constructor(nsName, attrs, options, schemaAttrs) {\n    this.allowedChildren = {};\n    this.children = [];\n    const parts = (0, utils_1.splitQName)(nsName);\n    this.nsName = nsName;\n    this.prefix = parts.prefix;\n    this.name = parts.name;\n    this.children = [];\n    this.xmlns = {};\n    this.schemaXmlns = {};\n    this._initializeOptions(options);\n    for (const key in attrs) {\n      const match = /^xmlns:?(.*)$/.exec(key);\n      if (match) {\n        this.xmlns[match[1] ? match[1] : utils_1.TNS_PREFIX] = attrs[key];\n      } else {\n        if (key === 'value') {\n          this[this.valueKey] = attrs[key];\n        } else {\n          this['$' + key] = attrs[key];\n        }\n      }\n    }\n    for (const schemaKey in schemaAttrs) {\n      const schemaMatch = /^xmlns:?(.*)$/.exec(schemaKey);\n      if (schemaMatch && schemaMatch[1]) {\n        this.schemaXmlns[schemaMatch[1]] = schemaAttrs[schemaKey];\n      }\n    }\n    if (this.$targetNamespace !== undefined) {\n      // Add targetNamespace to the mapping\n      this.xmlns[utils_1.TNS_PREFIX] = this.$targetNamespace;\n    }\n    this.init();\n  }\n  deleteFixedAttrs() {\n    this.children && this.children.length === 0 && delete this.children;\n    this.xmlns && Object.keys(this.xmlns).length === 0 && delete this.xmlns;\n    delete this.nsName;\n    delete this.prefix;\n    delete this.name;\n  }\n  startElement(stack, nsName, attrs, options, schemaXmlns) {\n    if (!this.allowedChildren) {\n      return;\n    }\n    let ChildClass = this.allowedChildren[(0, utils_1.splitQName)(nsName).name];\n    if (ChildClass == null && !this.strict) {\n      ChildClass = UnexpectedElement;\n    }\n    if (ChildClass) {\n      const child = new ChildClass(nsName, attrs, options, schemaXmlns);\n      child.init();\n      stack.push(child);\n    } else {\n      this.unexpected(nsName);\n    }\n  }\n  endElement(stack, nsName) {\n    if (this.nsName === nsName) {\n      if (stack.length < 2) {\n        return;\n      }\n      const parent = stack[stack.length - 2];\n      if (this !== stack[0]) {\n        _.defaultsDeep(stack[0].xmlns, this.xmlns);\n        // delete this.xmlns;\n        parent.children.push(this);\n        parent.addChild(this);\n      }\n      stack.pop();\n    }\n  }\n  addChild(child) {\n    return;\n  }\n  unexpected(name) {\n    throw new Error('Found unexpected element (' + name + ') inside ' + this.nsName);\n  }\n  description(definitions, xmlns) {\n    return this.$name || this.name;\n  }\n  init() {}\n  _initializeOptions(options) {\n    if (options) {\n      this.valueKey = options.valueKey || '$value';\n      this.xmlKey = options.xmlKey || '$xml';\n      this.ignoredNamespaces = options.ignoredNamespaces || [];\n      this.strict = options.strict || false;\n    } else {\n      this.valueKey = '$value';\n      this.xmlKey = '$xml';\n      this.ignoredNamespaces = [];\n      this.strict = false;\n    }\n  }\n}\nexports.Element = Element;\nclass UnexpectedElement extends Element {\n  startElement(stack, nsName, attrs, options, schemaXmlns) {\n    const child = new UnexpectedElement(nsName, attrs, options, schemaXmlns);\n    child.init();\n    stack.push(child);\n  }\n}\nexports.UnexpectedElement = UnexpectedElement;\nclass ElementElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['annotation', 'complexType', 'simpleType']);\n  }\n  description(definitions, xmlns) {\n    let element = {};\n    let name = this.$name;\n    // Check minOccurs / maxOccurs attributes to see if this element is a list\n    // These are default values for an element\n    let minOccurs = 1;\n    let maxOccurs = 1;\n    if (this.$maxOccurs === 'unbounded') {\n      maxOccurs = Infinity;\n    } else if (Boolean(this.$maxOccurs)) {\n      maxOccurs = parseInt(this.$maxOccurs, 10);\n    }\n    if (Boolean(this.$minOccurs)) {\n      minOccurs = parseInt(this.$minOccurs, 10);\n    }\n    const isMany = maxOccurs > 1;\n    if (isMany && name) {\n      name += '[]';\n    }\n    if (xmlns && xmlns[utils_1.TNS_PREFIX]) {\n      this.$targetNamespace = xmlns[utils_1.TNS_PREFIX];\n    }\n    let type = this.$type || this.$ref;\n    if (type) {\n      type = (0, utils_1.splitQName)(type);\n      const typeName = type.name;\n      const ns = xmlns && xmlns[type.prefix] || this.xmlns[type.prefix] || (definitions.xmlns[type.prefix] !== undefined || definitions.xmlns[this.targetNSAlias] !== undefined) && this.schemaXmlns[type.prefix] || definitions.xmlns[type.prefix];\n      const schema = definitions.schemas[ns];\n      const typeElement = schema && (this.$type ? schema.complexTypes[typeName] || schema.types[typeName] : schema.elements[typeName]);\n      const typeStorage = this.$type ? definitions.descriptions.types : definitions.descriptions.elements;\n      if (ns && definitions.schemas[ns]) {\n        xmlns = definitions.schemas[ns].xmlns;\n      }\n      if (typeElement && !(typeName in Primitives)) {\n        if (!(typeName in typeStorage)) {\n          let elem = {};\n          typeStorage[typeName] = elem;\n          const description = typeElement.description(definitions, xmlns);\n          if (typeof description === 'string') {\n            elem = description;\n          } else {\n            Object.keys(description).forEach(key => {\n              elem[key] = description[key];\n            });\n            const $attributes = description[AttributeElement.Symbol];\n            if ($attributes) {\n              elem[AttributeElement.Symbol] = $attributes;\n            }\n          }\n          if (this.$ref) {\n            element = elem;\n          } else {\n            element[name] = elem;\n          }\n          if (typeof elem === 'object') {\n            elem.targetNSAlias = type.prefix;\n            elem.targetNamespace = ns;\n          }\n          typeStorage[typeName] = elem;\n        } else {\n          if (this.$ref) {\n            // Differentiate between a ref for an array of elements and a ref for a single element\n            if (isMany) {\n              const refTypeName = typeName + '[]';\n              typeStorage[refTypeName] = typeStorage[typeName];\n              element[refTypeName] = typeStorage[refTypeName];\n            } else {\n              element = typeStorage[typeName];\n            }\n          } else {\n            element[name] = typeStorage[typeName];\n          }\n        }\n      } else {\n        element[name] = this.$type;\n      }\n    } else {\n      const children = this.children;\n      element[name] = {};\n      for (const child of children) {\n        if (child instanceof ComplexTypeElement || child instanceof SimpleTypeElement) {\n          element[name] = child.description(definitions, xmlns);\n        }\n      }\n    }\n    return element;\n  }\n}\nexports.ElementElement = ElementElement;\nclass AnyElement extends Element {}\nexports.AnyElement = AnyElement;\nclass InputElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['body', 'documentation', 'header', 'SecuritySpecRef']);\n  }\n  addChild(child) {\n    if (child instanceof BodyElement) {\n      this.use = child.$use;\n      if (this.use === 'encoded') {\n        this.encodingStyle = child.$encodingStyle;\n      }\n      this.children.pop();\n    }\n  }\n}\nexports.InputElement = InputElement;\nclass OutputElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['body', 'documentation', 'header', 'SecuritySpecRef']);\n  }\n  addChild(child) {\n    if (child instanceof BodyElement) {\n      this.use = child.$use;\n      if (this.use === 'encoded') {\n        this.encodingStyle = child.$encodingStyle;\n      }\n      this.children.pop();\n    }\n  }\n}\nexports.OutputElement = OutputElement;\nclass SimpleTypeElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['restriction']);\n  }\n  description(definitions) {\n    for (const child of this.children) {\n      if (child instanceof RestrictionElement) {\n        return [this.$name, child.description()].filter(Boolean).join('|');\n      }\n    }\n    return {};\n  }\n}\nexports.SimpleTypeElement = SimpleTypeElement;\nclass RestrictionElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['all', 'choice', 'enumeration', 'sequence', 'attribute']);\n  }\n  description(definitions, xmlns) {\n    const children = this.children;\n    let desc;\n    let isFirstChild = false;\n    const $attributes = {};\n    for (const child of children) {\n      if (child instanceof AttributeElement) {\n        $attributes[child.$name] = child.description(definitions);\n        continue;\n      }\n      if (!isFirstChild && (child instanceof SequenceElement || child instanceof ChoiceElement)) {\n        isFirstChild = true;\n        desc = child.description(definitions, xmlns);\n      }\n    }\n    if (Object.keys($attributes).length > 0) {\n      desc = desc ?? {};\n      desc[AttributeElement.Symbol] = $attributes;\n    }\n    if (desc && this.$base) {\n      const type = (0, utils_1.splitQName)(this.$base);\n      const typeName = type.name;\n      const ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix];\n      const schema = definitions.schemas[ns];\n      const typeElement = schema && (schema.complexTypes[typeName] || schema.types[typeName] || schema.elements[typeName]);\n      desc.getBase = () => {\n        return typeElement.description(definitions, schema.xmlns);\n      };\n      if (typeElement) {\n        const baseDescription = typeElement.description(definitions, schema.xmlns);\n        if (baseDescription[AttributeElement.Symbol]) {\n          _.defaults($attributes, baseDescription[AttributeElement.Symbol]);\n        }\n        desc = _.defaults(desc, baseDescription);\n      }\n      return desc;\n    }\n    const restrictions = this.children.map(child => {\n      return child.description();\n    }).join(',');\n    return [this.$base, restrictions].filter(Boolean).join('|');\n  }\n}\nexports.RestrictionElement = RestrictionElement;\nclass ExtensionElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['all', 'choice', 'sequence']);\n  }\n  description(definitions, xmlns) {\n    let desc = {};\n    for (const child of this.children) {\n      if (child instanceof SequenceElement || child instanceof ChoiceElement) {\n        desc = child.description(definitions, xmlns);\n      }\n    }\n    if (this.$base) {\n      const type = (0, utils_1.splitQName)(this.$base);\n      const typeName = type.name;\n      const ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix];\n      const schema = definitions.schemas[ns];\n      if (typeName in Primitives) {\n        return this.$base;\n      } else {\n        const typeElement = schema && (schema.complexTypes[typeName] || schema.types[typeName] || schema.elements[typeName]);\n        if (typeElement) {\n          const base = typeElement.description(definitions, schema.xmlns);\n          desc = typeof base === 'string' ? base : _.defaults(base, desc);\n        }\n      }\n    }\n    return desc;\n  }\n}\nexports.ExtensionElement = ExtensionElement;\nclass ChoiceElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['any', 'choice', 'element', 'sequence']);\n  }\n  description(definitions, xmlns) {\n    const choice = {};\n    for (const child of this.children) {\n      const description = child.description(definitions, xmlns);\n      for (const key in description) {\n        choice[key] = description[key];\n      }\n    }\n    return choice;\n  }\n}\nexports.ChoiceElement = ChoiceElement;\nclass EnumerationElement extends Element {\n  // no children\n  description() {\n    return this[this.valueKey];\n  }\n}\nexports.EnumerationElement = EnumerationElement;\nclass ComplexTypeElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['all', 'annotation', 'choice', 'complexContent', 'sequence', 'simpleContent', 'attribute']);\n  }\n  description(definitions, xmlns) {\n    let ret = {};\n    let isFirstChild = false;\n    const $attributes = {};\n    const children = this.children || [];\n    for (const child of children) {\n      if (child instanceof AttributeElement) {\n        $attributes[child.$name] = child.description(definitions);\n        continue;\n      }\n      if (!isFirstChild && (child instanceof ChoiceElement || child instanceof SequenceElement || child instanceof AllElement || child instanceof SimpleContentElement || child instanceof ComplexContentElement)) {\n        isFirstChild = true;\n        ret = child.description(definitions, xmlns);\n      }\n    }\n    if (Object.keys($attributes).length > 0) {\n      ret[AttributeElement.Symbol] = $attributes;\n    }\n    return ret;\n  }\n}\nexports.ComplexTypeElement = ComplexTypeElement;\nclass ComplexContentElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['extension', 'restriction']);\n  }\n  description(definitions, xmlns) {\n    for (const child of this.children) {\n      if (child instanceof ExtensionElement || child instanceof RestrictionElement) {\n        return child.description(definitions, xmlns);\n      }\n    }\n    return {};\n  }\n}\nexports.ComplexContentElement = ComplexContentElement;\nclass SimpleContentElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['extension']);\n  }\n  description(definitions, xmlns) {\n    for (const child of this.children) {\n      if (child instanceof ExtensionElement) {\n        return child.description(definitions, xmlns);\n      }\n    }\n    return {};\n  }\n}\nexports.SimpleContentElement = SimpleContentElement;\nclass SequenceElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['any', 'choice', 'element', 'sequence']);\n  }\n  description(definitions, xmlns) {\n    const sequence = {};\n    for (const child of this.children) {\n      if (child instanceof AnyElement) {\n        continue;\n      }\n      const description = child.description(definitions, xmlns);\n      for (const key in description) {\n        sequence[key] = description[key];\n      }\n    }\n    return sequence;\n  }\n}\nexports.SequenceElement = SequenceElement;\nclass AttributeElement extends Element {\n  description(definitions) {\n    return {\n      type: this.$type,\n      required: this.$use === 'required'\n    };\n  }\n}\nexports.AttributeElement = AttributeElement;\nAttributeElement.Symbol = Symbol('$attributes');\nclass AllElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['choice', 'element']);\n  }\n  description(definitions, xmlns) {\n    const sequence = {};\n    for (const child of this.children) {\n      if (child instanceof AnyElement) {\n        continue;\n      }\n      const description = child.description(definitions, xmlns);\n      for (const key in description) {\n        sequence[key] = description[key];\n      }\n    }\n    return sequence;\n  }\n}\nexports.AllElement = AllElement;\nclass MessageElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['part', 'documentation']);\n    this.element = null;\n    this.parts = null;\n  }\n  postProcess(definitions) {\n    let part = null;\n    const children = this.children || [];\n    for (const child of children) {\n      if (child.name === 'part') {\n        part = child;\n        break;\n      }\n    }\n    if (!part) {\n      return;\n    }\n    if (part.$element) {\n      let lookupTypes = [];\n      delete this.parts;\n      const nsName = (0, utils_1.splitQName)(part.$element);\n      const ns = nsName.prefix;\n      let schema = definitions.schemas[definitions.xmlns[ns]];\n      this.element = schema.elements[nsName.name];\n      if (!this.element) {\n        debug(nsName.name + ' is not present in wsdl and cannot be processed correctly.');\n        return;\n      }\n      this.element.targetNSAlias = ns;\n      this.element.targetNamespace = definitions.xmlns[ns];\n      // set the optional $lookupType to be used within `client#_invoke()` when\n      // calling `wsdl#objectToDocumentXML()\n      this.element.$lookupType = part.$element;\n      const elementChildren = this.element.children;\n      // get all nested lookup types (only complex types are followed)\n      if (elementChildren.length > 0) {\n        for (const child of elementChildren) {\n          lookupTypes.push(this._getNestedLookupTypeString(child));\n        }\n      }\n      // if nested lookup types where found, prepare them for furter usage\n      if (lookupTypes.length > 0) {\n        lookupTypes = lookupTypes.join('_').split('_').filter(function removeEmptyLookupTypes(type) {\n          return type !== '^';\n        });\n        const schemaXmlns = definitions.schemas[this.element.targetNamespace].xmlns;\n        for (let i = 0; i < lookupTypes.length; i++) {\n          lookupTypes[i] = this._createLookupTypeObject(lookupTypes[i], schemaXmlns);\n        }\n      }\n      this.element.$lookupTypes = lookupTypes;\n      if (this.element.$type) {\n        const type = (0, utils_1.splitQName)(this.element.$type);\n        const typeNs = schema.xmlns && schema.xmlns[type.prefix] || definitions.xmlns[type.prefix];\n        if (typeNs) {\n          if (type.name in Primitives) {\n            // this.element = this.element.$type;\n          } else {\n            // first check local mapping of ns alias to namespace\n            schema = definitions.schemas[typeNs];\n            const ctype = schema.complexTypes[type.name] || schema.types[type.name] || schema.elements[type.name];\n            if (ctype) {\n              this.parts = ctype.description(definitions, schema.xmlns);\n            }\n          }\n        }\n      } else {\n        const method = this.element.description(definitions, schema.xmlns);\n        this.parts = method[nsName.name];\n      }\n      this.children.splice(0, 1);\n    } else {\n      // rpc encoding\n      this.parts = {};\n      delete this.element;\n      for (let i = 0; part = this.children[i]; i++) {\n        if (part.name === 'documentation') {\n          // <wsdl:documentation can be present under <wsdl:message>\n          continue;\n        }\n        (0, assert_1.ok)(part.name === 'part', 'Expected part element');\n        const nsName = (0, utils_1.splitQName)(part.$type);\n        const ns = definitions.xmlns[nsName.prefix];\n        const type = nsName.name;\n        const schemaDefinition = definitions.schemas[ns];\n        if (typeof schemaDefinition !== 'undefined') {\n          this.parts[part.$name] = definitions.schemas[ns].types[type] || definitions.schemas[ns].complexTypes[type];\n        } else {\n          this.parts[part.$name] = part.$type;\n        }\n        if (typeof this.parts[part.$name] === 'object') {\n          this.parts[part.$name].prefix = nsName.prefix;\n          this.parts[part.$name].xmlns = ns;\n        }\n        this.children.splice(i--, 1);\n      }\n    }\n    this.deleteFixedAttrs();\n  }\n  description(definitions) {\n    if (this.element) {\n      return this.element && this.element.description(definitions);\n    }\n    const desc = {};\n    desc[this.$name] = this.parts;\n    return desc;\n  }\n  /**\n   * Takes a given namespaced String(for example: 'alias:property') and creates a lookupType\n   * object for further use in as first (lookup) `parameterTypeObj` within the `objectToXML`\n   * method and provides an entry point for the already existing code in `findChildSchemaObject`.\n   *\n   * @method _createLookupTypeObject\n   * @param {String}            nsString          The NS String (for example \"alias:type\").\n   * @param {Object}            xmlns       The fully parsed `wsdl` definitions object (including all schemas).\n   * @returns {Object}\n   * @private\n   */\n  _createLookupTypeObject(nsString, xmlns) {\n    const splittedNSString = (0, utils_1.splitQName)(nsString);\n    const nsAlias = splittedNSString.prefix;\n    const splittedName = splittedNSString.name.split('#');\n    const type = splittedName[0];\n    const name = splittedName[1];\n    return {\n      $namespace: xmlns[nsAlias],\n      $type: nsAlias + ':' + type,\n      $name: name\n    };\n  }\n  /**\n   * Iterates through the element and every nested child to find any defined `$type`\n   * property and returns it in a underscore ('_') separated String (using '^' as default\n   * value if no `$type` property was found).\n   *\n   * @method _getNestedLookupTypeString\n   * @param {Object}            element         The element which (probably) contains nested `$type` values.\n   * @returns {String}\n   * @private\n   */\n  _getNestedLookupTypeString(element) {\n    let resolvedType = '^';\n    const excluded = this.ignoredNamespaces.concat('xs'); // do not process $type values wich start with\n    if (element.hasOwnProperty('$type') && typeof element.$type === 'string') {\n      if (excluded.indexOf(element.$type.split(':')[0]) === -1) {\n        resolvedType += '_' + element.$type + '#' + element.$name;\n      }\n    }\n    if (element.children.length > 0) {\n      element.children.forEach(child => {\n        const resolvedChildType = this._getNestedLookupTypeString(child).replace(/\\^_/, '');\n        if (resolvedChildType && typeof resolvedChildType === 'string') {\n          resolvedType += '_' + resolvedChildType;\n        }\n      });\n    }\n    return resolvedType;\n  }\n}\nexports.MessageElement = MessageElement;\nclass DocumentationElement extends Element {}\nexports.DocumentationElement = DocumentationElement;\nclass SchemaElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['complexType', 'element', 'import', 'include', 'simpleType']);\n    this.complexTypes = {};\n    this.types = {};\n    this.elements = {};\n    this.includes = [];\n  }\n  merge(source) {\n    (0, assert_1.ok)(source instanceof SchemaElement);\n    _.merge(this.complexTypes, source.complexTypes);\n    _.merge(this.types, source.types);\n    _.merge(this.elements, source.elements);\n    _.merge(this.xmlns, source.xmlns);\n    // Merge attributes from source without overwriting our's\n    _.merge(this, _.pickBy(source, (value, key) => {\n      return key.startsWith('$') && !this.hasOwnProperty(key);\n    }));\n    return this;\n  }\n  addChild(child) {\n    if (child.$name in Primitives) {\n      return;\n    }\n    if (child instanceof IncludeElement || child instanceof ImportElement) {\n      const location = child.$schemaLocation || child.$location;\n      if (location) {\n        this.includes.push({\n          namespace: child.$namespace || child.$targetNamespace || this.$targetNamespace,\n          location: location\n        });\n      }\n    } else if (child instanceof ComplexTypeElement) {\n      this.complexTypes[child.$name] = child;\n    } else if (child instanceof ElementElement) {\n      this.elements[child.$name] = child;\n    } else if (child instanceof SimpleTypeElement) {\n      this.types[child.$name] = child;\n    }\n    this.children.pop();\n    // child.deleteFixedAttrs();\n  }\n}\nexports.SchemaElement = SchemaElement;\nclass TypesElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['documentation', 'schema']);\n    this.schemas = {};\n  }\n  // fix#325\n  addChild(child) {\n    (0, assert_1.ok)(child instanceof SchemaElement);\n    const targetNamespace = child.$targetNamespace || child.includes[0]?.namespace;\n    if (!this.schemas.hasOwnProperty(targetNamespace)) {\n      this.schemas[targetNamespace] = child;\n    } else {\n      console.error('Target-Namespace \"' + targetNamespace + '\" already in use by another Schema!');\n    }\n  }\n}\nexports.TypesElement = TypesElement;\nclass OperationElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['documentation', 'fault', 'input', 'operation', 'output']);\n    this.input = null;\n    this.output = null;\n    this.inputSoap = null;\n    this.outputSoap = null;\n    this.style = '';\n    this.soapAction = '';\n  }\n  addChild(child) {\n    if (child instanceof OperationElement) {\n      this.soapAction = child.$soapAction || '';\n      this.style = child.$style || '';\n      this.children.pop();\n    }\n  }\n  postProcess(definitions, tag) {\n    const children = this.children;\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'input' && child.name !== 'output') {\n        continue;\n      }\n      if (tag === 'binding') {\n        this[child.name] = child;\n        children.splice(i--, 1);\n        continue;\n      }\n      const messageName = (0, utils_1.splitQName)(child.$message).name;\n      const message = definitions.messages[messageName];\n      if (message) {\n        message.postProcess(definitions);\n        if (message.element) {\n          definitions.messages[message.element.$name] = message;\n          this[child.name] = message.element;\n        } else {\n          this[child.name] = message;\n        }\n        children.splice(i--, 1);\n      }\n    }\n    this.deleteFixedAttrs();\n  }\n  description(definitions) {\n    const inputDesc = this.input ? this.input.description(definitions) : null;\n    const outputDesc = this.output ? this.output.description(definitions) : null;\n    return {\n      input: inputDesc && inputDesc[Object.keys(inputDesc)[0]],\n      output: outputDesc && outputDesc[Object.keys(outputDesc)[0]]\n    };\n  }\n}\nexports.OperationElement = OperationElement;\nclass PortTypeElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['documentation', 'operation']);\n    this.methods = {};\n  }\n  postProcess(definitions) {\n    const children = this.children;\n    if (typeof children === 'undefined') {\n      return;\n    }\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'operation') {\n        continue;\n      }\n      child.postProcess(definitions, 'portType');\n      this.methods[child.$name] = child;\n      children.splice(i--, 1);\n    }\n    delete this.$name;\n    this.deleteFixedAttrs();\n  }\n  description(definitions) {\n    const methods = {};\n    for (const name in this.methods) {\n      const method = this.methods[name];\n      methods[name] = method.description(definitions);\n    }\n    return methods;\n  }\n}\nexports.PortTypeElement = PortTypeElement;\nclass BindingElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['binding', 'documentation', 'operation', 'SecuritySpec']);\n    this.transport = '';\n    this.style = '';\n    this.methods = {};\n  }\n  addChild(child) {\n    if (child.name === 'binding') {\n      this.transport = child.$transport;\n      this.style = child.$style;\n      this.children.pop();\n    }\n  }\n  postProcess(definitions) {\n    const type = (0, utils_1.splitQName)(this.$type).name;\n    const portType = definitions.portTypes[type];\n    const style = this.style;\n    const children = this.children;\n    if (portType) {\n      portType.postProcess(definitions);\n      this.methods = portType.methods;\n      for (let i = 0, child; child = children[i]; i++) {\n        if (child.name !== 'operation') {\n          continue;\n        }\n        child.postProcess(definitions, 'binding');\n        children.splice(i--, 1);\n        child.style || (child.style = style);\n        const method = this.methods[child.$name];\n        if (method) {\n          method.style = child.style;\n          method.soapAction = child.soapAction;\n          method.inputSoap = child.input || null;\n          method.outputSoap = child.output || null;\n          method.inputSoap && method.inputSoap.deleteFixedAttrs();\n          method.outputSoap && method.outputSoap.deleteFixedAttrs();\n        }\n      }\n    }\n    delete this.$name;\n    delete this.$type;\n    this.deleteFixedAttrs();\n  }\n  description(definitions) {\n    const methods = {};\n    for (const name in this.methods) {\n      const method = this.methods[name];\n      methods[name] = method.description(definitions);\n    }\n    return methods;\n  }\n}\nexports.BindingElement = BindingElement;\nclass PortElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['address', 'documentation']);\n    this.location = null;\n  }\n  addChild(child) {\n    if (child.name === 'address' && typeof child.$location !== 'undefined') {\n      this.location = child.$location;\n    }\n  }\n}\nexports.PortElement = PortElement;\nclass ServiceElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['documentation', 'port']);\n    this.ports = {};\n  }\n  postProcess(definitions) {\n    const children = this.children;\n    const bindings = definitions.bindings;\n    if (children && children.length > 0) {\n      for (let i = 0, child; child = children[i]; i++) {\n        if (child.name !== 'port') {\n          continue;\n        }\n        const bindingName = (0, utils_1.splitQName)(child.$binding).name;\n        const binding = bindings[bindingName];\n        if (binding) {\n          binding.postProcess(definitions);\n          this.ports[child.$name] = {\n            location: child.location,\n            binding: binding\n          };\n          children.splice(i--, 1);\n        }\n      }\n    }\n    delete this.$name;\n    this.deleteFixedAttrs();\n  }\n  description(definitions) {\n    const ports = {};\n    for (const name in this.ports) {\n      const port = this.ports[name];\n      ports[name] = port.binding.description(definitions);\n    }\n    return ports;\n  }\n}\nexports.ServiceElement = ServiceElement;\nclass DefinitionsElement extends Element {\n  constructor() {\n    super(...arguments);\n    this.allowedChildren = buildAllowedChildren(['binding', 'documentation', 'import', 'message', 'portType', 'service', 'types']);\n    this.messages = {};\n    this.portTypes = {};\n    this.bindings = {};\n    this.services = {};\n    this.schemas = {};\n    this.descriptions = {\n      types: {},\n      elements: {}\n    };\n  }\n  init() {\n    if (this.name !== 'definitions') {\n      this.unexpected(this.nsName);\n    }\n  }\n  addChild(child) {\n    if (child instanceof TypesElement) {\n      // Merge types.schemas into definitions.schemas\n      _.merge(this.schemas, child.schemas);\n    } else if (child instanceof MessageElement) {\n      this.messages[child.$name] = child;\n    } else if (child.name === 'import') {\n      const schemaElement = new SchemaElement(child.$namespace, {});\n      schemaElement.init();\n      this.schemas[child.$namespace] = schemaElement;\n      this.schemas[child.$namespace].addChild(child);\n    } else if (child instanceof PortTypeElement) {\n      this.portTypes[child.$name] = child;\n    } else if (child instanceof BindingElement) {\n      if (child.transport === 'http://schemas.xmlsoap.org/soap/http' || child.transport === 'http://www.w3.org/2003/05/soap/bindings/HTTP/') {\n        this.bindings[child.$name] = child;\n      }\n    } else if (child instanceof ServiceElement) {\n      this.services[child.$name] = child;\n    } else if (child instanceof DocumentationElement) {}\n    this.children.pop();\n  }\n}\nexports.DefinitionsElement = DefinitionsElement;\nclass BodyElement extends Element {}\nexports.BodyElement = BodyElement;\nclass IncludeElement extends Element {}\nexports.IncludeElement = IncludeElement;\nclass ImportElement extends Element {}\nexports.ImportElement = ImportElement;\nconst ElementTypeMap = {\n  // group: [GroupElement, 'element group'],\n  all: AllElement,\n  any: AnyElement,\n  binding: BindingElement,\n  body: BodyElement,\n  choice: ChoiceElement,\n  complexContent: ComplexContentElement,\n  complexType: ComplexTypeElement,\n  definitions: DefinitionsElement,\n  documentation: DocumentationElement,\n  element: ElementElement,\n  enumeration: EnumerationElement,\n  extension: ExtensionElement,\n  fault: Element,\n  import: ImportElement,\n  include: IncludeElement,\n  input: InputElement,\n  message: MessageElement,\n  operation: OperationElement,\n  output: OutputElement,\n  port: PortElement,\n  portType: PortTypeElement,\n  restriction: RestrictionElement,\n  schema: SchemaElement,\n  sequence: SequenceElement,\n  service: ServiceElement,\n  simpleContent: SimpleContentElement,\n  simpleType: SimpleTypeElement,\n  types: TypesElement,\n  attribute: AttributeElement\n};\nfunction buildAllowedChildren(elementList) {\n  const rtn = {};\n  for (const element of elementList) {\n    rtn[element.replace(/^_/, '')] = ElementTypeMap[element] || Element;\n  }\n  return rtn;\n}","map":{"version":3,"names":["assert_1","require","debug_1","_","utils_1","debug","default","Primitives","string","boolean","decimal","float","double","anyType","byte","int","long","short","negativeInteger","nonNegativeInteger","positiveInteger","nonPositiveInteger","unsignedByte","unsignedInt","unsignedLong","unsignedShort","duration","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","hexBinary","base64Binary","anyURI","QName","NOTATION","Element","constructor","nsName","attrs","options","schemaAttrs","allowedChildren","children","parts","splitQName","prefix","name","xmlns","schemaXmlns","_initializeOptions","key","match","exec","TNS_PREFIX","valueKey","schemaKey","schemaMatch","$targetNamespace","undefined","init","deleteFixedAttrs","length","Object","keys","startElement","stack","ChildClass","strict","UnexpectedElement","child","push","unexpected","endElement","parent","defaultsDeep","addChild","pop","Error","description","definitions","$name","xmlKey","ignoredNamespaces","exports","ElementElement","buildAllowedChildren","element","minOccurs","maxOccurs","$maxOccurs","Infinity","Boolean","parseInt","$minOccurs","isMany","type","$type","$ref","typeName","ns","targetNSAlias","schema","schemas","typeElement","complexTypes","types","elements","typeStorage","descriptions","elem","forEach","$attributes","AttributeElement","Symbol","targetNamespace","refTypeName","ComplexTypeElement","SimpleTypeElement","AnyElement","InputElement","BodyElement","use","$use","encodingStyle","$encodingStyle","OutputElement","RestrictionElement","filter","join","desc","isFirstChild","SequenceElement","ChoiceElement","$base","getBase","baseDescription","defaults","restrictions","map","ExtensionElement","base","choice","EnumerationElement","ret","AllElement","SimpleContentElement","ComplexContentElement","sequence","required","MessageElement","postProcess","part","$element","lookupTypes","$lookupType","elementChildren","_getNestedLookupTypeString","split","removeEmptyLookupTypes","i","_createLookupTypeObject","$lookupTypes","typeNs","ctype","method","splice","ok","schemaDefinition","nsString","splittedNSString","nsAlias","splittedName","$namespace","resolvedType","excluded","concat","hasOwnProperty","indexOf","resolvedChildType","replace","DocumentationElement","SchemaElement","includes","merge","source","pickBy","value","startsWith","IncludeElement","ImportElement","location","$schemaLocation","$location","namespace","TypesElement","console","error","OperationElement","input","output","inputSoap","outputSoap","style","soapAction","$soapAction","$style","tag","messageName","$message","message","messages","inputDesc","outputDesc","PortTypeElement","methods","BindingElement","transport","$transport","portType","portTypes","PortElement","ServiceElement","ports","bindings","bindingName","$binding","binding","port","DefinitionsElement","services","schemaElement","ElementTypeMap","all","any","body","complexContent","complexType","documentation","enumeration","extension","fault","import","include","operation","restriction","service","simpleContent","simpleType","attribute","elementList","rtn"],"sources":["../../src/wsdl/elements.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}