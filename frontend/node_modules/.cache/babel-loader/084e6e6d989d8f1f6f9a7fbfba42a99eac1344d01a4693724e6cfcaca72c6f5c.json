{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n *\n */\n/*jshint proto:true*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.open_wsdl = exports.WSDL = exports.trim = void 0;\nconst assert_1 = require(\"assert\");\nconst debug_1 = require(\"debug\");\nconst fs = require(\"fs\");\nconst _ = require(\"lodash\");\nconst path = require(\"path\");\nconst sax = require(\"sax\");\nconst stripBom = require(\"strip-bom\");\nconst url = require(\"url\");\nconst http_1 = require(\"../http\");\nconst nscontext_1 = require(\"../nscontext\");\nconst utils_1 = require(\"../utils\");\nconst elements = require(\"./elements\");\nconst debug = (0, debug_1.default)('node-soap');\nconst XSI_URI = 'http://www.w3.org/2001/XMLSchema-instance';\nfunction trim(text) {\n  return text.trim();\n}\nexports.trim = trim;\nfunction deepMerge(destination, source) {\n  return _.mergeWith(destination, source, (a, b) => {\n    return Array.isArray(a) ? a.concat(b) : undefined;\n  });\n}\nfunction appendColon(ns) {\n  return ns && ns.charAt(ns.length - 1) !== ':' ? ns + ':' : ns;\n}\nfunction noColonNameSpace(ns) {\n  return ns && ns.charAt(ns.length - 1) === ':' ? ns.substring(0, ns.length - 1) : ns;\n}\nclass WSDL {\n  constructor(definition, uri, options) {\n    this.ignoredNamespaces = ['tns', 'targetNamespace', 'typedNamespace'];\n    this.ignoreBaseNameSpaces = false;\n    this.valueKey = '$value';\n    this.xmlKey = '$xml';\n    let fromFunc;\n    this.uri = uri;\n    this.callback = () => {};\n    this._includesWsdl = [];\n    // initialize WSDL cache\n    this.WSDL_CACHE = {};\n    if (options && options.WSDL_CACHE) {\n      this.WSDL_CACHE = options.WSDL_CACHE;\n    }\n    this._initializeOptions(options);\n    if (typeof definition === 'string') {\n      definition = stripBom(definition);\n      fromFunc = this._fromXML;\n    } else if (typeof definition === 'object') {\n      fromFunc = this._fromServices;\n    } else {\n      throw new Error('WSDL constructor takes either an XML string or service definition');\n    }\n    process.nextTick(() => {\n      try {\n        fromFunc.call(this, definition);\n      } catch (e) {\n        return this.callback(e);\n      }\n      this.processIncludes(err => {\n        let name;\n        if (err) {\n          return this.callback(err);\n        }\n        try {\n          this.definitions.deleteFixedAttrs();\n          const services = this.services = this.definitions.services;\n          if (services) {\n            for (name in services) {\n              services[name].postProcess(this.definitions);\n            }\n          }\n          const complexTypes = this.definitions.complexTypes;\n          if (complexTypes) {\n            for (name in complexTypes) {\n              complexTypes[name].deleteFixedAttrs();\n            }\n          }\n          // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n          const bindings = this.definitions.bindings;\n          for (const bindingName in bindings) {\n            const binding = bindings[bindingName];\n            if (typeof binding.style === 'undefined') {\n              binding.style = 'document';\n            }\n            const methods = binding.methods;\n            const topEls = binding.topElements = {};\n            for (const methodName in methods) {\n              if ((methods[methodName].style || binding.style) !== 'document') {\n                continue;\n              }\n              if (methods[methodName].input) {\n                const inputName = methods[methodName].input.$name;\n                let outputName = '';\n                if (methods[methodName].output) {\n                  outputName = methods[methodName].output.$name;\n                }\n                topEls[inputName] = {\n                  methodName: methodName,\n                  outputName: outputName\n                };\n              }\n            }\n          }\n          // prepare soap envelope xmlns definition string\n          this.xmlnsInEnvelope = this._xmlnsMap();\n          this.callback(err, this);\n        } catch (e) {\n          this.callback(e);\n        }\n      });\n    });\n  }\n  onReady(callback) {\n    if (callback) {\n      this.callback = callback;\n    }\n  }\n  processIncludes(callback) {\n    const schemas = this.definitions.schemas;\n    let includes = [];\n    for (const ns in schemas) {\n      const schema = schemas[ns];\n      includes = includes.concat(schema.includes || []);\n    }\n    this._processNextInclude(includes, callback);\n  }\n  describeServices() {\n    const services = {};\n    for (const name in this.services) {\n      const service = this.services[name];\n      services[name] = service.description(this.definitions);\n    }\n    return services;\n  }\n  toXML() {\n    return this.xml || '';\n  }\n  getSaxStream(xml) {\n    const saxStream = sax.createStream(true, null);\n    xml.pipe(saxStream);\n    return saxStream;\n  }\n  xmlToObject(xml, callback) {\n    const p = typeof callback === 'function' ? {} : sax.parser(true, null);\n    let objectName = null;\n    const root = {};\n    const schema = {\n      Envelope: {\n        Header: {\n          Security: {\n            UsernameToken: {\n              Username: 'string',\n              Password: 'string'\n            }\n          }\n        },\n        Body: {\n          Fault: {\n            faultcode: 'string',\n            faultstring: 'string',\n            detail: 'string'\n          }\n        }\n      }\n    };\n    const stack = [{\n      name: null,\n      object: root,\n      schema: schema\n    }];\n    const xmlns = {};\n    const refs = {};\n    let id; // {id:{hrefs:[],obj:}, ...}\n    p.onopentag = node => {\n      const nsName = node.name;\n      const attrs = node.attributes;\n      let name = (0, utils_1.splitQName)(nsName).name;\n      let attributeName;\n      const top = stack[stack.length - 1];\n      let topSchema = top.schema;\n      const elementAttributes = {};\n      let hasNonXmlnsAttribute = false;\n      let hasNilAttribute = false;\n      const obj = {};\n      const originalName = name;\n      if (!objectName && top.name === 'Body' && name !== 'Fault') {\n        let message = this.definitions.messages[name];\n        // Support RPC/literal messages where response body contains one element named\n        // after the operation + 'Response'. See http://www.w3.org/TR/wsdl#_names\n        if (!message) {\n          try {\n            // Determine if this is request or response\n            let isInput = false;\n            let isOutput = false;\n            if (/Response$/.test(name)) {\n              isOutput = true;\n              name = name.replace(/Response$/, '');\n            } else if (/Request$/.test(name)) {\n              isInput = true;\n              name = name.replace(/Request$/, '');\n            } else if (/Solicit$/.test(name)) {\n              isInput = true;\n              name = name.replace(/Solicit$/, '');\n            }\n            // Look up the appropriate message as given in the portType's operations\n            const portTypes = this.definitions.portTypes;\n            const portTypeNames = Object.keys(portTypes);\n            // Currently this supports only one portType definition.\n            const portType = portTypes[portTypeNames[0]];\n            if (isInput) {\n              name = portType.methods[name].input.$name;\n            } else {\n              name = portType.methods[name].output.$name;\n            }\n            message = this.definitions.messages[name];\n            // 'cache' this alias to speed future lookups\n            this.definitions.messages[originalName] = this.definitions.messages[name];\n          } catch (e) {\n            if (this.options.returnFault) {\n              p.onerror(e);\n            }\n          }\n        }\n        topSchema = message.description(this.definitions);\n        objectName = originalName;\n      }\n      if (attrs.href) {\n        id = attrs.href.substr(1);\n        if (!refs[id]) {\n          refs[id] = {\n            hrefs: [],\n            obj: null\n          };\n        }\n        refs[id].hrefs.push({\n          par: top.object,\n          key: name,\n          obj: obj\n        });\n      }\n      if (id = attrs.id) {\n        if (!refs[id]) {\n          refs[id] = {\n            hrefs: [],\n            obj: null\n          };\n        }\n      }\n      // Handle element attributes\n      for (attributeName in attrs) {\n        if (/^xmlns:|^xmlns$/.test(attributeName)) {\n          xmlns[(0, utils_1.splitQName)(attributeName).name] = attrs[attributeName];\n          continue;\n        }\n        hasNonXmlnsAttribute = true;\n        elementAttributes[attributeName] = attrs[attributeName];\n      }\n      for (attributeName in elementAttributes) {\n        const res = (0, utils_1.splitQName)(attributeName);\n        if (res.name === 'nil' && xmlns[res.prefix] === XSI_URI && elementAttributes[attributeName] && (elementAttributes[attributeName].toLowerCase() === 'true' || elementAttributes[attributeName] === '1')) {\n          hasNilAttribute = true;\n          break;\n        }\n      }\n      if (hasNonXmlnsAttribute) {\n        obj[this.options.attributesKey] = elementAttributes;\n      }\n      // Pick up the schema for the type specified in element's xsi:type attribute.\n      let xsiTypeSchema;\n      let xsiType;\n      for (const prefix in xmlns) {\n        if (xmlns[prefix] === XSI_URI && `${prefix}:type` in elementAttributes) {\n          xsiType = elementAttributes[`${prefix}:type`];\n          break;\n        }\n      }\n      if (xsiType) {\n        const type = (0, utils_1.splitQName)(xsiType);\n        let typeURI;\n        if (type.prefix === utils_1.TNS_PREFIX) {\n          // In case of xsi:type = \"MyType\"\n          typeURI = xmlns[type.prefix] || xmlns.xmlns;\n        } else {\n          typeURI = xmlns[type.prefix];\n        }\n        const typeDef = this.findSchemaObject(typeURI, type.name);\n        if (typeDef) {\n          xsiTypeSchema = typeDef.description(this.definitions);\n        }\n      }\n      if (topSchema && topSchema[name + '[]']) {\n        name = name + '[]';\n      }\n      stack.push({\n        name: originalName,\n        object: obj,\n        schema: xsiTypeSchema || topSchema && topSchema[name],\n        id: attrs.id,\n        nil: hasNilAttribute\n      });\n    };\n    p.onclosetag = nsName => {\n      const cur = stack.pop();\n      let obj = cur.object;\n      const top = stack[stack.length - 1];\n      const topObject = top.object;\n      const topSchema = top.schema;\n      const name = (0, utils_1.splitQName)(nsName).name;\n      if (typeof cur.schema === 'string' && (cur.schema === 'string' || cur.schema.split(':')[1] === 'string')) {\n        if (typeof obj === 'object' && Object.keys(obj).length === 0) {\n          obj = cur.object = this.options.preserveWhitespace ? cur.text || '' : '';\n        }\n      }\n      if (cur.nil === true) {\n        if (this.options.handleNilAsNull) {\n          obj = null;\n        } else {\n          return;\n        }\n      }\n      if (_.isPlainObject(obj) && !Object.keys(obj).length) {\n        obj = null;\n      }\n      if (topSchema && topSchema[name + '[]']) {\n        if (!topObject[name]) {\n          topObject[name] = [];\n        }\n        topObject[name].push(obj);\n      } else if (name in topObject) {\n        if (!Array.isArray(topObject[name])) {\n          topObject[name] = [topObject[name]];\n        }\n        topObject[name].push(obj);\n      } else {\n        topObject[name] = obj;\n      }\n      if (cur.id) {\n        refs[cur.id].obj = obj;\n      }\n    };\n    p.oncdata = text => {\n      const originalText = text;\n      text = trim(text);\n      if (!text.length) {\n        return;\n      }\n      if (/<\\?xml[\\s\\S]+\\?>/.test(text)) {\n        const top = stack[stack.length - 1];\n        const value = this.xmlToObject(text);\n        if (top.object[this.options.attributesKey]) {\n          top.object[this.options.valueKey] = value;\n        } else {\n          top.object = value;\n        }\n      } else {\n        p.ontext(originalText);\n      }\n    };\n    p.onerror = e => {\n      p.resume();\n      throw {\n        Fault: {\n          faultcode: 500,\n          faultstring: 'Invalid XML',\n          detail: new Error(e).message,\n          statusCode: 500\n        }\n      };\n    };\n    p.ontext = text => {\n      const top = stack[stack.length - 1];\n      const originalText = text;\n      text = trim(text);\n      if (!text.length) {\n        if (this.options.preserveWhitespace) {\n          top.text = (top.text || '') + originalText;\n        }\n        return;\n      }\n      const name = (0, utils_1.splitQName)(top.schema).name;\n      let value;\n      if (this.options && this.options.customDeserializer && this.options.customDeserializer[name]) {\n        value = this.options.customDeserializer[name](text, top);\n      } else {\n        if (name === 'int' || name === 'integer' || name === 'short' || name === 'long') {\n          value = parseInt(text, 10);\n        } else if (name === 'double' || name === 'float' || name === 'decimal') {\n          value = Number(text);\n        } else if (name === 'bool' || name === 'boolean') {\n          value = text.toLowerCase() === 'true' || text === '1';\n        } else if (name === 'dateTime' || name === 'date') {\n          value = new Date(text);\n        } else {\n          if (this.options.preserveWhitespace) {\n            text = originalText;\n          }\n          // handle string or other types\n          if (typeof top.object !== 'string') {\n            value = text;\n          } else {\n            value = top.object + text;\n          }\n        }\n      }\n      if (top.object[this.options.attributesKey]) {\n        top.object[this.options.valueKey] = value;\n      } else {\n        top.object = value;\n      }\n    };\n    if (typeof callback === 'function') {\n      // we be streaming\n      const saxStream = sax.createStream(true, null);\n      saxStream.on('opentag', p.onopentag);\n      saxStream.on('closetag', p.onclosetag);\n      saxStream.on('cdata', p.oncdata);\n      saxStream.on('text', p.ontext);\n      xml.pipe(saxStream).on('error', err => {\n        callback(err);\n      }).on('end', () => {\n        let r;\n        try {\n          r = finish();\n        } catch (e) {\n          return callback(e);\n        }\n        callback(null, r);\n      });\n      return;\n    }\n    p.write(xml).close();\n    return finish();\n    function finish() {\n      // MultiRef support: merge objects instead of replacing\n      for (const n in refs) {\n        const ref = refs[n];\n        for (const href of ref.hrefs) {\n          Object.assign(href.obj, ref.obj);\n        }\n      }\n      if (root.Envelope) {\n        const body = root.Envelope.Body;\n        if (body && body.Fault) {\n          const fault = body.Fault;\n          let code = fault.faultcode && fault.faultcode.$value;\n          let string = fault.faultstring && fault.faultstring.$value;\n          let detail = fault.detail && fault.detail.$value;\n          code = code || fault.faultcode;\n          string = string || fault.faultstring;\n          detail = detail || fault.detail;\n          // SOAP 1.2\n          code = code || fault.Code && `${fault.Code.Value}: ${fault.Code.Subcode && fault.Code.Subcode.Value}`;\n          string = string || fault.Reason && fault.Reason.Text.$value;\n          string = string || fault.Reason && fault.Reason.Text;\n          detail = detail || fault.Detail;\n          const error = new Error(code + ': ' + string + (detail ? ': ' + JSON.stringify(detail) : ''));\n          error.root = root;\n          throw error;\n        }\n        return root.Envelope;\n      }\n      return root;\n    }\n  }\n  /**\n   * Look up a XSD type or element by namespace URI and name\n   * @param {String} nsURI Namespace URI\n   * @param {String} qname Local or qualified name\n   * @returns {*} The XSD type/element definition\n   */\n  findSchemaObject(nsURI, qname) {\n    if (!nsURI || !qname) {\n      return null;\n    }\n    let def = null;\n    if (this.definitions.schemas) {\n      const schema = this.definitions.schemas[nsURI];\n      if (schema) {\n        if (qname.indexOf(':') !== -1) {\n          qname = qname.substring(qname.indexOf(':') + 1, qname.length);\n        }\n        // if the client passed an input element which has a `$lookupType` property instead of `$type`\n        // the `def` is found in `schema.elements`.\n        def = schema.complexTypes[qname] || schema.types[qname] || schema.elements[qname];\n      }\n    }\n    return def;\n  }\n  /**\n   * Create document style xml string from the parameters\n   * @param {String} name\n   * @param {*} params\n   * @param {String} nsPrefix\n   * @param {String} nsURI\n   * @param {String} type\n   */\n  objectToDocumentXML(name, params, nsPrefix, nsURI, type) {\n    // If user supplies XML already, just use that.  XML Declaration should not be present.\n    if (params && params._xml) {\n      return params._xml;\n    }\n    const args = {};\n    args[name] = params;\n    const parameterTypeObj = type ? this.findSchemaObject(nsURI, type) : null;\n    return this.objectToXML(args, null, nsPrefix, nsURI, true, null, parameterTypeObj);\n  }\n  /**\n   * Create RPC style xml string from the parameters\n   * @param {String} name\n   * @param {*} params\n   * @param {String} nsPrefix\n   * @param {String} nsURI\n   * @returns {string}\n   */\n  objectToRpcXML(name, params, nsPrefix, nsURI, isParts) {\n    const parts = [];\n    const defs = this.definitions;\n    const nsAttrName = '_xmlns';\n    nsPrefix = nsPrefix || (0, utils_1.findPrefix)(defs.xmlns, nsURI);\n    nsURI = nsURI || defs.xmlns[nsPrefix];\n    nsPrefix = nsPrefix === utils_1.TNS_PREFIX ? '' : nsPrefix + ':';\n    parts.push(['<', nsPrefix, name, '>'].join(''));\n    for (const key in params) {\n      if (!params.hasOwnProperty(key)) {\n        continue;\n      }\n      if (key !== nsAttrName) {\n        const value = params[key];\n        const prefixedKey = (isParts ? '' : nsPrefix) + key;\n        const attributes = [];\n        if (typeof value === 'object' && value.hasOwnProperty(this.options.attributesKey)) {\n          const attrs = value[this.options.attributesKey];\n          for (const n in attrs) {\n            attributes.push(' ' + n + '=' + '\"' + attrs[n] + '\"');\n          }\n        }\n        parts.push(['<', prefixedKey].concat(attributes).concat('>').join(''));\n        parts.push(typeof value === 'object' ? this.objectToXML(value, key, nsPrefix, nsURI) : (0, utils_1.xmlEscape)(value));\n        parts.push(['</', prefixedKey, '>'].join(''));\n      }\n    }\n    parts.push(['</', nsPrefix, name, '>'].join(''));\n    return parts.join('');\n  }\n  isIgnoredNameSpace(ns) {\n    return this.options.ignoredNamespaces.indexOf(ns) > -1;\n  }\n  filterOutIgnoredNameSpace(ns) {\n    const namespace = noColonNameSpace(ns);\n    return this.isIgnoredNameSpace(namespace) ? '' : namespace;\n  }\n  /**\n   * Convert an object to XML.  This is a recursive method as it calls itself.\n   *\n   * @param {Object} obj the object to convert.\n   * @param {String} name the name of the element (if the object being traversed is\n   * an element).\n   * @param {String} nsPrefix the namespace prefix of the object I.E. xsd.\n   * @param {String} nsURI the full namespace of the object I.E. http://w3.org/schema.\n   * @param {Boolean} isFirst whether or not this is the first item being traversed.\n   * @param {?} xmlnsAttr\n   * @param {?} parameterTypeObject\n   * @param {NamespaceContext} nsContext Namespace context\n   */\n  objectToXML(obj, name, nsPrefix, nsURI, isFirst, xmlnsAttr, schemaObject, nsContext) {\n    const schema = this.definitions.schemas[nsURI];\n    let parentNsPrefix = nsPrefix ? nsPrefix.parent : undefined;\n    if (typeof parentNsPrefix !== 'undefined') {\n      // we got the parentNsPrefix for our array. setting the namespace-variable back to the current namespace string\n      nsPrefix = nsPrefix.current;\n    }\n    parentNsPrefix = noColonNameSpace(parentNsPrefix);\n    if (this.isIgnoredNameSpace(parentNsPrefix)) {\n      parentNsPrefix = '';\n    }\n    const soapHeader = !schema;\n    const qualified = schema && schema.$elementFormDefault === 'qualified';\n    const parts = [];\n    const prefixNamespace = (nsPrefix || qualified) && nsPrefix !== utils_1.TNS_PREFIX;\n    let xmlnsAttrib = '';\n    if (nsURI && isFirst) {\n      if (this.options.overrideRootElement && this.options.overrideRootElement.xmlnsAttributes) {\n        this.options.overrideRootElement.xmlnsAttributes.forEach(attribute => {\n          xmlnsAttrib += ' ' + attribute.name + '=\"' + attribute.value + '\"';\n        });\n      } else {\n        if (prefixNamespace && !this.isIgnoredNameSpace(nsPrefix)) {\n          // resolve the prefix namespace\n          xmlnsAttrib += ' xmlns:' + nsPrefix + '=\"' + nsURI + '\"';\n        }\n        // only add default namespace if the schema elementFormDefault is qualified\n        if (qualified || soapHeader) {\n          xmlnsAttrib += ' xmlns=\"' + nsURI + '\"';\n        }\n      }\n    }\n    if (!nsContext) {\n      nsContext = new nscontext_1.NamespaceContext();\n      nsContext.declareNamespace(nsPrefix, nsURI);\n    } else {\n      nsContext.pushContext();\n    }\n    // explicitly use xmlns attribute if available\n    if (xmlnsAttr && !(this.options.overrideRootElement && this.options.overrideRootElement.xmlnsAttributes)) {\n      xmlnsAttrib = xmlnsAttr;\n    }\n    let ns = '';\n    if (this.options.overrideRootElement && isFirst) {\n      ns = this.options.overrideRootElement.namespace;\n    } else if (prefixNamespace && (qualified || isFirst || soapHeader) && !this.isIgnoredNameSpace(nsPrefix)) {\n      ns = nsPrefix;\n    }\n    let i;\n    let n;\n    // start building out XML string.\n    if (Array.isArray(obj)) {\n      let nonSubNameSpace = '';\n      let emptyNonSubNameSpaceForArray = false;\n      const nameWithNsRegex = /^([^:]+):([^:]+)$/.exec(name);\n      if (nameWithNsRegex) {\n        nonSubNameSpace = nameWithNsRegex[1];\n        name = nameWithNsRegex[2];\n      } else if (name[0] === ':') {\n        emptyNonSubNameSpaceForArray = true;\n        name = name.substr(1);\n      }\n      for (i = 0, n = obj.length; i < n; i++) {\n        const item = obj[i];\n        const arrayAttr = this.processAttributes(item, nsContext);\n        const correctOuterNsPrefix = nonSubNameSpace || parentNsPrefix || ns; // using the parent namespace prefix if given\n        const body = this.objectToXML(item, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n        let openingTagParts = ['<', name, arrayAttr, xmlnsAttrib];\n        if (!emptyNonSubNameSpaceForArray) {\n          openingTagParts = ['<', appendColon(correctOuterNsPrefix), name, arrayAttr, xmlnsAttrib];\n        }\n        if (body === '' && this.options.useEmptyTag) {\n          // Use empty (self-closing) tags if no contents\n          openingTagParts.push(' />');\n          parts.push(openingTagParts.join(''));\n        } else {\n          openingTagParts.push('>');\n          if (this.options.namespaceArrayElements || i === 0) {\n            parts.push(openingTagParts.join(''));\n          }\n          parts.push(body);\n          if (this.options.namespaceArrayElements || i === n - 1) {\n            if (emptyNonSubNameSpaceForArray) {\n              parts.push(['</', name, '>'].join(''));\n            } else {\n              parts.push(['</', appendColon(correctOuterNsPrefix), name, '>'].join(''));\n            }\n          }\n        }\n      }\n    } else if (typeof obj === 'object') {\n      let currentChildXmlnsAttrib = '';\n      for (name in obj) {\n        // Happens when Object.create(null) is used, it will not inherit the Object prototype\n        if (!obj.hasOwnProperty) {\n          obj = Object.assign({}, obj);\n        }\n        if (!obj.hasOwnProperty(name)) {\n          continue;\n        }\n        // don't process attributes as element\n        if (name === this.options.attributesKey) {\n          continue;\n        }\n        // Its the value of a xml object. Return it directly.\n        if (name === this.options.xmlKey) {\n          nsContext.popContext();\n          return obj[name];\n        }\n        // Its the value of an item. Return it directly.\n        if (name === this.options.valueKey) {\n          nsContext.popContext();\n          return (0, utils_1.xmlEscape)(obj[name]);\n        }\n        const child = obj[name];\n        if (typeof child === 'undefined') {\n          continue;\n        }\n        const attr = this.processAttributes(child, nsContext);\n        let value = '';\n        let nonSubNameSpace = '';\n        let emptyNonSubNameSpace = false;\n        const nameWithNsRegex = /^([^:]+):([^:]+)$/.exec(name);\n        if (nameWithNsRegex) {\n          nonSubNameSpace = nameWithNsRegex[1] + ':';\n          name = nameWithNsRegex[2];\n        } else if (name[0] === ':') {\n          emptyNonSubNameSpace = true;\n          name = name.substr(1);\n        }\n        if (isFirst) {\n          value = this.objectToXML(child, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n        } else {\n          if (this.definitions.schemas) {\n            if (schema) {\n              const childSchemaObject = this.findChildSchemaObject(schemaObject, name);\n              // find sub namespace if not a primitive\n              if (childSchemaObject && (childSchemaObject.$type && childSchemaObject.$type.indexOf('xsd:') === -1 || childSchemaObject.$ref || childSchemaObject.$name)) {\n                /*if the base name space of the children is not in the ingoredSchemaNamspaces we use it.\n                 This is because in some services the child nodes do not need the baseNameSpace.\n                 */\n                let childNsPrefix = '';\n                let childName = '';\n                let childNsURI;\n                let childXmlnsAttrib = '';\n                let elementQName = childSchemaObject.$ref || childSchemaObject.$name;\n                if (elementQName) {\n                  elementQName = (0, utils_1.splitQName)(elementQName);\n                  childName = elementQName.name;\n                  if (elementQName.prefix === utils_1.TNS_PREFIX) {\n                    // Local element\n                    childNsURI = childSchemaObject.$targetNamespace;\n                    childNsPrefix = nsContext.registerNamespace(childNsURI);\n                    if (this.isIgnoredNameSpace(childNsPrefix)) {\n                      childNsPrefix = nsPrefix;\n                    }\n                  } else {\n                    childNsPrefix = elementQName.prefix;\n                    if (this.isIgnoredNameSpace(childNsPrefix)) {\n                      childNsPrefix = nsPrefix;\n                    }\n                    childNsURI = schema.xmlns[childNsPrefix] || this.definitions.xmlns[childNsPrefix];\n                  }\n                  let unqualified = false;\n                  // Check qualification form for local elements\n                  if (childSchemaObject.$name && childSchemaObject.targetNamespace === undefined) {\n                    if (childSchemaObject.$form === 'unqualified') {\n                      unqualified = true;\n                    } else if (childSchemaObject.$form === 'qualified') {\n                      unqualified = false;\n                    } else {\n                      unqualified = schema.$elementFormDefault !== 'qualified';\n                    }\n                  }\n                  if (unqualified) {\n                    childNsPrefix = '';\n                  }\n                  if (childNsURI && childNsPrefix) {\n                    if (nsContext.declareNamespace(childNsPrefix, childNsURI)) {\n                      childXmlnsAttrib = ' xmlns:' + childNsPrefix + '=\"' + childNsURI + '\"';\n                      if (!xmlnsAttrib.includes(childNsPrefix)) {\n                        currentChildXmlnsAttrib = childXmlnsAttrib;\n                        xmlnsAttrib += childXmlnsAttrib;\n                      }\n                    }\n                  }\n                }\n                let resolvedChildSchemaObject;\n                if (childSchemaObject.$type) {\n                  const typeQName = (0, utils_1.splitQName)(childSchemaObject.$type);\n                  const typePrefix = childSchemaObject.$baseNameSpace || typeQName.prefix;\n                  const typeURI = schema.xmlns[typePrefix] || this.definitions.xmlns[typePrefix];\n                  childNsURI = typeURI;\n                  if (typeURI !== 'http://www.w3.org/2001/XMLSchema' && typePrefix !== utils_1.TNS_PREFIX) {\n                    // Add the prefix/namespace mapping, but not declare it\n                    nsContext.addNamespace(typePrefix, typeURI);\n                  }\n                  resolvedChildSchemaObject = this.findSchemaType(typeQName.name, typeURI) || childSchemaObject;\n                } else {\n                  resolvedChildSchemaObject = this.findSchemaObject(childNsURI, childName) || childSchemaObject;\n                }\n                if (childSchemaObject.$baseNameSpace && this.options.ignoreBaseNameSpaces) {\n                  childNsPrefix = nsPrefix;\n                  childNsURI = nsURI;\n                }\n                if (this.options.ignoreBaseNameSpaces) {\n                  childNsPrefix = '';\n                  childNsURI = '';\n                }\n                ns = childNsPrefix;\n                if (Array.isArray(child)) {\n                  // for arrays, we need to remember the current namespace\n                  childNsPrefix = {\n                    current: childNsPrefix,\n                    parent: ns\n                  };\n                  childXmlnsAttrib = childXmlnsAttrib && childXmlnsAttrib.length ? childXmlnsAttrib : currentChildXmlnsAttrib;\n                } else {\n                  // parent (array) already got the namespace\n                  childXmlnsAttrib = null;\n                }\n                value = this.objectToXML(child, name, childNsPrefix, childNsURI, false, childXmlnsAttrib, resolvedChildSchemaObject, nsContext);\n              } else if (obj[this.options.attributesKey] && obj[this.options.attributesKey].xsi_type) {\n                // if parent object has complex type defined and child not found in parent\n                const completeChildParamTypeObject = this.findChildSchemaObject(obj[this.options.attributesKey].xsi_type.type, obj[this.options.attributesKey].xsi_type.xmlns);\n                nonSubNameSpace = obj[this.options.attributesKey].xsi_type.prefix;\n                nsContext.addNamespace(obj[this.options.attributesKey].xsi_type.prefix, obj[this.options.attributesKey].xsi_type.xmlns);\n                value = this.objectToXML(child, name, obj[this.options.attributesKey].xsi_type.prefix, obj[this.options.attributesKey].xsi_type.xmlns, false, null, null, nsContext);\n              } else {\n                if (Array.isArray(child)) {\n                  if (emptyNonSubNameSpace) {\n                    name = ':' + name;\n                  } else {\n                    name = nonSubNameSpace + name;\n                  }\n                }\n                value = this.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n              }\n            } else {\n              value = this.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n            }\n          }\n        }\n        ns = noColonNameSpace(ns);\n        if (prefixNamespace && !qualified && isFirst && !this.options.overrideRootElement) {\n          ns = nsPrefix;\n        } else if (this.isIgnoredNameSpace(ns)) {\n          ns = '';\n        }\n        const useEmptyTag = !value && this.options.useEmptyTag;\n        if (!Array.isArray(child)) {\n          // start tag\n          parts.push(['<', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, attr, xmlnsAttrib, child === null ? ' xsi:nil=\"true\"' : '', useEmptyTag ? ' />' : '>'].join(''));\n        }\n        if (!useEmptyTag) {\n          parts.push(value);\n          if (!Array.isArray(child)) {\n            // end tag\n            parts.push(['</', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, '>'].join(''));\n          }\n        }\n      }\n    } else if (obj !== undefined) {\n      parts.push(this.options.escapeXML ? (0, utils_1.xmlEscape)(obj) : obj);\n    }\n    nsContext.popContext();\n    return parts.join('');\n  }\n  processAttributes(child, nsContext) {\n    let attr = '';\n    if (child === null || child === undefined) {\n      child = [];\n    }\n    const attrObj = child[this.options.attributesKey] || {};\n    if (attrObj && attrObj.xsi_type) {\n      const xsiType = attrObj.xsi_type;\n      let prefix = xsiType.prefix || xsiType.namespace;\n      if (xsiType.xmlns) {\n        // Generate a new namespace for complex extension if one not provided\n        if (!prefix) {\n          prefix = nsContext.registerNamespace(xsiType.xmlns);\n        } else {\n          nsContext.declareNamespace(prefix, xsiType.xmlns);\n        }\n        xsiType.prefix = prefix;\n      }\n    }\n    Object.keys(attrObj).forEach(k => {\n      const v = attrObj[k];\n      if (k === 'xsi_type') {\n        let name = v.type;\n        if (v.prefix) {\n          name = `${v.prefix}:${name}`;\n        }\n        attr += ` xsi:type=\"${name}\"`;\n        if (v.xmlns) {\n          attr += ` xmlns:${v.prefix}=\"${v.xmlns}\"`;\n        }\n      } else {\n        attr += ` ${k}=\"${(0, utils_1.xmlEscape)(v)}\"`;\n      }\n    });\n    return attr;\n  }\n  /**\n   * Look up a schema type definition\n   * @param name\n   * @param nsURI\n   * @returns {*}\n   */\n  findSchemaType(name, nsURI) {\n    if (!this.definitions.schemas || !name || !nsURI) {\n      return null;\n    }\n    const schema = this.definitions.schemas[nsURI];\n    if (!schema || !schema.complexTypes) {\n      return null;\n    }\n    return schema.complexTypes[name];\n  }\n  findChildSchemaObject(parameterTypeObj, childName, backtrace) {\n    if (!parameterTypeObj || !childName) {\n      return null;\n    }\n    if (!backtrace) {\n      backtrace = [];\n    }\n    if (backtrace.indexOf(parameterTypeObj) >= 0) {\n      // We've recursed back to ourselves; break.\n      return null;\n    } else {\n      backtrace = backtrace.concat([parameterTypeObj]);\n    }\n    let found = null;\n    let i = 0;\n    let child;\n    let ref;\n    if (Array.isArray(parameterTypeObj.$lookupTypes) && parameterTypeObj.$lookupTypes.length) {\n      const types = parameterTypeObj.$lookupTypes;\n      for (i = 0; i < types.length; i++) {\n        const typeObj = types[i];\n        if (typeObj.$name === childName) {\n          found = typeObj;\n          break;\n        }\n      }\n    }\n    const object = parameterTypeObj;\n    if (object.$name === childName && object.name === 'element') {\n      return object;\n    }\n    if (object.$ref) {\n      ref = (0, utils_1.splitQName)(object.$ref);\n      if (ref.name === childName) {\n        return object;\n      }\n    }\n    let childNsURI;\n    // want to avoid unecessary recursion to improve performance\n    if (object.$type && backtrace.length === 1) {\n      const typeInfo = (0, utils_1.splitQName)(object.$type);\n      if (typeInfo.prefix === utils_1.TNS_PREFIX) {\n        childNsURI = parameterTypeObj.$targetNamespace;\n      } else {\n        childNsURI = this.definitions.xmlns[typeInfo.prefix];\n      }\n      const typeDef = this.findSchemaType(typeInfo.name, childNsURI);\n      if (typeDef) {\n        return this.findChildSchemaObject(typeDef, childName, backtrace);\n      }\n    }\n    // handle $base (e.g. for ExtensionElement) like $type\n    if (object.$base && (!Array.isArray(object.children) || !object.children.length)) {\n      const baseInfo = (0, utils_1.splitQName)(object.$base);\n      childNsURI = parameterTypeObj.$targetNamespace;\n      if (baseInfo.prefix !== utils_1.TNS_PREFIX) {\n        childNsURI = this.definitions.xmlns[baseInfo.prefix];\n      }\n      const baseDef = this.findSchemaType(baseInfo.name, childNsURI);\n      if (baseDef) {\n        return this.findChildSchemaObject(baseDef, childName, backtrace);\n      }\n    }\n    if (Array.isArray(object.children) && object.children.length > 0) {\n      for (i = 0, child; child = object.children[i]; i++) {\n        found = this.findChildSchemaObject(child, childName, backtrace);\n        if (found) {\n          break;\n        }\n        if (child.$base) {\n          const baseQName = (0, utils_1.splitQName)(child.$base);\n          const childNameSpace = baseQName.prefix === utils_1.TNS_PREFIX ? '' : baseQName.prefix;\n          childNsURI = child.xmlns[baseQName.prefix] || child.schemaXmlns[baseQName.prefix];\n          const foundBase = this.findSchemaType(baseQName.name, childNsURI);\n          if (foundBase) {\n            found = this.findChildSchemaObject(foundBase, childName, backtrace);\n            if (found) {\n              found.$baseNameSpace = childNameSpace;\n              break;\n            }\n          }\n        }\n      }\n    }\n    if (!found && object.$name === childName) {\n      return object;\n    }\n    return found;\n  }\n  _initializeOptions(options) {\n    this._originalIgnoredNamespaces = (options || {}).ignoredNamespaces;\n    this.options = {};\n    const ignoredNamespaces = options ? options.ignoredNamespaces : null;\n    if (ignoredNamespaces && (Array.isArray(ignoredNamespaces.namespaces) || typeof ignoredNamespaces.namespaces === 'string')) {\n      if (ignoredNamespaces.override) {\n        this.options.ignoredNamespaces = ignoredNamespaces.namespaces;\n      } else {\n        this.options.ignoredNamespaces = this.ignoredNamespaces.concat(ignoredNamespaces.namespaces);\n      }\n    } else {\n      this.options.ignoredNamespaces = this.ignoredNamespaces;\n    }\n    this.options.valueKey = options.valueKey || this.valueKey;\n    this.options.xmlKey = options.xmlKey || this.xmlKey;\n    if (options.escapeXML !== undefined) {\n      this.options.escapeXML = options.escapeXML;\n    } else {\n      this.options.escapeXML = true;\n    }\n    if (options.returnFault !== undefined) {\n      this.options.returnFault = options.returnFault;\n    } else {\n      this.options.returnFault = false;\n    }\n    this.options.handleNilAsNull = !!options.handleNilAsNull;\n    if (options.namespaceArrayElements !== undefined) {\n      this.options.namespaceArrayElements = options.namespaceArrayElements;\n    } else {\n      this.options.namespaceArrayElements = true;\n    }\n    // Allow any request headers to keep passing through\n    this.options.wsdl_headers = options.wsdl_headers;\n    this.options.wsdl_options = options.wsdl_options;\n    if (options.httpClient) {\n      this.options.httpClient = options.httpClient;\n    }\n    // The supplied request-object should be passed through\n    if (options.request) {\n      this.options.request = options.request;\n    }\n    const ignoreBaseNameSpaces = options ? options.ignoreBaseNameSpaces : null;\n    if (ignoreBaseNameSpaces !== null && typeof ignoreBaseNameSpaces !== 'undefined') {\n      this.options.ignoreBaseNameSpaces = ignoreBaseNameSpaces;\n    } else {\n      this.options.ignoreBaseNameSpaces = this.ignoreBaseNameSpaces;\n    }\n    // Works only in client\n    this.options.forceSoap12Headers = options.forceSoap12Headers;\n    this.options.customDeserializer = options.customDeserializer;\n    if (options.overrideRootElement !== undefined) {\n      this.options.overrideRootElement = options.overrideRootElement;\n    }\n    this.options.useEmptyTag = !!options.useEmptyTag;\n  }\n  _processNextInclude(includes, callback) {\n    const include = includes.shift();\n    if (!include) {\n      return callback();\n    }\n    let includePath;\n    if (!/^https?:/i.test(this.uri) && !/^https?:/i.test(include.location)) {\n      const isFixed = this.options.wsdl_options !== undefined && this.options.wsdl_options.hasOwnProperty('fixedPath') ? this.options.wsdl_options.fixedPath : false;\n      if (isFixed) {\n        includePath = path.resolve(path.dirname(this.uri), path.parse(include.location).base);\n      } else {\n        includePath = path.resolve(path.dirname(this.uri), include.location);\n      }\n    } else {\n      includePath = url.resolve(this.uri || '', include.location);\n    }\n    const options = Object.assign({}, this.options);\n    // follow supplied ignoredNamespaces option\n    options.ignoredNamespaces = this._originalIgnoredNamespaces || this.options.ignoredNamespaces;\n    options.WSDL_CACHE = this.WSDL_CACHE;\n    if (this.options.wsdl_options !== undefined && typeof this.options.wsdl_options.overrideImportLocation === 'function') {\n      try {\n        includePath = this.options.wsdl_options.overrideImportLocation(includePath, this.uri, include.location, options);\n      } catch (e) {\n        return callback(e);\n      }\n    }\n    open_wsdl_recursive(includePath, options, (err, wsdl) => {\n      if (err) {\n        return callback(err);\n      }\n      this._includesWsdl.push(wsdl);\n      if (wsdl.definitions instanceof elements.DefinitionsElement) {\n        _.mergeWith(this.definitions, wsdl.definitions, (a, b) => {\n          return a instanceof elements.SchemaElement ? a.merge(b) : undefined;\n        });\n      } else {\n        return callback(new Error('wsdl.defintions is not an instance of elements.DefinitionsElement'));\n      }\n      this._processNextInclude(includes, err => {\n        callback(err);\n      });\n    });\n  }\n  _parse(xml) {\n    const p = sax.parser(true, null);\n    const stack = [];\n    let root = null;\n    let types = null;\n    let schema = null;\n    let schemaAttrs = null;\n    const options = this.options;\n    p.onopentag = node => {\n      const nsName = node.name;\n      const attrs = node.attributes;\n      const top = stack[stack.length - 1];\n      const name = (0, utils_1.splitQName)(nsName).name;\n      if (name === 'schema') {\n        schemaAttrs = attrs;\n      }\n      if (top) {\n        try {\n          top.startElement(stack, nsName, attrs, options, schemaAttrs);\n        } catch (e) {\n          if (this.options.strict) {\n            throw e;\n          } else {\n            stack.push(new elements.Element(nsName, attrs, options, schemaAttrs));\n          }\n        }\n      } else {\n        if (name === 'definitions') {\n          root = new elements.DefinitionsElement(nsName, attrs, options);\n          stack.push(root);\n        } else if (name === 'schema') {\n          // Shim a structure in here to allow the proper objects to be created when merging back.\n          root = new elements.DefinitionsElement('definitions', {}, {});\n          types = new elements.TypesElement('types', {}, {});\n          schema = new elements.SchemaElement(nsName, attrs, options);\n          types.addChild(schema);\n          root.addChild(types);\n          stack.push(schema);\n        } else if (name === 'html') {\n          throw new Error(`Root element of WSDL was <html>. This is likely an authentication issue.`);\n        } else {\n          throw new Error('Unexpected root element of WSDL or include');\n        }\n      }\n    };\n    p.onclosetag = name => {\n      const top = stack[stack.length - 1];\n      (0, assert_1.ok)(top, 'Unmatched close tag: ' + name);\n      top.endElement(stack, name);\n    };\n    p.write(xml).close();\n    return root;\n  }\n  _fromXML(xml) {\n    this.definitions = this._parse(xml);\n    this.definitions.descriptions = {\n      types: {},\n      elements: {}\n    };\n    this.xml = xml;\n  }\n  _fromServices(services) {}\n  _xmlnsMap() {\n    const xmlns = this.definitions.xmlns;\n    let str = '';\n    for (const alias in xmlns) {\n      if (alias === '' || alias === utils_1.TNS_PREFIX) {\n        continue;\n      }\n      const ns = xmlns[alias];\n      switch (ns) {\n        case 'http://xml.apache.org/xml-soap': // apachesoap\n        case 'http://schemas.xmlsoap.org/wsdl/': // wsdl\n        case 'http://schemas.xmlsoap.org/wsdl/soap/': // wsdlsoap\n        case 'http://schemas.xmlsoap.org/wsdl/soap12/': // wsdlsoap12\n        case 'http://schemas.xmlsoap.org/soap/encoding/': // soapenc\n        case 'http://www.w3.org/2001/XMLSchema':\n          // xsd\n          continue;\n      }\n      if (~ns.indexOf('http://schemas.xmlsoap.org/')) {\n        continue;\n      }\n      if (~ns.indexOf('http://www.w3.org/')) {\n        continue;\n      }\n      if (~ns.indexOf('http://xml.apache.org/')) {\n        continue;\n      }\n      str += ' xmlns:' + alias + '=\"' + ns + '\"';\n    }\n    return str;\n  }\n}\nexports.WSDL = WSDL;\nfunction open_wsdl_recursive(uri, p2, p3) {\n  let fromCache;\n  let WSDL_CACHE;\n  let options;\n  let callback;\n  if (typeof p2 === 'function') {\n    options = {};\n    callback = p2;\n  } else {\n    options = p2;\n    callback = p3;\n  }\n  WSDL_CACHE = options.WSDL_CACHE;\n  if (fromCache = WSDL_CACHE[uri]) {\n    return callback.call(fromCache, null, fromCache);\n  }\n  return open_wsdl(uri, options, callback);\n}\nfunction open_wsdl(uri, p2, p3) {\n  let options;\n  let callback;\n  if (typeof p2 === 'function') {\n    options = {};\n    callback = p2;\n  } else if (typeof p3 === 'function') {\n    options = p2;\n    callback = p3;\n  }\n  // initialize cache when calling open_wsdl directly\n  const WSDL_CACHE = options.WSDL_CACHE || {};\n  const request_headers = options.wsdl_headers;\n  const request_options = options.wsdl_options;\n  let wsdl;\n  if (/^\\<\\?xml[^>]*?>/i.test(uri)) {\n    wsdl = new WSDL(uri, uri, options);\n    WSDL_CACHE[uri] = wsdl;\n    wsdl.WSDL_CACHE = WSDL_CACHE;\n    wsdl.onReady(callback);\n  } else if (!/^https?:/i.test(uri)) {\n    debug('Reading file: %s', uri);\n    fs.readFile(uri, 'utf8', (err, definition) => {\n      if (err) {\n        callback(err);\n      } else {\n        wsdl = new WSDL(definition, uri, options);\n        WSDL_CACHE[uri] = wsdl;\n        wsdl.WSDL_CACHE = WSDL_CACHE;\n        wsdl.onReady(callback);\n      }\n    });\n  } else {\n    debug('Reading url: %s', uri);\n    const httpClient = options.httpClient || new http_1.HttpClient(options);\n    httpClient.request(uri, null /* options */, (err, response, definition) => {\n      if (err) {\n        callback(err);\n      } else if (response && response.status === 200) {\n        wsdl = new WSDL(definition, uri, options);\n        WSDL_CACHE[uri] = wsdl;\n        wsdl.WSDL_CACHE = WSDL_CACHE;\n        wsdl.onReady(callback);\n      } else {\n        callback(new Error('Invalid WSDL URL: ' + uri + '\\n\\n\\r Code: ' + response.status + '\\n\\n\\r Response Body: ' + response.data));\n      }\n    }, request_headers, request_options);\n  }\n  return wsdl;\n}\nexports.open_wsdl = open_wsdl;","map":{"version":3,"names":["assert_1","require","debug_1","fs","_","path","sax","stripBom","url","http_1","nscontext_1","utils_1","elements","debug","default","XSI_URI","trim","text","exports","deepMerge","destination","source","mergeWith","a","b","Array","isArray","concat","undefined","appendColon","ns","charAt","length","noColonNameSpace","substring","WSDL","constructor","definition","uri","options","ignoredNamespaces","ignoreBaseNameSpaces","valueKey","xmlKey","fromFunc","callback","_includesWsdl","WSDL_CACHE","_initializeOptions","_fromXML","_fromServices","Error","process","nextTick","call","e","processIncludes","err","name","definitions","deleteFixedAttrs","services","postProcess","complexTypes","bindings","bindingName","binding","style","methods","topEls","topElements","methodName","input","inputName","$name","outputName","output","xmlnsInEnvelope","_xmlnsMap","onReady","schemas","includes","schema","_processNextInclude","describeServices","service","description","toXML","xml","getSaxStream","saxStream","createStream","pipe","xmlToObject","p","parser","objectName","root","Envelope","Header","Security","UsernameToken","Username","Password","Body","Fault","faultcode","faultstring","detail","stack","object","xmlns","refs","id","onopentag","node","nsName","attrs","attributes","splitQName","attributeName","top","topSchema","elementAttributes","hasNonXmlnsAttribute","hasNilAttribute","obj","originalName","message","messages","isInput","isOutput","test","replace","portTypes","portTypeNames","Object","keys","portType","returnFault","onerror","href","substr","hrefs","push","par","key","res","prefix","toLowerCase","attributesKey","xsiTypeSchema","xsiType","type","typeURI","TNS_PREFIX","typeDef","findSchemaObject","nil","onclosetag","cur","pop","topObject","split","preserveWhitespace","handleNilAsNull","isPlainObject","oncdata","originalText","value","ontext","resume","statusCode","customDeserializer","parseInt","Number","Date","on","r","finish","write","close","n","ref","assign","body","fault","code","$value","string","Code","Value","Subcode","Reason","Text","Detail","error","JSON","stringify","nsURI","qname","def","indexOf","types","objectToDocumentXML","params","nsPrefix","_xml","args","parameterTypeObj","objectToXML","objectToRpcXML","isParts","parts","defs","nsAttrName","findPrefix","join","hasOwnProperty","prefixedKey","xmlEscape","isIgnoredNameSpace","filterOutIgnoredNameSpace","namespace","isFirst","xmlnsAttr","schemaObject","nsContext","parentNsPrefix","parent","current","soapHeader","qualified","$elementFormDefault","prefixNamespace","xmlnsAttrib","overrideRootElement","xmlnsAttributes","forEach","attribute","NamespaceContext","declareNamespace","pushContext","i","nonSubNameSpace","emptyNonSubNameSpaceForArray","nameWithNsRegex","exec","item","arrayAttr","processAttributes","correctOuterNsPrefix","openingTagParts","useEmptyTag","namespaceArrayElements","currentChildXmlnsAttrib","popContext","child","attr","emptyNonSubNameSpace","childSchemaObject","findChildSchemaObject","$type","$ref","childNsPrefix","childName","childNsURI","childXmlnsAttrib","elementQName","$targetNamespace","registerNamespace","unqualified","targetNamespace","$form","resolvedChildSchemaObject","typeQName","typePrefix","$baseNameSpace","addNamespace","findSchemaType","xsi_type","completeChildParamTypeObject","escapeXML","attrObj","k","v","backtrace","found","$lookupTypes","typeObj","typeInfo","$base","children","baseInfo","baseDef","baseQName","childNameSpace","schemaXmlns","foundBase","_originalIgnoredNamespaces","namespaces","override","wsdl_headers","wsdl_options","httpClient","request","forceSoap12Headers","include","shift","includePath","location","isFixed","fixedPath","resolve","dirname","parse","base","overrideImportLocation","open_wsdl_recursive","wsdl","DefinitionsElement","SchemaElement","merge","_parse","schemaAttrs","startElement","strict","Element","TypesElement","addChild","ok","endElement","descriptions","str","alias","p2","p3","fromCache","open_wsdl","request_headers","request_options","readFile","HttpClient","response","status","data"],"sources":["../../src/wsdl/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}