{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\n\nimport fs from 'node:fs';\nimport crypto from 'node:crypto';\nimport { EventEmitter } from 'node:events';\nclass PersistentFile extends EventEmitter {\n  constructor({\n    filepath,\n    newFilename,\n    originalFilename,\n    mimetype,\n    hashAlgorithm\n  }) {\n    super();\n    this.lastModifiedDate = null;\n    Object.assign(this, {\n      filepath,\n      newFilename,\n      originalFilename,\n      mimetype,\n      hashAlgorithm\n    });\n    this.size = 0;\n    this._writeStream = null;\n    if (typeof this.hashAlgorithm === 'string') {\n      this.hash = crypto.createHash(this.hashAlgorithm);\n    } else {\n      this.hash = null;\n    }\n  }\n  open() {\n    this._writeStream = fs.createWriteStream(this.filepath);\n    this._writeStream.on('error', err => {\n      this.emit('error', err);\n    });\n  }\n  toJSON() {\n    const json = {\n      size: this.size,\n      filepath: this.filepath,\n      newFilename: this.newFilename,\n      mimetype: this.mimetype,\n      mtime: this.lastModifiedDate,\n      length: this.length,\n      originalFilename: this.originalFilename\n    };\n    if (this.hash && this.hash !== '') {\n      json.hash = this.hash;\n    }\n    return json;\n  }\n  toString() {\n    return `PersistentFile: ${this.newFilename}, Original: ${this.originalFilename}, Path: ${this.filepath}`;\n  }\n  write(buffer, cb) {\n    if (this.hash) {\n      this.hash.update(buffer);\n    }\n    if (this._writeStream.closed) {\n      cb();\n      return;\n    }\n    this._writeStream.write(buffer, () => {\n      this.lastModifiedDate = new Date();\n      this.size += buffer.length;\n      this.emit('progress', this.size);\n      cb();\n    });\n  }\n  end(cb) {\n    if (this.hash) {\n      this.hash = this.hash.digest('hex');\n    }\n    this._writeStream.end(() => {\n      this.emit('end');\n      cb();\n    });\n  }\n  destroy() {\n    this._writeStream.destroy();\n    const filepath = this.filepath;\n    setTimeout(function () {\n      fs.unlink(filepath, () => {});\n    }, 1);\n  }\n}\nexport default PersistentFile;","map":{"version":3,"names":["fs","crypto","EventEmitter","PersistentFile","constructor","filepath","newFilename","originalFilename","mimetype","hashAlgorithm","lastModifiedDate","Object","assign","size","_writeStream","hash","createHash","open","createWriteStream","on","err","emit","toJSON","json","mtime","length","toString","write","buffer","cb","update","closed","Date","end","digest","destroy","setTimeout","unlink"],"sources":["/Users/soukaina/Desktop/hotel-reservation-management-soap/frontend-soapt/node_modules/formidable/src/PersistentFile.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n\nimport fs from 'node:fs';\nimport crypto from 'node:crypto';\nimport { EventEmitter } from 'node:events';\n\nclass PersistentFile extends EventEmitter {\n  constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm }) {\n    super();\n\n    this.lastModifiedDate = null;\n    Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm });\n\n    this.size = 0;\n    this._writeStream = null;\n\n    if (typeof this.hashAlgorithm === 'string') {\n      this.hash = crypto.createHash(this.hashAlgorithm);\n    } else {\n      this.hash = null;\n    }\n  }\n\n  open() {\n    this._writeStream = fs.createWriteStream(this.filepath);\n    this._writeStream.on('error', (err) => {\n      this.emit('error', err);\n    });\n  }\n\n  toJSON() {\n    const json = {\n      size: this.size,\n      filepath: this.filepath,\n      newFilename: this.newFilename,\n      mimetype: this.mimetype,\n      mtime: this.lastModifiedDate,\n      length: this.length,\n      originalFilename: this.originalFilename,\n    };\n    if (this.hash && this.hash !== '') {\n      json.hash = this.hash;\n    }\n    return json;\n  }\n\n  toString() {\n    return `PersistentFile: ${this.newFilename}, Original: ${this.originalFilename}, Path: ${this.filepath}`;\n  }\n\n  write(buffer, cb) {\n    if (this.hash) {\n      this.hash.update(buffer);\n    }\n\n    if (this._writeStream.closed) {\n      cb();\n      return;\n    }\n\n    this._writeStream.write(buffer, () => {\n      this.lastModifiedDate = new Date();\n      this.size += buffer.length;\n      this.emit('progress', this.size);\n      cb();\n    });\n  }\n\n  end(cb) {\n    if (this.hash) {\n      this.hash = this.hash.digest('hex');\n    }\n    this._writeStream.end(() => {\n      this.emit('end');\n      cb();\n    });\n  }\n\n  destroy() {\n    this._writeStream.destroy();\n    const filepath = this.filepath; \n    setTimeout(function () {\n        fs.unlink(filepath, () => {});\n    }, 1)\n  }\n}\n\nexport default PersistentFile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}