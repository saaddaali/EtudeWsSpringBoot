{"ast":null,"code":"/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\n\n// non-node wrapper\nvar xpath = typeof exports === 'undefined' ? {} : exports;\n(function (exports) {\n  \"use strict\";\n\n  // functional helpers\n  function curry(func) {\n    var slice = Array.prototype.slice,\n      totalargs = func.length,\n      partial = function (args, fn) {\n        return function () {\n          return fn.apply(this, args.concat(slice.call(arguments)));\n        };\n      },\n      fn = function () {\n        var args = slice.call(arguments);\n        return args.length < totalargs ? partial(args, fn) : func.apply(this, slice.apply(arguments, [0, totalargs]));\n      };\n    return fn;\n  }\n  var forEach = function (f, xs) {\n    for (var i = 0; i < xs.length; i += 1) {\n      f(xs[i], i, xs);\n    }\n  };\n  var reduce = function (f, seed, xs) {\n    var acc = seed;\n    forEach(function (x, i) {\n      acc = f(acc, x, i);\n    }, xs);\n    return acc;\n  };\n  var map = function (f, xs) {\n    var mapped = new Array(xs.length);\n    forEach(function (x, i) {\n      mapped[i] = f(x);\n    }, xs);\n    return mapped;\n  };\n  var filter = function (f, xs) {\n    var filtered = [];\n    forEach(function (x, i) {\n      if (f(x, i)) {\n        filtered.push(x);\n      }\n    }, xs);\n    return filtered;\n  };\n  var includes = function (values, value) {\n    for (var i = 0; i < values.length; i += 1) {\n      if (values[i] === value) {\n        return true;\n      }\n    }\n    return false;\n  };\n  function always(value) {\n    return function () {\n      return value;\n    };\n  }\n  function toString(x) {\n    return x.toString();\n  }\n  var join = function (s, xs) {\n    return xs.join(s);\n  };\n  var wrap = function (pref, suf, str) {\n    return pref + str + suf;\n  };\n  var prototypeConcat = Array.prototype.concat;\n\n  // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\n  var MAX_ARGUMENT_LENGTH = 32767;\n  function flatten(arr) {\n    var result = [];\n    for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\n      var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\n      result = prototypeConcat.apply(result, chunk);\n    }\n    return result;\n  }\n  function assign(target, varArgs) {\n    // .length of function is 2\n    var to = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n      if (nextSource != null) {\n        // Skip over if undefined or null\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  }\n  var NodeTypes = {\n    ELEMENT_NODE: 1,\n    ATTRIBUTE_NODE: 2,\n    TEXT_NODE: 3,\n    CDATA_SECTION_NODE: 4,\n    PROCESSING_INSTRUCTION_NODE: 7,\n    COMMENT_NODE: 8,\n    DOCUMENT_NODE: 9,\n    DOCUMENT_TYPE_NODE: 10,\n    DOCUMENT_FRAGMENT_NODE: 11\n  };\n\n  // XPathParser ///////////////////////////////////////////////////////////////\n\n  XPathParser.prototype = new Object();\n  XPathParser.prototype.constructor = XPathParser;\n  XPathParser.superclass = Object.prototype;\n  function XPathParser() {\n    this.init();\n  }\n  XPathParser.prototype.init = function () {\n    this.reduceActions = [];\n    this.reduceActions[3] = function (rhs) {\n      return new OrOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[5] = function (rhs) {\n      return new AndOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[7] = function (rhs) {\n      return new EqualsOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[8] = function (rhs) {\n      return new NotEqualOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[10] = function (rhs) {\n      return new LessThanOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[11] = function (rhs) {\n      return new GreaterThanOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[12] = function (rhs) {\n      return new LessThanOrEqualOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[13] = function (rhs) {\n      return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[15] = function (rhs) {\n      return new PlusOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[16] = function (rhs) {\n      return new MinusOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[18] = function (rhs) {\n      return new MultiplyOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[19] = function (rhs) {\n      return new DivOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[20] = function (rhs) {\n      return new ModOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[22] = function (rhs) {\n      return new UnaryMinusOperation(rhs[1]);\n    };\n    this.reduceActions[24] = function (rhs) {\n      return new BarOperation(rhs[0], rhs[2]);\n    };\n    this.reduceActions[25] = function (rhs) {\n      return new PathExpr(undefined, undefined, rhs[0]);\n    };\n    this.reduceActions[27] = function (rhs) {\n      rhs[0].locationPath = rhs[2];\n      return rhs[0];\n    };\n    this.reduceActions[28] = function (rhs) {\n      rhs[0].locationPath = rhs[2];\n      rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      return rhs[0];\n    };\n    this.reduceActions[29] = function (rhs) {\n      return new PathExpr(rhs[0], [], undefined);\n    };\n    this.reduceActions[30] = function (rhs) {\n      if (Utilities.instance_of(rhs[0], PathExpr)) {\n        if (rhs[0].filterPredicates == undefined) {\n          rhs[0].filterPredicates = [];\n        }\n        rhs[0].filterPredicates.push(rhs[1]);\n        return rhs[0];\n      } else {\n        return new PathExpr(rhs[0], [rhs[1]], undefined);\n      }\n    };\n    this.reduceActions[32] = function (rhs) {\n      return rhs[1];\n    };\n    this.reduceActions[33] = function (rhs) {\n      return new XString(rhs[0]);\n    };\n    this.reduceActions[34] = function (rhs) {\n      return new XNumber(rhs[0]);\n    };\n    this.reduceActions[36] = function (rhs) {\n      return new FunctionCall(rhs[0], []);\n    };\n    this.reduceActions[37] = function (rhs) {\n      return new FunctionCall(rhs[0], rhs[2]);\n    };\n    this.reduceActions[38] = function (rhs) {\n      return [rhs[0]];\n    };\n    this.reduceActions[39] = function (rhs) {\n      rhs[2].unshift(rhs[0]);\n      return rhs[2];\n    };\n    this.reduceActions[43] = function (rhs) {\n      return new LocationPath(true, []);\n    };\n    this.reduceActions[44] = function (rhs) {\n      rhs[1].absolute = true;\n      return rhs[1];\n    };\n    this.reduceActions[46] = function (rhs) {\n      return new LocationPath(false, [rhs[0]]);\n    };\n    this.reduceActions[47] = function (rhs) {\n      rhs[0].steps.push(rhs[2]);\n      return rhs[0];\n    };\n    this.reduceActions[49] = function (rhs) {\n      return new Step(rhs[0], rhs[1], []);\n    };\n    this.reduceActions[50] = function (rhs) {\n      return new Step(Step.CHILD, rhs[0], []);\n    };\n    this.reduceActions[51] = function (rhs) {\n      return new Step(rhs[0], rhs[1], rhs[2]);\n    };\n    this.reduceActions[52] = function (rhs) {\n      return new Step(Step.CHILD, rhs[0], rhs[1]);\n    };\n    this.reduceActions[54] = function (rhs) {\n      return [rhs[0]];\n    };\n    this.reduceActions[55] = function (rhs) {\n      rhs[1].unshift(rhs[0]);\n      return rhs[1];\n    };\n    this.reduceActions[56] = function (rhs) {\n      if (rhs[0] == \"ancestor\") {\n        return Step.ANCESTOR;\n      } else if (rhs[0] == \"ancestor-or-self\") {\n        return Step.ANCESTORORSELF;\n      } else if (rhs[0] == \"attribute\") {\n        return Step.ATTRIBUTE;\n      } else if (rhs[0] == \"child\") {\n        return Step.CHILD;\n      } else if (rhs[0] == \"descendant\") {\n        return Step.DESCENDANT;\n      } else if (rhs[0] == \"descendant-or-self\") {\n        return Step.DESCENDANTORSELF;\n      } else if (rhs[0] == \"following\") {\n        return Step.FOLLOWING;\n      } else if (rhs[0] == \"following-sibling\") {\n        return Step.FOLLOWINGSIBLING;\n      } else if (rhs[0] == \"namespace\") {\n        return Step.NAMESPACE;\n      } else if (rhs[0] == \"parent\") {\n        return Step.PARENT;\n      } else if (rhs[0] == \"preceding\") {\n        return Step.PRECEDING;\n      } else if (rhs[0] == \"preceding-sibling\") {\n        return Step.PRECEDINGSIBLING;\n      } else if (rhs[0] == \"self\") {\n        return Step.SELF;\n      }\n      return -1;\n    };\n    this.reduceActions[57] = function (rhs) {\n      return Step.ATTRIBUTE;\n    };\n    this.reduceActions[59] = function (rhs) {\n      if (rhs[0] == \"comment\") {\n        return NodeTest.commentTest;\n      } else if (rhs[0] == \"text\") {\n        return NodeTest.textTest;\n      } else if (rhs[0] == \"processing-instruction\") {\n        return NodeTest.anyPiTest;\n      } else if (rhs[0] == \"node\") {\n        return NodeTest.nodeTest;\n      }\n      return new NodeTest(-1, undefined);\n    };\n    this.reduceActions[60] = function (rhs) {\n      return new NodeTest.PITest(rhs[2]);\n    };\n    this.reduceActions[61] = function (rhs) {\n      return rhs[1];\n    };\n    this.reduceActions[63] = function (rhs) {\n      rhs[1].absolute = true;\n      rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      return rhs[1];\n    };\n    this.reduceActions[64] = function (rhs) {\n      rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      rhs[0].steps.push(rhs[2]);\n      return rhs[0];\n    };\n    this.reduceActions[65] = function (rhs) {\n      return new Step(Step.SELF, NodeTest.nodeTest, []);\n    };\n    this.reduceActions[66] = function (rhs) {\n      return new Step(Step.PARENT, NodeTest.nodeTest, []);\n    };\n    this.reduceActions[67] = function (rhs) {\n      return new VariableReference(rhs[1]);\n    };\n    this.reduceActions[68] = function (rhs) {\n      return NodeTest.nameTestAny;\n    };\n    this.reduceActions[69] = function (rhs) {\n      return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\n    };\n    this.reduceActions[70] = function (rhs) {\n      return new NodeTest.NameTestQName(rhs[0]);\n    };\n  };\n  XPathParser.actionTable = [\" s s        sssssssss    s ss  s  ss\", \"                 s                  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"                rrrrr               \", \" s s        sssssssss    s ss  s  ss\", \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \", \" s s        sssssssss    s ss  s  ss\", \"                            s       \", \"                            s       \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"  s                                 \", \"                            s       \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"a                                   \", \"r       s                    rr  r  \", \"r      sr                    rr  r  \", \"r   s  rr            s       rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrrs  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r  srrrrrrrr         rrrrrrs rr sr  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"                sssss               \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             s      \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"              s                     \", \"                             s      \", \"                rrrrr               \", \" s s        sssssssss    s sss s  ss\", \"r  srrrrrrrr         rrrrrrs rr  r  \", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss      ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s           s  sssss          s  s \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \" s           s  sssss          s  s \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             s      \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             rr     \", \"                             s      \", \"                             rs     \", \"r      sr                    rr  r  \", \"r   s  rr            s       rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"                                 r  \", \"                                 s  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \" s s        sssssssss    s ss  s  ss\", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             r      \"];\n  XPathParser.actionTableNumber = [\" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"                 J                  \", \"a  aaaaaaaaa         aaaaaaa aa  a  \", \"                YYYYY               \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"                            N       \", \"                            O       \", \"e  eeeeeeeee         eeeeeee ee ee  \", \"f  fffffffff         fffffff ff ff  \", \"d  ddddddddd         ddddddd dd dd  \", \"B  BBBBBBBBB         BBBBBBB BB BB  \", \"A  AAAAAAAAA         AAAAAAA AA AA  \", \"  P                                 \", \"                            Q       \", \" 1           .  +*)('          #  \\\" \", \"b  bbbbbbbbb         bbbbbbb bb  b  \", \"                                    \", \"!       S                    !!  !  \", \"\\\"      T\\\"                    \\\"\\\"  \\\"  \", \"$   V  $$            U       $$  $  \", \"&   &ZY&&            &XW     &&  &  \", \")   )))))            )))\\\\[   ))  )  \", \".   ....._^]         .....   ..  .  \", \"1   11111111         11111   11  1  \", \"5   55555555         55555`  55  5  \", \"7   77777777         777777  77  7  \", \"9   99999999         999999  99  9  \", \":  c::::::::         ::::::b :: a:  \", \"I  fIIIIIIII         IIIIIIe II  I  \", \"=  =========         ======= == ==  \", \"?  ?????????         ??????? ?? ??  \", \"C  CCCCCCCCC         CCCCCCC CC CC  \", \"J   JJJJJJJJ         JJJJJJ  JJ  J  \", \"M   MMMMMMMM         MMMMMM  MM  M  \", \"N  NNNNNNNNN         NNNNNNN NN  N  \", \"P  PPPPPPPPP         PPPPPPP PP  P  \", \"                +*)('               \", \"R  RRRRRRRRR         RRRRRRR RR aR  \", \"U  UUUUUUUUU         UUUUUUU UU  U  \", \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \", \"c  ccccccccc         ccccccc cc cc  \", \"                             j      \", \"L  fLLLLLLLL         LLLLLLe LL  L  \", \"6   66666666         66666   66  6  \", \"              k                     \", \"                             l      \", \"                XXXXX               \", \" 1 0        /.-,+*)('    & %$m #  \\\"!\", \"_  f________         ______eaQ  \", \"V  VVVVVVVVV         VVVVVVV VV aV  \", \"T  TTTTTTTTT         TTTTTTT TT  T  \", \"@  @@@@@@@@@         @@@@@@@ @@ @@  \", \"                             \\x87      \", \"[  [[[[[[[[[         [[[[[[[ [[ [[  \", \"D  DDDDDDDDD         DDDDDDD DD DD  \", \"                             HH     \", \"                             \\x88      \", \"                             F\\x89     \", \"#      T#                    ##  #  \", \"%   V  %%            U       %%  %  \", \"'   'ZY''            'XW     ''  '  \", \"(   (ZY((            (XW     ((  (  \", \"+   +++++            +++\\\\[   ++  +  \", \"*   *****            ***\\\\[   **  *  \", \"-   -----            ---\\\\[   --  -  \", \",   ,,,,,            ,,,\\\\[   ,,  ,  \", \"0   00000_^]         00000   00  0  \", \"/   /////_^]         /////   //  /  \", \"2   22222222         22222   22  2  \", \"3   33333333         33333   33  3  \", \"4   44444444         44444   44  4  \", \"8   88888888         888888  88  8  \", \"                                 ^  \", \"                                 \\x8a  \", \";  f;;;;;;;;         ;;;;;;e ;;  ;  \", \"<  f<<<<<<<<         <<<<<<e <<  <  \", \"O  OOOOOOOOO         OOOOOOO OO  O  \", \"`  `````````         ``````` ``  `  \", \"S  SSSSSSSSS         SSSSSSS SS  S  \", \"W  WWWWWWWWW         WWWWWWW WW  W  \", \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \", \"E  EEEEEEEEE         EEEEEEE EE EE  \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \", \"                             G      \"];\n  XPathParser.gotoTablee              \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                        h  J \", \"              i          j   \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"o456789:;<=>?@ ABpqCDEFGH IJ \", \"                             \", \"  r6789:;<=>?@ AB  CDEFGH IJ \", \"   s789:;<=>?@ AB  CDEFGH IJ \", \"    t89:;<=>?@ AB  CDEFGH IJ \", \"    u89:;<=>?@ AB  CDEFGH IJ \", \"     v9:;<=>?@ AB  CDEFGH IJ \", \"     w9:;<=>?@ AB  CDEFGH IJ \", \"     x9:;<=>?@ AB  CDEFGH IJ \", \"     y9:;<=>?@ AB  CDEFGH IJ \", \"      z:;<=>?@ AB  CDEFGH IJ \", \"      {:;<=>?@ AB  CDEFGH IJ \", \"       |;<=>?@ AB  CDEFGH IJ \", \"       };<=>?@ AB  CDEFGH IJ \", \"       ~;<=>?@ AB  CDEFGH IJ \", \"         \\x7f=>?@ AB  CDEFGH IJ \", \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\", \"            \\x82        EFGH IJ \", \"            \\x83        EFGH IJ \", \"                             \", \"                     \\x84 GH IJ \", \"                     \\x85 GH IJ \", \"              i          \\x86   \", \"              i          \\xo456789:;<=>?@ AB\\x8cqCDEFGH IJ \", \"                             \", \"                             \"];\n  XPathParser.productions = [[1, 1, 2], [2, 1, 3], [3, 1, 4], [3, 3, 3, -9, 4], [4, 1, 5], [4, 3, 4, -8, 5], [5, 1, 6], [5, 3, 5, -22, 6], [5, 3, 5, -5, 6], [6, 1, 7], [6, 3, 6, -23, 7], [6, 3, 6, -24, 7], [6, 3, 6, -6, 7], [6, 3, 6, -7, 7], [7, 1, 8], [7, 3, 7, -25, 8], [7, 3, 7, -26, 8], [8, 1, 9], [8, 3, 8, -12, 9], [8, 3, 8, -11, 9], [8, 3, 8, -10, 9], [9, 1, 10], [9, 2, -26, 9], [10, 1, 11], [10, 3, 10, -27, 11], [11, 1, 12], [11, 1, 13], [11, 3, 13, -28, 14], [11, 3, 13, -4, 14], [13, 1, 15], [13, 2, 13, 16], [15, 1, 17], [15, 3, -29, 2, -30], [15, 1, -15], [15, 1, -16], [15, 1, 18], [18, 3, -13, -29, -30], [18, 4, -13, -29, 19, -30], [19, 1, 20], [19, 3, 20, -31, 19], [20, 1, 2], [12, 1, 14], [12, 1, 21], [21, 1, -28], [21, 2, -28, 14], [21, 1, 22], [14, 1, 23], [14, 3, 14, -28, 23], [14, 1, 24], [23, 2, 25, 26], [23, 1, 26], [23, 3, 25, 26, 27], [23, 2, 26, 27], [23, 1, 28], [27, 1, 16], [27, 2, 16, 27], [25, 2, -14, -3], [25, 1, -32], [26, 1, 29], [26, 3, -20, -29, -30], [26, 4, -21, -29, -15, -30], [16, 3, -33, 30, -34], [30, 1, 2], [22, 2, -4, 14], [24, 3, 14, -4, 23], [28, 1, -35], [28, 1, -2], [17, 2, -36, -18], [29, 1, -17], [29, 1, -19], [29, 1, -18]];\n  XPathParser.DOUBLEDOT = 2;\n  XPathParser.DOUBLECOLON = 3;\n  XPathParser.DOUBLESLASH = 4;\n  XPathParser.NOTEQUAL = 5;\n  XPathParser.LESSTHANOREQUAL = 6;\n  XPathParser.GREATERTHANOREQUAL = 7;\n  XPathParser.AND = 8;\n  XPathParser.OR = 9;\n  XPathParser.MOD = 10;\n  XPathParser.DIV = 11;\n  XPathParser.MULTIPLYOPERATOR = 12;\n  XPathParser.FUNCTIONNAME = 13;\n  XPathParser.AXISNAME = 14;\n  XPathParser.LITERAL = 15;\n  XPathParser.NUMBER = 16;\n  XPathParser.ASTERISKNAMETEST = 17;\n  XPathParser.QNAME = 18;\n  XPathParser.NCNAMECOLONASTERISK = 19;\n  XPathParser.NODETYPE = 20;\n  XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\n  XPathParser.EQUALS = 22;\n  XPathParser.LESSTHAN = 23;\n  XPathParser.GREATERTHAN = 24;\n  XPathParser.PLUS = 25;\n  XPathParser.MINUS = 26;\n  XPathParser.BAR = 27;\n  XPathParser.SLASH = 28;\n  XPathParser.LEFTPARENTHESIS = 29;\n  XPathParser.RIGHTPARENTHESIS = 30;\n  XPathParser.COMMA = 31;\n  XPathParser.AT = 32;\n  XPathParser.LEFTBRACKET = 33;\n  XPathParser.RIGHTBRACKET = 34;\n  XPathParser.DOT = 35;\n  XPathParser.DOLLAR = 36;\n  XPathParser.prototype.tokenize = function (s1) {\n    var types = [];\n    var values = [];\n    var s = s1 + '\\0';\n    var pos = 0;\n    var c = s.charAt(pos++);\n    while (1) {\n      while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\n        c = s.charAt(pos++);\n      }\n      if (c == '\\0' || pos >= s.length) {\n        break;\n      }\n      if (c == '(') {\n        types.push(XPathParser.LEFTPARENTHESIS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == ')') {\n        types.push(XPathParser.RIGHTPARENTHESIS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '[') {\n        types.push(XPathParser.LEFTBRACKET);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == ']') {\n        types.push(XPathParser.RIGHTBRACKET);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '@') {\n        types.push(XPathParser.AT);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == ',') {\n        types.push(XPathParser.COMMA);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '|') {\n        types.push(XPathParser.BAR);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '+') {\n        types.push(XPathParser.PLUS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '-') {\n        types.push(XPathParser.MINUS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '=') {\n        types.push(XPathParser.EQUALS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '$') {\n        types.push(XPathParser.DOLLAR);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '.') {\n        c = s.charAt(pos++);\n        if (c == '.') {\n          types.push(XPathParser.DOUBLEDOT);\n          values.push(\"..\");\n          c = s.charAt(pos++);\n          continue;\n        }\n        if (c >= '0' && c <= '9') {\n          var number = \".\" + c;\n          c = s.charAt(pos++);\n          while (c >= '0' && c <= '9') {\n            number += c;\n            c = s.charAt(pos++);\n          }\n          types.push(XPathParser.NUMBER);\n          values.push(number);\n          continue;\n        }\n        types.push(XPathParser.DOT);\n        values.push('.');\n        continue;\n      }\n      if (c == '\\'' || c == '\"') {\n        var delimiter = c;\n        var literal = \"\";\n        while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\n          literal += c;\n          pos += 1;\n        }\n        if (c !== delimiter) {\n          throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\n        }\n        pos += 1;\n        types.push(XPathParser.LITERAL);\n        values.push(literal);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c >= '0' && c <= '9') {\n        var number = c;\n        c = s.charAt(pos++);\n        while (c >= '0' && c <= '9') {\n          number += c;\n          c = s.charAt(pos++);\n        }\n        if (c == '.') {\n          if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\n            number += c;\n            number += s.charAt(pos++);\n            c = s.charAt(pos++);\n            while (c >= '0' && c <= '9') {\n              number += c;\n              c = s.charAt(pos++);\n            }\n          }\n        }\n        types.push(XPathParser.NUMBER);\n        values.push(number);\n        continue;\n      }\n      if (c == '*') {\n        if (types.length > 0) {\n          var last = types[types.length - 1];\n          if (last != XPathParser.AT && last != XPathParser.DOUBLECOLON && last != XPathParser.LEFTPARENTHESIS && last != XPathParser.LEFTBRACKET && last != XPathParser.AND && last != XPathParser.OR && last != XPathParser.MOD && last != XPathParser.DIV && last != XPathParser.MULTIPLYOPERATOR && last != XPathParser.SLASH && last != XPathParser.DOUBLESLASH && last != XPathParser.BAR && last != XPathParser.PLUS && last != XPathParser.MINUS && last != XPathParser.EQUALS && last != XPathParser.NOTEQUAL && last != XPathParser.LESSTHAN && last != XPathParser.LESSTHANOREQUAL && last != XPathParser.GREATERTHAN && last != XPathParser.GREATERTHANOREQUAL) {\n            types.push(XPathParser.MULTIPLYOPERATOR);\n            values.push(c);\n            c = s.charAt(pos++);\n            continue;\n          }\n        }\n        types.push(XPathParser.ASTERISKNAMETEST);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == ':') {\n        if (s.charAt(pos) == ':') {\n          types.push(XPathParser.DOUBLECOLON);\n          values.push(\"::\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n      }\n      if (c == '/') {\n        c = s.charAt(pos++);\n        if (c == '/') {\n          types.push(XPathParser.DOUBLESLASH);\n          values.push(\"//\");\n          c = s.charAt(pos++);\n          continue;\n        }\n        types.push(XPathParser.SLASH);\n        values.push('/');\n        continue;\n      }\n      if (c == '!') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.NOTEQUAL);\n          values.push(\"!=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n      }\n      if (c == '<') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.LESSTHANOREQUAL);\n          values.push(\"<=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n        types.push(XPathParser.LESSTHAN);\n        values.push('<');\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '>') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.GREATERTHANOREQUAL);\n          values.push(\">=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n        types.push(XPathParser.GREATERTHAN);\n        values.push('>');\n        c = s.charAt(pos++);\n        continue;\n      }\n      if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\n        var name = c;\n        c = s.charAt(pos++);\n        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\n          name += c;\n          c = s.charAt(pos++);\n        }\n        if (types.length > 0) {\n          var last = types[types.length - 1];\n          if (last != XPathParser.AT && last != XPathParser.DOUBLECOLON && last != XPathParser.LEFTPARENTHESIS && last != XPathParser.LEFTBRACKET && last != XPathParser.AND && last != XPathParser.OR && last != XPathParser.MOD && last != XPathParser.DIV && last != XPathParser.MULTIPLYOPERATOR && last != XPathParser.SLASH && last != XPathParser.DOUBLESLASH && last != XPathParser.BAR && last != XPathParser.PLUS && last != XPathParser.MINUS && last != XPathParser.EQUALS && last != XPathParser.NOTEQUAL && last != XPathParser.LESSTHAN && last != XPathParser.LESSTHANOREQUAL && last != XPathParser.GREATERTHAN && last != XPathParser.GREATERTHANOREQUAL) {\n            if (name == \"and\") {\n              types.push(XPathParser.AND);\n              values.push(name);\n              continue;\n            }\n            if (name == \"or\") {\n              types.push(XPathParser.OR);\n              values.push(name);\n              continue;\n            }\n            if (name == \"mod\") {\n              types.push(XPathParser.MOD);\n              values.push(name);\n              continue;\n            }\n            if (name == \"div\") {\n              types.push(XPathParser.DIV);\n              values.push(name);\n              continue;\n            }\n          }\n        }\n        if (c == ':') {\n          if (s.charAt(pos) == '*') {\n            types.push(XPathParser.NCNAMECOLONASTERISK);\n            values.push(name + \":*\");\n            pos++;\n            c = s.charAt(pos++);\n            continue;\n          }\n          if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\n            name += ':';\n            c = s.charAt(pos++);\n            while (Utilities.isNCNameChar(c.charCodeAt(0))) {\n              name += c;\n              c = s.charAt(pos++);\n            }\n            if (c == '(') {\n              types.push(XPathParser.FUNCTIONNAME);\n              values.push(name);\n              continue;\n            }\n            types.push(XPathParser.QNAME);\n            values.push(name);\n            continue;\n          }\n          if (s.charAt(pos) == ':') {\n            types.push(XPathParser.AXISNAME);\n            values.push(name);\n            continue;\n          }\n        }\n        if (c == '(') {\n          if (name == \"comment\" || name == \"text\" || name == \"node\") {\n            types.push(XPathParser.NODETYPE);\n            values.push(name);\n            continue;\n          }\n          if (name == \"processing-instruction\") {\n            if (s.charAt(pos) == ')') {\n              types.push(XPathParser.NODETYPE);\n            } else {\n              types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\n            }\n            values.push(name);\n            continue;\n          }\n          types.push(XPathParser.FUNCTIONNAME);\n          values.push(name);\n          continue;\n        }\n        types.push(XPathParser.QNAME);\n        values.push(name);\n        continue;\n      }\n      throw new Error(\"Unexpected character \" + c);\n    }\n    types.push(1);\n    values.push(\"[EOF]\");\n    return [types, values];\n  };\n  XPathParser.SHIFT = 's';\n  XPathParser.REDUCE = 'r';\n  XPathParser.ACCEPT = 'a';\n  XPathParser.prototype.parse = function (s) {\n    var types;\n    var values;\n    var res = this.tokenize(s);\n    if (res == undefined) {\n      return undefined;\n    }\n    types = res[0];\n    values = res[1];\n    var tokenPos = 0;\n    var state = [];\n    var tokenType = [];\n    var tokenValue = [];\n    var s;\n    var a;\n    var t;\n    state.push(0);\n    tokenType.push(1);\n    tokenValue.push(\"_S\");\n    a = types[tokenPos];\n    t = values[tokenPos++];\n    while (1) {\n      s = state[state.length - 1];\n      switch (XPathParser.actionTable[s].charAt(a - 1)) {\n        case XPathParser.SHIFT:\n          tokenType.push(-a);\n          tokenValue.push(t);\n          state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\n          a = types[tokenPos];\n          t = values[tokenPos++];\n          break;\n        case XPathParser.REDUCE:\n          var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\n          var rhs = [];\n          for (var i = 0; i < num; i++) {\n            tokenType.pop();\n            rhs.unshift(tokenValue.pop());\n            state.pop();\n          }\n          var s_ = state[state.length - 1];\n          tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\n          if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\n            tokenValue.push(rhs[0]);\n          } else {\n            tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\n          }\n          state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\n          break;\n        case XPathParser.ACCEPT:\n          return new XPath(tokenValue.pop());\n        default:\n          throw new Error(\"XPath parse error\");\n      }\n    }\n  };\n\n  // XPath /////////////////////////////////////////////////////////////////////\n\n  XPath.prototype = new Object();\n  XPath.prototype.constructor = XPath;\n  XPath.superclass = Object.prototype;\n  function XPath(e) {\n    this.expression = e;\n  }\n  XPath.prototype.toString = function () {\n    return this.expression.toString();\n  };\n  function setIfUnset(obj, prop, value) {\n    if (!(prop in obj)) {\n      obj[prop] = value;\n    }\n  }\n  XPath.prototype.evaluate = function (c) {\n    c.contextNode = c.expressionContextNode;\n    c.contextSize = 1;\n    c.contextPosition = 1;\n\n    // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\n    //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\n    if (c.isHtml) {\n      setIfUnset(c, 'caseInsensitive', true);\n      setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\n    }\n    setIfUnset(c, 'caseInsensitive', false);\n    return this.expression.evaluate(c);\n  };\n  XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\n  XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\n\n  // Expression ////////////////////////////////////////////////////////////////\n\n  Expression.prototype = new Object();\n  Expression.prototype.constructor = Expression;\n  Expression.superclass = Object.prototype;\n  function Expression() {}\n  Expression.prototype.init = function () {};\n  Expression.prototype.toString = function () {\n    return \"<Expression>\";\n  };\n  Expression.prototype.evaluate = function (c) {\n    throw new Error(\"Could not evaluate expression.\");\n  };\n\n  // UnaryOperation ////////////////////////////////////////////////////////////\n\n  UnaryOperation.prototype = new Expression();\n  UnaryOperation.prototype.constructor = UnaryOperation;\n  UnaryOperation.superclass = Expression.prototype;\n  function UnaryOperation(rhs) {\n    if (arguments.length > 0) {\n      this.init(rhs);\n    }\n  }\n  UnaryOperation.prototype.init = function (rhs) {\n    this.rhs = rhs;\n  };\n\n  // UnaryMinusOperation ///////////////////////////////////////////////////////\n\n  UnaryMinusOperation.prototype = new UnaryOperation();\n  UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\n  UnaryMinusOperation.superclass = UnaryOperation.prototype;\n  function UnaryMinusOperation(rhs) {\n    if (arguments.length > 0) {\n      this.init(rhs);\n    }\n  }\n  UnaryMinusOperation.prototype.init = function (rhs) {\n    UnaryMinusOperation.superclass.init.call(this, rhs);\n  };\n  UnaryMinusOperation.prototype.evaluate = function (c) {\n    return this.rhs.evaluate(c).number().negate();\n  };\n  UnaryMinusOperation.prototype.toString = function () {\n    return \"-\" + this.rhs.toString();\n  };\n\n  // BinaryOperation ///////////////////////////////////////////////////////////\n\n  BinaryOperation.prototype = new Expression();\n  BinaryOperation.prototype.constructor = BinaryOperation;\n  BinaryOperation.superclass = Expression.prototype;\n  function BinaryOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  BinaryOperation.prototype.init = function (lhs, rhs) {\n    this.lhs = lhs;\n    this.rhs = rhs;\n  };\n\n  // OrOperation ///////////////////////////////////////////////////////////////\n\n  OrOperation.prototype = new BinaryOperation();\n  OrOperation.prototype.constructor = OrOperation;\n  OrOperation.superclass = BinaryOperation.prototype;\n  function OrOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  OrOperation.prototype.init = function (lhs, rhs) {\n    OrOperation.superclass.init.call(this, lhs, rhs);\n  };\n  OrOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\n  };\n  OrOperation.prototype.evaluate = function (c) {\n    var b = this.lhs.evaluate(c).bool();\n    if (b.booleanValue()) {\n      return b;\n    }\n    return this.rhs.evaluate(c).bool();\n  };\n\n  // AndOperation //////////////////////////////////////////////////////////////\n\n  AndOperation.prototype = new BinaryOperation();\n  AndOperation.prototype.constructor = AndOperation;\n  AndOperation.superclass = BinaryOperation.prototype;\n  function AndOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  AndOperation.prototype.init = function (lhs, rhs) {\n    AndOperation.superclass.init.call(this, lhs, rhs);\n  };\n  AndOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\n  };\n  AndOperation.prototype.evaluate = function (c) {\n    var b = this.lhs.evaluate(c).bool();\n    if (!b.booleanValue()) {\n      return b;\n    }\n    return this.rhs.evaluate(c).bool();\n  };\n\n  // EqualsOperation ///////////////////////////////////////////////////////////\n\n  EqualsOperation.prototype = new BinaryOperation();\n  EqualsOperation.prototype.constructor = EqualsOperation;\n  EqualsOperation.superclass = BinaryOperation.prototype;\n  function EqualsOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  EqualsOperation.prototype.init = function (lhs, rhs) {\n    EqualsOperation.superclass.init.call(this, lhs, rhs);\n  };\n  EqualsOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\n  };\n  EqualsOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\n  };\n\n  // NotEqualOperation /////////////////////////////////////////////////////////\n\n  NotEqualOperation.prototype = new BinaryOperation();\n  NotEqualOperation.prototype.constructor = NotEqualOperation;\n  NotEqualOperation.superclass = BinaryOperation.prototype;\n  function NotEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  NotEqualOperation.prototype.init = function (lhs, rhs) {\n    NotEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n  NotEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\n  };\n  NotEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\n  };\n\n  // LessThanOperation /////////////////////////////////////////////////////////\n\n  LessThanOperation.prototype = new BinaryOperation();\n  LessThanOperation.prototype.constructor = LessThanOperation;\n  LessThanOperation.superclass = BinaryOperation.prototype;\n  function LessThanOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  LessThanOperation.prototype.init = function (lhs, rhs) {\n    LessThanOperation.superclass.init.call(this, lhs, rhs);\n  };\n  LessThanOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\n  };\n  LessThanOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\n  };\n\n  // GreaterThanOperation //////////////////////////////////////////////////////\n\n  GreaterThanOperation.prototype = new BinaryOperation();\n  GreaterThanOperation.prototype.constructor = GreaterThanOperation;\n  GreaterThanOperation.superclass = BinaryOperation.prototype;\n  function GreaterThanOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  GreaterThanOperation.prototype.init = function (lhs, rhs) {\n    GreaterThanOperation.superclass.init.call(this, lhs, rhs);\n  };\n  GreaterThanOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\n  };\n  GreaterThanOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\n  };\n\n  // LessThanOrEqualOperation //////////////////////////////////////////////////\n\n  LessThanOrEqualOperation.prototype = new BinaryOperation();\n  LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\n  LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\n  function LessThanOrEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\n    LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n  LessThanOrEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\n  };\n  LessThanOrEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\n  };\n\n  // GreaterThanOrEqualOperation ///////////////////////////////////////////////\n\n  GreaterThanOrEqualOperation.prototype = new BinaryOperation();\n  GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\n  GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\n  function GreaterThanOrEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\n    GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n  GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\n  };\n  GreaterThanOrEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\n  };\n\n  // PlusOperation /////////////////////////////////////////////////////////////\n\n  PlusOperation.prototype = new BinaryOperation();\n  PlusOperation.prototype.constructor = PlusOperation;\n  PlusOperation.superclass = BinaryOperation.prototype;\n  function PlusOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  PlusOperation.prototype.init = function (lhs, rhs) {\n    PlusOperation.superclass.init.call(this, lhs, rhs);\n  };\n  PlusOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\n  };\n  PlusOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\n  };\n\n  // MinusOperation ////////////////////////////////////////////////////////////\n\n  MinusOperation.prototype = new BinaryOperation();\n  MinusOperation.prototype.constructor = MinusOperation;\n  MinusOperation.superclass = BinaryOperation.prototype;\n  function MinusOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  MinusOperation.prototype.init = function (lhs, rhs) {\n    MinusOperation.superclass.init.call(this, lhs, rhs);\n  };\n  MinusOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\n  };\n  MinusOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\n  };\n\n  // MultiplyOperation /////////////////////////////////////////////////////////\n\n  MultiplyOperation.prototype = new BinaryOperation();\n  MultiplyOperation.prototype.constructor = MultiplyOperation;\n  MultiplyOperation.superclass = BinaryOperation.prototype;\n  function MultiplyOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  MultiplyOperation.prototype.init = function (lhs, rhs) {\n    MultiplyOperation.superclass.init.call(this, lhs, rhs);\n  };\n  MultiplyOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\n  };\n  MultiplyOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\n  };\n\n  // DivOperation //////////////////////////////////////////////////////////////\n\n  DivOperation.prototype = new BinaryOperation();\n  DivOperation.prototype.constructor = DivOperation;\n  DivOperation.superclass = BinaryOperation.prototype;\n  function DivOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  DivOperation.prototype.init = function (lhs, rhs) {\n    DivOperation.superclass.init.call(this, lhs, rhs);\n  };\n  DivOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\n  };\n  DivOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\n  };\n\n  // ModOperation //////////////////////////////////////////////////////////////\n\n  ModOperation.prototype = new BinaryOperation();\n  ModOperation.prototype.constructor = ModOperation;\n  ModOperation.superclass = BinaryOperation.prototype;\n  function ModOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  ModOperation.prototype.init = function (lhs, rhs) {\n    ModOperation.superclass.init.call(this, lhs, rhs);\n  };\n  ModOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\n  };\n  ModOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\n  };\n\n  // BarOperation //////////////////////////////////////////////////////////////\n\n  BarOperation.prototype = new BinaryOperation();\n  BarOperation.prototype.constructor = BarOperation;\n  BarOperation.superclass = BinaryOperation.prototype;\n  function BarOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n  BarOperation.prototype.init = function (lhs, rhs) {\n    BarOperation.superclass.init.call(this, lhs, rhs);\n  };\n  BarOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\n  };\n  BarOperation.prototype.toString = function () {\n    return map(toString, [this.lhs, this.rhs]).join(' | ');\n  };\n\n  // PathExpr //////////////////////////////////////////////////////////////////\n\n  PathExpr.prototype = new Expression();\n  PathExpr.prototype.constructor = PathExpr;\n  PathExpr.superclass = Expression.prototype;\n  function PathExpr(filter, filterPreds, locpath) {\n    if (arguments.length > 0) {\n      this.init(filter, filterPreds, locpath);\n    }\n  }\n  PathExpr.prototype.init = function (filter, filterPreds, locpath) {\n    PathExpr.superclass.init.call(this);\n    this.filter = filter;\n    this.filterPredicates = filterPreds;\n    this.locationPath = locpath;\n  };\n\n  /**\r\n   * Returns the topmost node of the tree containing node\r\n   */\n  function findRoot(node) {\n    while (node && node.parentNode) {\n      node = node.parentNode;\n    }\n    return node;\n  }\n  PathExpr.applyPredicates = function (predicates, c, nodes) {\n    if (predicates.length === 0) {\n      return nodes;\n    }\n    var ctx = c.extend({});\n    return reduce(function (inNodes, pred) {\n      ctx.contextSize = inNodes.length;\n      return filter(function (node, i) {\n        ctx.contextNode = node;\n        ctx.contextPosition = i + 1;\n        return PathExpr.predicateMatches(pred, ctx);\n      }, inNodes);\n    }, nodes, predicates);\n  };\n  PathExpr.getRoot = function (xpc, nodes) {\n    var firstNode = nodes[0];\n    if (firstNode.nodeType === NodeTypes.DOCUMENT_NODE) {\n      return firstNode;\n    }\n    if (xpc.virtualRoot) {\n      return xpc.virtualRoot;\n    }\n    var ownerDoc = firstNode.ownerDocument;\n    if (ownerDoc) {\n      return ownerDoc;\n    }\n\n    // IE 5.5 doesn't have ownerDocument?\n    var n = firstNode;\n    while (n.parentNode != null) {\n      n = n.parentNode;\n    }\n    return n;\n  };\n  PathExpr.applyStep = function (step, xpc, node) {\n    var self = this;\n    var newNodes = [];\n    xpc.contextNode = node;\n    switch (step.axis) {\n      case Step.ANCESTOR:\n        // look at all the ancestor nodes\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n        var m;\n        if (xpc.contextNode.nodeType == NodeTypes.ATTRIBUTE_NODE) {\n          m = PathExpr.getOwnerElement(xpc.contextNode);\n        } else {\n          m = xpc.contextNode.parentNode;\n        }\n        while (m != null) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n          if (m === xpc.virtualRoot) {\n            break;\n          }\n          m = m.parentNode;\n        }\n        break;\n      case Step.ANCESTORORSELF:\n        // look at all the ancestor nodes and the current node\n        for (var m = xpc.contextNode; m != null; m = m.nodeType == NodeTypes.ATTRIBUTE_NODE ? PathExpr.getOwnerElement(m) : m.parentNode) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n          if (m === xpc.virtualRoot) {\n            break;\n          }\n        }\n        break;\n      case Step.ATTRIBUTE:\n        // look at the attributes\n        var nnm = xpc.contextNode.attributes;\n        if (nnm != null) {\n          for (var k = 0; k < nnm.length; k++) {\n            var m = nnm.item(k);\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n          }\n        }\n        break;\n      case Step.CHILD:\n        // look at all child elements\n        for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n        break;\n      case Step.DESCENDANT:\n        // look at all descendant nodes\n        var st = [xpc.contextNode.firstChild];\n        while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n        break;\n      case Step.DESCENDANTORSELF:\n        // look at self\n        if (step.nodeTest.matches(xpc.contextNode, xpc)) {\n          newNodes.push(xpc.contextNode);\n        }\n        // look at all descendant nodes\n        var st = [xpc.contextNode.firstChild];\n        while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n        break;\n      case Step.FOLLOWING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n        var st = [];\n        if (xpc.contextNode.firstChild != null) {\n          st.unshift(xpc.contextNode.firstChild);\n        } else {\n          st.unshift(xpc.contextNode.nextSibling);\n        }\n        for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != NodeTypes.DOCUMENT_NODE && m !== xpc.virtualRoot; m = m.parentNode) {\n          st.unshift(m.nextSibling);\n        }\n        do {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        } while (st.length > 0);\n        break;\n      case Step.FOLLOWINGSIBLING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n        for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n        break;\n      case Step.NAMESPACE:\n        var n = {};\n        if (xpc.contextNode.nodeType == NodeTypes.ELEMENT_NODE) {\n          n[\"xml\"] = XPath.XML_NAMESPACE_URI;\n          n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\n          for (var m = xpc.contextNode; m != null && m.nodeType == NodeTypes.ELEMENT_NODE; m = m.parentNode) {\n            for (var k = 0; k < m.attributes.length; k++) {\n              var attr = m.attributes.item(k);\n              var nm = String(attr.name);\n              if (nm == \"xmlns\") {\n                if (n[\"\"] == undefined) {\n                  n[\"\"] = attr.value;\n                }\n              } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\n                var pre = nm.substring(6, nm.length);\n                if (n[pre] == undefined) {\n                  n[pre] = attr.value;\n                }\n              }\n            }\n          }\n          for (var pre in n) {\n            var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\n            if (step.nodeTest.matches(nsn, xpc)) {\n              newNodes.push(nsn);\n            }\n          }\n        }\n        break;\n      case Step.PARENT:\n        m = null;\n        if (xpc.contextNode !== xpc.virtualRoot) {\n          if (xpc.contextNode.nodeType == NodeTypes.ATTRIBUTE_NODE) {\n            m = PathExpr.getOwnerElement(xpc.contextNode);\n          } else {\n            m = xpc.contextNode.parentNode;\n          }\n        }\n        if (m != null && step.nodeTest.matches(m, xpc)) {\n          newNodes.push(m);\n        }\n        break;\n      case Step.PRECEDING:\n        var st;\n        if (xpc.virtualRoot != null) {\n          st = [xpc.virtualRoot];\n        } else {\n          // cannot rely on .ownerDocument because the node may be in a document fragment\n          st = [findRoot(xpc.contextNode)];\n        }\n        outer: while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (m == xpc.contextNode) {\n              break outer;\n            }\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.unshift(m);\n            }\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n        break;\n      case Step.PRECEDINGSIBLING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n        for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n        break;\n      case Step.SELF:\n        if (step.nodeTest.matches(xpc.contextNode, xpc)) {\n          newNodes.push(xpc.contextNode);\n        }\n        break;\n      default:\n    }\n    return newNodes;\n  };\n  function applyStepWithPredicates(step, xpc, node) {\n    return PathExpr.applyPredicates(step.predicates, xpc, PathExpr.applyStep(step, xpc, node));\n  }\n  function applyStepToNodes(context, nodes, step) {\n    return flatten(map(applyStepWithPredicates.bind(null, step, context), nodes));\n  }\n  PathExpr.applySteps = function (steps, xpc, nodes) {\n    return reduce(applyStepToNodes.bind(null, xpc), nodes, steps);\n  };\n  PathExpr.prototype.applyFilter = function (c, xpc) {\n    if (!this.filter) {\n      return {\n        nodes: [c.contextNode]\n      };\n    }\n    var ns = this.filter.evaluate(c);\n    if (!Utilities.instance_of(ns, XNodeSet)) {\n      if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\n        throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\n      }\n      return {\n        nonNodes: ns\n      };\n    }\n    return {\n      nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\n    };\n  };\n  PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\n    if (!locationPath) {\n      return nodes;\n    }\n    var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\n    return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\n  };\n  PathExpr.prototype.evaluate = function (c) {\n    var xpc = assign(new XPathContext(), c);\n    var filterResult = this.applyFilter(c, xpc);\n    if ('nonNodes' in filterResult) {\n      return filterResult.nonNodes;\n    }\n    var ns = new XNodeSet();\n    ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\n    return ns;\n  };\n  PathExpr.predicateMatches = function (pred, c) {\n    var res = pred.evaluate(c);\n    return Utilities.instance_of(res, XNumber) ? c.contextPosition === res.numberValue() : res.booleanValue();\n  };\n  PathExpr.predicateString = function (predicate) {\n    return wrap('[', ']', predicate.toString());\n  };\n  PathExpr.predicatesString = function (predicates) {\n    return join('', map(PathExpr.predicateString, predicates));\n  };\n  PathExpr.prototype.toString = function () {\n    if (this.filter != undefined) {\n      var filterStr = toString(this.filter);\n      if (Utilities.instance_of(this.filter, XString)) {\n        return wrap(\"'\", \"'\", filterStr);\n      }\n      if (this.filterPredicates != undefined && this.filterPredicates.length) {\n        return wrap('(', ')', filterStr) + PathExpr.predicatesString(this.filterPredicates);\n      }\n      if (this.locationPath != undefined) {\n        return filterStr + (this.locationPath.absolute ? '' : '/') + toString(this.locationPath);\n      }\n      return filterStr;\n    }\n    return toString(this.locationPath);\n  };\n  PathExpr.getOwnerElement = function (n) {\n    // DOM 2 has ownerElement\n    if (n.ownerElement) {\n      return n.ownerElement;\n    }\n    // DOM 1 Internet Explorer can use selectSingleNode (ironically)\n    try {\n      if (n.selectSingleNode) {\n        return n.selectSingleNode(\"..\");\n      }\n    } catch (e) {}\n    // Other DOM 1 implementations must use this egregious search\n    var doc = n.nodeType == NodeTypes.DOCUMENT_NODE ? n : n.ownerDocument;\n    var elts = doc.getElementsByTagName(\"*\");\n    for (var i = 0; i < elts.length; i++) {\n      var elt = elts.item(i);\n      var nnm = elt.attributes;\n      for (var j = 0; j < nnm.length; j++) {\n        var an = nnm.item(j);\n        if (an === n) {\n          return elt;\n        }\n      }\n    }\n    return null;\n  };\n\n  // LocationPath //////////////////////////////////////////////////////////////\n\n  LocationPath.prototype = new Object();\n  LocationPath.prototype.constructor = LocationPath;\n  LocationPath.superclass = Object.prototype;\n  function LocationPath(abs, steps) {\n    if (arguments.length > 0) {\n      this.init(abs, steps);\n    }\n  }\n  LocationPath.prototype.init = function (abs, steps) {\n    this.absolute = abs;\n    this.steps = steps;\n  };\n  LocationPath.prototype.toString = function () {\n    return (this.absolute ? '/' : '') + map(toString, this.steps).join('/');\n  };\n\n  // Step //////////////////////////////////////////////////////////////////////\n\n  Step.prototype = new Object();\n  Step.prototype.constructor = Step;\n  Step.superclass = Object.prototype;\n  function Step(axis, nodetest, preds) {\n    if (arguments.length > 0) {\n      this.init(axis, nodetest, preds);\n    }\n  }\n  Step.prototype.init = function (axis, nodetest, preds) {\n    this.axis = axis;\n    this.nodeTest = nodetest;\n    this.predicates = preds;\n  };\n  Step.prototype.toString = function () {\n    return Step.STEPNAMES[this.axis] + \"::\" + this.nodeTest.toString() + PathExpr.predicatesString(this.predicates);\n  };\n  Step.ANCESTOR = 0;\n  Step.ANCESTORORSELF = 1;\n  Step.ATTRIBUTE = 2;\n  Step.CHILD = 3;\n  Step.DESCENDANT = 4;\n  Step.DESCENDANTORSELF = 5;\n  Step.FOLLOWING = 6;\n  Step.FOLLOWINGSIBLING = 7;\n  Step.NAMESPACE = 8;\n  Step.PARENT = 9;\n  Step.PRECEDING = 10;\n  Step.PRECEDINGSIBLING = 11;\n  Step.SELF = 12;\n  Step.STEPNAMES = reduce(function (acc, x) {\n    return acc[x[0]] = x[1], acc;\n  }, {}, [[Step.ANCESTOR, 'ancestor'], [Step.ANCESTORORSELF, 'ancestor-or-self'], [Step.ATTRIBUTE, 'attribute'], [Step.CHILD, 'child'], [Step.DESCENDANT, 'descendant'], [Step.DESCENDANTORSELF, 'descendant-or-self'], [Step.FOLLOWING, 'following'], [Step.FOLLOWINGSIBLING, 'following-sibling'], [Step.NAMESPACE, 'namespace'], [Step.PARENT, 'parent'], [Step.PRECEDING, 'preceding'], [Step.PRECEDINGSIBLING, 'preceding-sibling'], [Step.SELF, 'self']]);\n\n  // NodeTest //////////////////////////////////////////////////////////////////\n\n  NodeTest.prototype = new Object();\n  NodeTest.prototype.constructor = NodeTest;\n  NodeTest.superclass = Object.prototype;\n  function NodeTest(type, value) {\n    if (arguments.length > 0) {\n      this.init(type, value);\n    }\n  }\n  NodeTest.prototype.init = function (type, value) {\n    this.type = type;\n    this.value = value;\n  };\n  NodeTest.prototype.toString = function () {\n    return \"<unknown nodetest type>\";\n  };\n  NodeTest.prototype.matches = function (n, xpc) {\n    console.warn('unknown node test type');\n  };\n  NodeTest.NAMETESTANY = 0;\n  NodeTest.NAMETESTPREFIXANY = 1;\n  NodeTest.NAMETESTQNAME = 2;\n  NodeTest.COMMENT = 3;\n  NodeTest.TEXT = 4;\n  NodeTest.PI = 5;\n  NodeTest.NODE = 6;\n  NodeTest.isNodeType = function (types) {\n    return function (node) {\n      return includes(types, node.nodeType);\n    };\n  };\n  NodeTest.makeNodeTestType = function (type, members, ctor) {\n    var newType = ctor || function () {};\n    newType.prototype = new NodeTest(type);\n    newType.prototype.constructor = newType;\n    assign(newType.prototype, members);\n    return newType;\n  };\n  // create invariant node test for certain node types\n  NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\n    return new (NodeTest.makeNodeTestType(type, {\n      matches: NodeTest.isNodeType(nodeTypes),\n      toString: always(stringVal)\n    }))();\n  };\n  NodeTest.hasPrefix = function (node) {\n    return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\n  };\n  NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\n  NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\n    var nNamespace = n.namespaceURI || '';\n    if (!prefix) {\n      return !nNamespace || xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n);\n    }\n    var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\n    if (ns == null) {\n      throw new Error(\"Cannot resolve QName \" + prefix);\n    }\n    return ns === nNamespace;\n  };\n  NodeTest.localNameMatches = function (localName, xpc, n) {\n    var nLocalName = n.localName || n.nodeName;\n    return xpc.caseInsensitive ? localName.toLowerCase() === nLocalName.toLowerCase() : localName === nLocalName;\n  };\n  NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(NodeTest.NAMETESTPREFIXANY, {\n    matches: function (n, xpc) {\n      return NodeTest.isElementOrAttribute(n) && NodeTest.nameSpaceMatches(this.prefix, xpc, n);\n    },\n    toString: function () {\n      return this.prefix + \":*\";\n    }\n  }, function NameTestPrefixAny(prefix) {\n    this.prefix = prefix;\n  });\n  NodeTest.NameTestQName = NodeTest.makeNodeTestType(NodeTest.NAMETESTQNAME, {\n    matches: function (n, xpc) {\n      return NodeTest.isNodeType([NodeTypes.ELEMENT_NODE, NodeTypes.ATTRIBUTE_NODE, XPathNamespace.XPATH_NAMESPACE_NODE])(n) && NodeTest.nameSpaceMatches(this.prefix, xpc, n) && NodeTest.localNameMatches(this.localName, xpc, n);\n    },\n    toString: function () {\n      return this.name;\n    }\n  }, function NameTestQName(name) {\n    var nameParts = name.split(':');\n    this.name = name;\n    this.prefix = nameParts.length > 1 ? nameParts[0] : null;\n    this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\n  });\n  NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\n    matches: function (n, xpc) {\n      return NodeTest.isNodeType([NodeTypes.PROCESSING_INSTRUCTION_NODE])(n) && (n.target || n.nodeName) === this.name;\n    },\n    toString: function () {\n      return wrap('processing-instruction(\"', '\")', this.name);\n    }\n  }, function (name) {\n    this.name = name;\n  });\n\n  // singletons\n\n  // elements, attributes, namespaces\n  NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(NodeTest.NAMETESTANY, [NodeTypes.ELEMENT_NODE, NodeTypes.ATTRIBUTE_NODE, XPathNamespace.XPATH_NAMESPACE_NODE], '*');\n  // text, cdata\n  NodeTest.textTest = NodeTest.makeNodeTypeTest(NodeTest.TEXT, [NodeTypes.TEXT_NODE, NodeTypes.CDATA_SECTION_NODE], 'text()');\n  NodeTest.commentTest = NodeTest.makeNodeTypeTest(NodeTest.COMMENT, [NodeTypes.COMMENT_NODE], 'comment()');\n  // elements, attributes, text, cdata, PIs, comments, document nodes\n  NodeTest.nodeTest = NodeTest.makeNodeTypeTest(NodeTest.NODE, [NodeTypes.ELEMENT_NODE, NodeTypes.ATTRIBUTE_NODE, NodeTypes.TEXT_NODE, NodeTypes.CDATA_SECTION_NODE, NodeTypes.PROCESSING_INSTRUCTION_NODE, NodeTypes.COMMENT_NODE, NodeTypes.DOCUMENT_NODE], 'node()');\n  NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(NodeTest.PI, [NodeTypes.PROCESSING_INSTRUCTION_NODE], 'processing-instruction()');\n\n  // VariableReference /////////////////////////////////////////////////////////\n\n  VariableReference.prototype = new Expression();\n  VariableReference.prototype.constructor = VariableReference;\n  VariableReference.superclass = Expression.prototype;\n  function VariableReference(v) {\n    if (arguments.length > 0) {\n      this.init(v);\n    }\n  }\n  VariableReference.prototype.init = function (v) {\n    this.variable = v;\n  };\n  VariableReference.prototype.toString = function () {\n    return \"$\" + this.variable;\n  };\n  VariableReference.prototype.evaluate = function (c) {\n    var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\n    if (parts[0] == null) {\n      throw new Error(\"Cannot resolve QName \" + fn);\n    }\n    var result = c.variableResolver.getVariable(parts[1], parts[0]);\n    if (!result) {\n      throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\n    }\n    return result;\n  };\n\n  // FunctionCall //////////////////////////////////////////////////////////////\n\n  FunctionCall.prototype = new Expression();\n  FunctionCall.prototype.constructor = FunctionCall;\n  FunctionCall.superclass = Expression.prototype;\n  function FunctionCall(fn, args) {\n    if (arguments.length > 0) {\n      this.init(fn, args);\n    }\n  }\n  FunctionCall.prototype.init = function (fn, args) {\n    this.functionName = fn;\n    this.arguments = args;\n  };\n  FunctionCall.prototype.toString = function () {\n    var s = this.functionName + \"(\";\n    for (var i = 0; i < this.arguments.length; i++) {\n      if (i > 0) {\n        s += \", \";\n      }\n      s += this.arguments[i].toString();\n    }\n    return s + \")\";\n  };\n  FunctionCall.prototype.evaluate = function (c) {\n    var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\n    if (!f) {\n      throw new Error(\"Unknown function \" + this.functionName);\n    }\n    var a = [c].concat(this.arguments);\n    return f.apply(c.functionResolver.thisArg, a);\n  };\n\n  // Operators /////////////////////////////////////////////////////////////////\n\n  var Operators = new Object();\n  Operators.equals = function (l, r) {\n    return l.equals(r);\n  };\n  Operators.notequal = function (l, r) {\n    return l.notequal(r);\n  };\n  Operators.lessthan = function (l, r) {\n    return l.lessthan(r);\n  };\n  Operators.greaterthan = function (l, r) {\n    return l.greaterthan(r);\n  };\n  Operators.lessthanorequal = function (l, r) {\n    return l.lessthanorequal(r);\n  };\n  Operators.greaterthanorequal = function (l, r) {\n    return l.greaterthanorequal(r);\n  };\n\n  // XString ///////////////////////////////////////////////////////////////////\n\n  XString.prototype = new Expression();\n  XString.prototype.constructor = XString;\n  XString.superclass = Expression.prototype;\n  function XString(s) {\n    if (arguments.length > 0) {\n      this.init(s);\n    }\n  }\n  XString.prototype.init = function (s) {\n    this.str = String(s);\n  };\n  XString.prototype.toString = function () {\n    return this.str;\n  };\n  XString.prototype.evaluate = function (c) {\n    return this;\n  };\n  XString.prototype.string = function () {\n    return this;\n  };\n  XString.prototype.number = function () {\n    return new XNumber(this.str);\n  };\n  XString.prototype.bool = function () {\n    return new XBoolean(this.str);\n  };\n  XString.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert string to nodeset\");\n  };\n  XString.prototype.stringValue = function () {\n    return this.str;\n  };\n  XString.prototype.numberValue = function () {\n    return this.number().numberValue();\n  };\n  XString.prototype.booleanValue = function () {\n    return this.bool().booleanValue();\n  };\n  XString.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().equals(r);\n    }\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.number().equals(r);\n    }\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithString(this, Operators.equals);\n    }\n    return new XBoolean(this.str == r.str);\n  };\n  XString.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().notequal(r);\n    }\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.number().notequal(r);\n    }\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithString(this, Operators.notequal);\n    }\n    return new XBoolean(this.str != r.str);\n  };\n  XString.prototype.lessthan = function (r) {\n    return this.number().lessthan(r);\n  };\n  XString.prototype.greaterthan = function (r) {\n    return this.number().greaterthan(r);\n  };\n  XString.prototype.lessthanorequal = function (r) {\n    return this.number().lessthanorequal(r);\n  };\n  XString.prototype.greaterthanorequal = function (r) {\n    return this.number().greaterthanorequal(r);\n  };\n\n  // XNumber ///////////////////////////////////////////////////////////////////\n\n  XNumber.prototype = new Expression();\n  XNumber.prototype.constructor = XNumber;\n  XNumber.superclass = Expression.prototype;\n  function XNumber(n) {\n    if (arguments.length > 0) {\n      this.init(n);\n    }\n  }\n  XNumber.prototype.init = function (n) {\n    this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\n  };\n  XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\n  XNumber.prototype.parse = function (s) {\n    // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\n    return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\n  };\n  function padSmallNumber(numberStr) {\n    var parts = numberStr.split('e-');\n    var base = parts[0].replace('.', '');\n    var exponent = Number(parts[1]);\n    for (var i = 0; i < exponent - 1; i += 1) {\n      base = '0' + base;\n    }\n    return '0.' + base;\n  }\n  function padLargeNumber(numberStr) {\n    var parts = numberStr.split('e');\n    var base = parts[0].replace('.', '');\n    var exponent = Number(parts[1]);\n    var zerosToAppend = exponent + 1 - base.length;\n    for (var i = 0; i < zerosToAppend; i += 1) {\n      base += '0';\n    }\n    return base;\n  }\n  XNumber.prototype.toString = function () {\n    var strValue = this.num.toString();\n    if (strValue.indexOf('e-') !== -1) {\n      return padSmallNumber(strValue);\n    }\n    if (strValue.indexOf('e') !== -1) {\n      return padLargeNumber(strValue);\n    }\n    return strValue;\n  };\n  XNumber.prototype.evaluate = function (c) {\n    return this;\n  };\n  XNumber.prototype.string = function () {\n    return new XString(this.toString());\n  };\n  XNumber.prototype.number = function () {\n    return this;\n  };\n  XNumber.prototype.bool = function () {\n    return new XBoolean(this.num);\n  };\n  XNumber.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert number to nodeset\");\n  };\n  XNumber.prototype.stringValue = function () {\n    return this.string().stringValue();\n  };\n  XNumber.prototype.numberValue = function () {\n    return this.num;\n  };\n  XNumber.prototype.booleanValue = function () {\n    return this.bool().booleanValue();\n  };\n  XNumber.prototype.negate = function () {\n    return new XNumber(-this.num);\n  };\n  XNumber.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().equals(r);\n    }\n    if (Utilities.instance_of(r, XString)) {\n      return this.equals(r.number());\n    }\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.equals);\n    }\n    return new XBoolean(this.num == r.num);\n  };\n  XNumber.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().notequal(r);\n    }\n    if (Utilities.instance_of(r, XString)) {\n      return this.notequal(r.number());\n    }\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.notequal);\n    }\n    return new XBoolean(this.num != r.num);\n  };\n  XNumber.prototype.lessthan = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.greaterthan);\n    }\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.lessthan(r.number());\n    }\n    return new XBoolean(this.num < r.num);\n  };\n  XNumber.prototype.greaterthan = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.lessthan);\n    }\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.greaterthan(r.number());\n    }\n    return new XBoolean(this.num > r.num);\n  };\n  XNumber.prototype.lessthanorequal = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.greaterthanorequal);\n    }\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.lessthanorequal(r.number());\n    }\n    return new XBoolean(this.num <= r.num);\n  };\n  XNumber.prototype.greaterthanorequal = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.lessthanorequal);\n    }\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.greaterthanorequal(r.number());\n    }\n    return new XBoolean(this.num >= r.num);\n  };\n  XNumber.prototype.plus = function (r) {\n    return new XNumber(this.num + r.num);\n  };\n  XNumber.prototype.minus = function (r) {\n    return new XNumber(this.num - r.num);\n  };\n  XNumber.prototype.multiply = function (r) {\n    return new XNumber(this.num * r.num);\n  };\n  XNumber.prototype.div = function (r) {\n    return new XNumber(this.num / r.num);\n  };\n  XNumber.prototype.mod = function (r) {\n    return new XNumber(this.num % r.num);\n  };\n\n  // XBoolean //////////////////////////////////////////////////////////////////\n\n  XBoolean.prototype = new Expression();\n  XBoolean.prototype.constructor = XBoolean;\n  XBoolean.superclass = Expression.prototype;\n  function XBoolean(b) {\n    if (arguments.length > 0) {\n      this.init(b);\n    }\n  }\n  XBoolean.prototype.init = function (b) {\n    this.b = Boolean(b);\n  };\n  XBoolean.prototype.toString = function () {\n    return this.b.toString();\n  };\n  XBoolean.prototype.evaluate = function (c) {\n    return this;\n  };\n  XBoolean.prototype.string = function () {\n    return new XString(this.b);\n  };\n  XBoolean.prototype.number = function () {\n    return new XNumber(this.b);\n  };\n  XBoolean.prototype.bool = function () {\n    return this;\n  };\n  XBoolean.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert boolean to nodeset\");\n  };\n  XBoolean.prototype.stringValue = function () {\n    return this.string().stringValue();\n  };\n  XBoolean.prototype.numberValue = function () {\n    return this.number().numberValue();\n  };\n  XBoolean.prototype.booleanValue = function () {\n    return this.b;\n  };\n  XBoolean.prototype.not = function () {\n    return new XBoolean(!this.b);\n  };\n  XBoolean.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\n      return this.equals(r.bool());\n    }\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithBoolean(this, Operators.equals);\n    }\n    return new XBoolean(this.b == r.b);\n  };\n  XBoolean.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\n      return this.notequal(r.bool());\n    }\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithBoolean(this, Operators.notequal);\n    }\n    return new XBoolean(this.b != r.b);\n  };\n  XBoolean.prototype.lessthan = function (r) {\n    return this.number().lessthan(r);\n  };\n  XBoolean.prototype.greaterthan = function (r) {\n    return this.number().greaterthan(r);\n  };\n  XBoolean.prototype.lessthanorequal = function (r) {\n    return this.number().lessthanorequal(r);\n  };\n  XBoolean.prototype.greaterthanorequal = function (r) {\n    return this.number().greaterthanorequal(r);\n  };\n  XBoolean.true_ = new XBoolean(true);\n  XBoolean.false_ = new XBoolean(false);\n\n  // AVLTree ///////////////////////////////////////////////////////////////////\n\n  AVLTree.prototype = new Object();\n  AVLTree.prototype.constructor = AVLTree;\n  AVLTree.superclass = Object.prototype;\n  function AVLTree(n) {\n    this.init(n);\n  }\n  AVLTree.prototype.init = function (n) {\n    this.left = null;\n    this.right = null;\n    this.node = n;\n    this.depth = 1;\n  };\n  AVLTree.prototype.balance = function () {\n    var ldepth = this.left == null ? 0 : this.left.depth;\n    var rdepth = this.right == null ? 0 : this.right.depth;\n    if (ldepth > rdepth + 1) {\n      // LR or LL rotation\n      var lldepth = this.left.left == null ? 0 : this.left.left.depth;\n      var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\n      if (lldepth < lrdepth) {\n        // LR rotation consists of a RR rotation of the left child\n        this.left.rotateRR();\n        // plus a LL rotation of this node, which happens anyway\n      }\n      this.rotateLL();\n    } else if (ldepth + 1 < rdepth) {\n      // RR or RL rorarion\n      var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\n      var rldepth = this.right.left == null ? 0 : this.right.left.depth;\n      if (rldepth > rrdepth) {\n        // RR rotation consists of a LL rotation of the right child\n        this.right.rotateLL();\n        // plus a RR rotation of this node, which happens anyway\n      }\n      this.rotateRR();\n    }\n  };\n  AVLTree.prototype.rotateLL = function () {\n    // the left side is too long => rotate from the left (_not_ leftwards)\n    var nodeBefore = this.node;\n    var rightBefore = this.right;\n    this.node = this.left.node;\n    this.right = this.left;\n    this.left = this.left.left;\n    this.right.left = this.right.right;\n    this.right.right = rightBefore;\n    this.right.node = nodeBefore;\n    this.right.updateInNewLocation();\n    this.updateInNewLocation();\n  };\n  AVLTree.prototype.rotateRR = function () {\n    // the right side is too long => rotate from the right (_not_ rightwards)\n    var nodeBefore = this.node;\n    var leftBefore = this.left;\n    this.node = this.right.node;\n    this.left = this.right;\n    this.right = this.right.right;\n    this.left.right = this.left.left;\n    this.left.left = leftBefore;\n    this.left.node = nodeBefore;\n    this.left.updateInNewLocation();\n    this.updateInNewLocation();\n  };\n  AVLTree.prototype.updateInNewLocation = function () {\n    this.getDepthFromChildren();\n  };\n  AVLTree.prototype.getDepthFromChildren = function () {\n    this.depth = this.node == null ? 0 : 1;\n    if (this.left != null) {\n      this.depth = this.left.depth + 1;\n    }\n    if (this.right != null && this.depth <= this.right.depth) {\n      this.depth = this.right.depth + 1;\n    }\n  };\n  function nodeOrder(n1, n2) {\n    if (n1 === n2) {\n      return 0;\n    }\n    if (n1.compareDocumentPosition) {\n      var cpos = n1.compareDocumentPosition(n2);\n      if (cpos & 0x01) {\n        // not in the same document; return an arbitrary result (is there a better way to do this)\n        return 1;\n      }\n      if (cpos & 0x0A) {\n        // n2 precedes or contains n1\n        return 1;\n      }\n      if (cpos & 0x14) {\n        // n2 follows or is contained by n1\n        return -1;\n      }\n      return 0;\n    }\n    var d1 = 0,\n      d2 = 0;\n    for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\n      d1++;\n    }\n    for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\n      d2++;\n    }\n\n    // step up to same depth\n    if (d1 > d2) {\n      while (d1 > d2) {\n        n1 = n1.parentNode || n1.ownerElement;\n        d1--;\n      }\n      if (n1 === n2) {\n        return 1;\n      }\n    } else if (d2 > d1) {\n      while (d2 > d1) {\n        n2 = n2.parentNode || n2.ownerElement;\n        d2--;\n      }\n      if (n1 === n2) {\n        return -1;\n      }\n    }\n    var n1Par = n1.parentNode || n1.ownerElement,\n      n2Par = n2.parentNode || n2.ownerElement;\n\n    // find common parent\n    while (n1Par !== n2Par) {\n      n1 = n1Par;\n      n2 = n2Par;\n      n1Par = n1.parentNode || n1.ownerElement;\n      n2Par = n2.parentNode || n2.ownerElement;\n    }\n    var n1isAttr = Utilities.isAttribute(n1);\n    var n2isAttr = Utilities.isAttribute(n2);\n    if (n1isAttr && !n2isAttr) {\n      return -1;\n    }\n    if (!n1isAttr && n2isAttr) {\n      return 1;\n    }\n    if (n1Par) {\n      var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\n        len = cn.length;\n      for (var i = 0; i < len; i += 1) {\n        var n = cn[i];\n        if (n === n1) {\n          return -1;\n        }\n        if (n === n2) {\n          return 1;\n        }\n      }\n    }\n    throw new Error('Unexpected: could not determine node order');\n  }\n  AVLTree.prototype.add = function (n) {\n    if (n === this.node) {\n      return false;\n    }\n    var o = nodeOrder(n, this.node);\n    var ret = false;\n    if (o == -1) {\n      if (this.left == null) {\n        this.left = new AVLTree(n);\n        ret = true;\n      } else {\n        ret = this.left.add(n);\n        if (ret) {\n          this.balance();\n        }\n      }\n    } else if (o == 1) {\n      if (this.right == null) {\n        this.right = new AVLTree(n);\n        ret = true;\n      } else {\n        ret = this.right.add(n);\n        if (ret) {\n          this.balance();\n        }\n      }\n    }\n    if (ret) {\n      this.getDepthFromChildren();\n    }\n    return ret;\n  };\n\n  // XNodeSet //////////////////////////////////////////////////////////////////\n\n  XNodeSet.prototype = new Expression();\n  XNodeSet.prototype.constructor = XNodeSet;\n  XNodeSet.superclass = Expression.prototype;\n  function XNodeSet() {\n    this.init();\n  }\n  XNodeSet.prototype.init = function () {\n    this.tree = null;\n    this.nodes = [];\n    this.size = 0;\n  };\n  XNodeSet.prototype.toString = function () {\n    var p = this.first();\n    if (p == null) {\n      return \"\";\n    }\n    return this.stringForNode(p);\n  };\n  XNodeSet.prototype.evaluate = function (c) {\n    return this;\n  };\n  XNodeSet.prototype.string = function () {\n    return new XString(this.toString());\n  };\n  XNodeSet.prototype.stringValue = function () {\n    return this.toString();\n  };\n  XNodeSet.prototype.number = function () {\n    return new XNumber(this.string());\n  };\n  XNodeSet.prototype.numberValue = function () {\n    return Number(this.string());\n  };\n  XNodeSet.prototype.bool = function () {\n    return new XBoolean(this.booleanValue());\n  };\n  XNodeSet.prototype.booleanValue = function () {\n    return !!this.size;\n  };\n  XNodeSet.prototype.nodeset = function () {\n    return this;\n  };\n  XNodeSet.prototype.stringForNode = function (n) {\n    if (n.nodeType == NodeTypes.DOCUMENT_NODE || n.nodeType == NodeTypes.ELEMENT_NODE || n.nodeType === NodeTypes.DOCUMENT_FRAGMENT_NODE) {\n      return this.stringForContainerNode(n);\n    }\n    if (n.nodeType === NodeTypes.ATTRIBUTE_NODE) {\n      return n.value || n.nodeValue;\n    }\n    if (n.isNamespaceNode) {\n      return n.namespace;\n    }\n    return n.nodeValue;\n  };\n  XNodeSet.prototype.stringForContainerNode = function (n) {\n    var s = \"\";\n    for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\n      var nt = n2.nodeType;\n      //  Element,    Text,       CDATA,      Document,   Document Fragment\n      if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\n        s += this.stringForNode(n2);\n      }\n    }\n    return s;\n  };\n  XNodeSet.prototype.buildTree = function () {\n    if (!this.tree && this.nodes.length) {\n      this.tree = new AVLTree(this.nodes[0]);\n      for (var i = 1; i < this.nodes.length; i += 1) {\n        this.tree.add(this.nodes[i]);\n      }\n    }\n    return this.tree;\n  };\n  XNodeSet.prototype.first = function () {\n    var p = this.buildTree();\n    if (p == null) {\n      return null;\n    }\n    while (p.left != null) {\n      p = p.left;\n    }\n    return p.node;\n  };\n  XNodeSet.prototype.add = function (n) {\n    for (var i = 0; i < this.nodes.length; i += 1) {\n      if (n === this.nodes[i]) {\n        return;\n      }\n    }\n    this.tree = null;\n    this.nodes.push(n);\n    this.size += 1;\n  };\n  XNodeSet.prototype.addArray = function (ns) {\n    var self = this;\n    forEach(function (x) {\n      self.add(x);\n    }, ns);\n  };\n\n  /**\r\n   * Returns an array of the node set's contents in document order\r\n   */\n  XNodeSet.prototype.toArray = function () {\n    var a = [];\n    this.toArrayRec(this.buildTree(), a);\n    return a;\n  };\n  XNodeSet.prototype.toArrayRec = function (t, a) {\n    if (t != null) {\n      this.toArrayRec(t.left, a);\n      a.push(t.node);\n      this.toArrayRec(t.right, a);\n    }\n  };\n\n  /**\r\n   * Returns an array of the node set's contents in arbitrary order\r\n   */\n  XNodeSet.prototype.toUnsortedArray = function () {\n    return this.nodes.slice();\n  };\n  XNodeSet.prototype.compareWithString = function (r, o) {\n    var a = this.toUnsortedArray();\n    for (var i = 0; i < a.length; i++) {\n      var n = a[i];\n      var l = new XString(this.stringForNode(n));\n      var res = o(l, r);\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n    return new XBoolean(false);\n  };\n  XNodeSet.prototype.compareWithNumber = function (r, o) {\n    var a = this.toUnsortedArray();\n    for (var i = 0; i < a.length; i++) {\n      var n = a[i];\n      var l = new XNumber(this.stringForNode(n));\n      var res = o(l, r);\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n    return new XBoolean(false);\n  };\n  XNodeSet.prototype.compareWithBoolean = function (r, o) {\n    return o(this.bool(), r);\n  };\n  XNodeSet.prototype.compareWithNodeSet = function (r, o) {\n    var arr = this.toUnsortedArray();\n    var oInvert = function (lop, rop) {\n      return o(rop, lop);\n    };\n    for (var i = 0; i < arr.length; i++) {\n      var l = new XString(this.stringForNode(arr[i]));\n      var res = r.compareWithString(l, oInvert);\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n    return new XBoolean(false);\n  };\n  XNodeSet.compareWith = curry(function (o, r) {\n    if (Utilities.instance_of(r, XString)) {\n      return this.compareWithString(r, o);\n    }\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.compareWithNumber(r, o);\n    }\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.compareWithBoolean(r, o);\n    }\n    return this.compareWithNodeSet(r, o);\n  });\n  XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\n  XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\n  XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\n  XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\n  XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\n  XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\n  XNodeSet.prototype.union = function (r) {\n    var ns = new XNodeSet();\n    ns.addArray(this.toUnsortedArray());\n    ns.addArray(r.toUnsortedArray());\n    return ns;\n  };\n\n  // XPathNamespace ////////////////////////////////////////////////////////////\n\n  XPathNamespace.prototype = new Object();\n  XPathNamespace.prototype.constructor = XPathNamespace;\n  XPathNamespace.superclass = Object.prototype;\n  function XPathNamespace(pre, ns, p) {\n    this.isXPathNamespace = true;\n    this.ownerDocument = p.ownerDocument;\n    this.nodeName = \"#namespace\";\n    this.prefix = pre;\n    this.localName = pre;\n    this.namespaceURI = ns;\n    this.nodeValue = ns;\n    this.ownerElement = p;\n    this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\n  }\n  XPathNamespace.prototype.toString = function () {\n    return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\n  };\n\n  // XPathContext //////////////////////////////////////////////////////////////\n\n  XPathContext.prototype = new Object();\n  XPathContext.prototype.constructor = XPathContext;\n  XPathContext.superclass = Object.prototype;\n  function XPathContext(vr, nr, fr) {\n    this.variableResolver = vr != null ? vr : new VariableResolver();\n    this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\n    this.functionResolver = fr != null ? fr : new FunctionResolver();\n  }\n  XPathContext.prototype.extend = function (newProps) {\n    return assign(new XPathContext(), this, newProps);\n  };\n\n  // VariableResolver //////////////////////////////////////////////////////////\n\n  VariableResolver.prototype = new Object();\n  VariableResolver.prototype.constructor = VariableResolver;\n  VariableResolver.superclass = Object.prototype;\n  function VariableResolver() {}\n  VariableResolver.prototype.getVariable = function (ln, ns) {\n    return null;\n  };\n\n  // FunctionResolver //////////////////////////////////////////////////////////\n\n  FunctionResolver.prototype = new Object();\n  FunctionResolver.prototype.constructor = FunctionResolver;\n  FunctionResolver.superclass = Object.prototype;\n  function FunctionResolver(thisArg) {\n    this.thisArg = thisArg != null ? thisArg : Functions;\n    this.functions = new Object();\n    this.addStandardFunctions();\n  }\n  FunctionResolver.prototype.addStandardFunctions = function () {\n    this.functions[\"{}last\"] = Functions.last;\n    this.functions[\"{}position\"] = Functions.position;\n    this.functions[\"{}count\"] = Functions.count;\n    this.functions[\"{}id\"] = Functions.id;\n    this.functions[\"{}local-name\"] = Functions.localName;\n    this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\n    this.functions[\"{}name\"] = Functions.name;\n    this.functions[\"{}string\"] = Functions.string;\n    this.functions[\"{}concat\"] = Functions.concat;\n    this.functions[\"{}starts-with\"] = Functions.startsWith;\n    this.functions[\"{}contains\"] = Functions.contains;\n    this.functions[\"{}substring-before\"] = Functions.substringBefore;\n    this.functions[\"{}substring-after\"] = Functions.substringAfter;\n    this.functions[\"{}substring\"] = Functions.substring;\n    this.functions[\"{}string-length\"] = Functions.stringLength;\n    this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\n    this.functions[\"{}translate\"] = Functions.translate;\n    this.functions[\"{}boolean\"] = Functions.boolean_;\n    this.functions[\"{}not\"] = Functions.not;\n    this.functions[\"{}true\"] = Functions.true_;\n    this.functions[\"{}false\"] = Functions.false_;\n    this.functions[\"{}lang\"] = Functions.lang;\n    this.functions[\"{}number\"] = Functions.number;\n    this.functions[\"{}sum\"] = Functions.sum;\n    this.functions[\"{}floor\"] = Functions.floor;\n    this.functions[\"{}ceiling\"] = Functions.ceiling;\n    this.functions[\"{}round\"] = Functions.round;\n  };\n  FunctionResolver.prototype.addFunction = function (ns, ln, f) {\n    this.functions[\"{\" + ns + \"}\" + ln] = f;\n  };\n  FunctionResolver.getFunctionFromContext = function (qName, context) {\n    var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\n    if (parts[0] === null) {\n      throw new Error(\"Cannot resolve QName \" + name);\n    }\n    return context.functionResolver.getFunction(parts[1], parts[0]);\n  };\n  FunctionResolver.prototype.getFunction = function (localName, namespace) {\n    return this.functions[\"{\" + namespace + \"}\" + localName];\n  };\n\n  // NamespaceResolver /////////////////////////////////////////////////////////\n\n  NamespaceResolver.prototype = new Object();\n  NamespaceResolver.prototype.constructor = NamespaceResolver;\n  NamespaceResolver.superclass = Object.prototype;\n  function NamespaceResolver() {}\n  NamespaceResolver.prototype.getNamespace = function (prefix, n) {\n    if (prefix == \"xml\") {\n      return XPath.XML_NAMESPACE_URI;\n    } else if (prefix == \"xmlns\") {\n      return XPath.XMLNS_NAMESPACE_URI;\n    }\n    if (n.nodeType == NodeTypes.DOCUMENT_NODE) {\n      n = n.documentElement;\n    } else if (n.nodeType == NodeTypes.ATTRIBUTE_NODE) {\n      n = PathExpr.getOwnerElement(n);\n    } else if (n.nodeType != NodeTypes.ELEMENT_NODE) {\n      n = n.parentNode;\n    }\n    while (n != null && n.nodeType == NodeTypes.ELEMENT_NODE) {\n      var nnm = n.attributes;\n      for (var i = 0; i < nnm.length; i++) {\n        var a = nnm.item(i);\n        var aname = a.name || a.nodeName;\n        if (aname === \"xmlns\" && prefix === \"\" || aname === \"xmlns:\" + prefix) {\n          return String(a.value || a.nodeValue);\n        }\n      }\n      n = n.parentNode;\n    }\n    return null;\n  };\n\n  // Functions /////////////////////////////////////////////////////////////////\n\n  var Functions = new Object();\n  Functions.last = function (c) {\n    if (arguments.length != 1) {\n      throw new Error(\"Function last expects ()\");\n    }\n    return new XNumber(c.contextSize);\n  };\n  Functions.position = function (c) {\n    if (arguments.length != 1) {\n      throw new Error(\"Function position expects ()\");\n    }\n    return new XNumber(c.contextPosition);\n  };\n  Functions.count = function () {\n    var c = arguments[0];\n    var ns;\n    if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\n      throw new Error(\"Function count expects (node-set)\");\n    }\n    return new XNumber(ns.size);\n  };\n  Functions.id = function () {\n    var c = arguments[0];\n    var id;\n    if (arguments.length != 2) {\n      throw new Error(\"Function id expects (object)\");\n    }\n    id = arguments[1].evaluate(c);\n    if (Utilities.instance_of(id, XNodeSet)) {\n      id = id.toArray().join(\" \");\n    } else {\n      id = id.stringValue();\n    }\n    var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\n    var count = 0;\n    var ns = new XNodeSet();\n    var doc = c.contextNode.nodeType == NodeTypes.DOCUMENT_NODE ? c.contextNode : c.contextNode.ownerDocument;\n    for (var i = 0; i < ids.length; i++) {\n      var n;\n      if (doc.getElementById) {\n        n = doc.getElementById(ids[i]);\n      } else {\n        n = Utilities.getElementById(doc, ids[i]);\n      }\n      if (n != null) {\n        ns.add(n);\n        count++;\n      }\n    }\n    return ns;\n  };\n  Functions.localName = function (c, eNode) {\n    var n;\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = eNode.evaluate(c).first();\n    } else {\n      throw new Error(\"Function local-name expects (node-set?)\");\n    }\n    if (n == null) {\n      return new XString(\"\");\n    }\n    return new XString(n.localName ||\n    //  standard elements and attributes\n    n.baseName ||\n    //  IE\n    n.target ||\n    //  processing instructions\n    n.nodeName ||\n    //  DOM1 elements\n    \"\" //  fallback\n    );\n  };\n  Functions.namespaceURI = function () {\n    var c = arguments[0];\n    var n;\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = arguments[1].evaluate(c).first();\n    } else {\n      throw new Error(\"Function namespace-uri expects (node-set?)\");\n    }\n    if (n == null) {\n      return new XString(\"\");\n    }\n    return new XString(n.namespaceURI);\n  };\n  Functions.name = function () {\n    var c = arguments[0];\n    var n;\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = arguments[1].evaluate(c).first();\n    } else {\n      throw new Error(\"Function name expects (node-set?)\");\n    }\n    if (n == null) {\n      return new XString(\"\");\n    }\n    if (n.nodeType == NodeTypes.ELEMENT_NODE) {\n      return new XString(n.nodeName);\n    } else if (n.nodeType == NodeTypes.ATTRIBUTE_NODE) {\n      return new XString(n.name || n.nodeName);\n    } else if (n.nodeType === NodeTypes.PROCESSING_INSTRUCTION_NODE) {\n      return new XString(n.target || n.nodeName);\n    } else if (n.localName == null) {\n      return new XString(\"\");\n    } else {\n      return new XString(n.localName);\n    }\n  };\n  Functions.string = function () {\n    var c = arguments[0];\n    if (arguments.length == 1) {\n      return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\n    } else if (arguments.length == 2) {\n      return arguments[1].evaluate(c).string();\n    }\n    throw new Error(\"Function string expects (object?)\");\n  };\n  Functions.concat = function (c) {\n    if (arguments.length < 3) {\n      throw new Error(\"Function concat expects (string, string[, string]*)\");\n    }\n    var s = \"\";\n    for (var i = 1; i < arguments.length; i++) {\n      s += arguments[i].evaluate(c).stringValue();\n    }\n    return new XString(s);\n  };\n  Functions.startsWith = function () {\n    var c = arguments[0];\n    if (arguments.length != 3) {\n      throw new Error(\"Function startsWith expects (string, string)\");\n    }\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XBoolean(s1.substring(0, s2.length) == s2);\n  };\n  Functions.contains = function () {\n    var c = arguments[0];\n    if (arguments.length != 3) {\n      throw new Error(\"Function contains expects (string, string)\");\n    }\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XBoolean(s1.indexOf(s2) !== -1);\n  };\n  Functions.substringBefore = function () {\n    var c = arguments[0];\n    if (arguments.length != 3) {\n      throw new Error(\"Function substring-before expects (string, string)\");\n    }\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XString(s1.substring(0, s1.indexOf(s2)));\n  };\n  Functions.substringAfter = function () {\n    var c = arguments[0];\n    if (arguments.length != 3) {\n      throw new Error(\"Function substring-after expects (string, string)\");\n    }\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    if (s2.length == 0) {\n      return new XString(s1);\n    }\n    var i = s1.indexOf(s2);\n    if (i == -1) {\n      return new XString(\"\");\n    }\n    return new XString(s1.substring(i + s2.length));\n  };\n  Functions.substring = function () {\n    var c = arguments[0];\n    if (!(arguments.length == 3 || arguments.length == 4)) {\n      throw new Error(\"Function substring expects (string, number, number?)\");\n    }\n    var s = arguments[1].evaluate(c).stringValue();\n    var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\n    var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\n    return new XString(s.substring(n1, n2));\n  };\n  Functions.stringLength = function () {\n    var c = arguments[0];\n    var s;\n    if (arguments.length == 1) {\n      s = XNodeSet.prototype.stringForNode(c.contextNode);\n    } else if (arguments.length == 2) {\n      s = arguments[1].evaluate(c).stringValue();\n    } else {\n      throw new Error(\"Function string-length expects (string?)\");\n    }\n    return new XNumber(s.length);\n  };\n  Functions.normalizeSpace = function () {\n    var c = arguments[0];\n    var s;\n    if (arguments.length == 1) {\n      s = XNodeSet.prototype.stringForNode(c.contextNode);\n    } else if (arguments.length == 2) {\n      s = arguments[1].evaluate(c).stringValue();\n    } else {\n      throw new Error(\"Function normalize-space expects (string?)\");\n    }\n    var i = 0;\n    var j = s.length - 1;\n    while (Utilities.isSpace(s.charCodeAt(j))) {\n      j--;\n    }\n    var t = \"\";\n    while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\n      i++;\n    }\n    while (i <= j) {\n      if (Utilities.isSpace(s.charCodeAt(i))) {\n        t += \" \";\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\n          i++;\n        }\n      } else {\n        t += s.charAt(i);\n        i++;\n      }\n    }\n    return new XString(t);\n  };\n  Functions.translate = function (c, eValue, eFrom, eTo) {\n    if (arguments.length != 4) {\n      throw new Error(\"Function translate expects (string, string, string)\");\n    }\n    var value = eValue.evaluate(c).stringValue();\n    var from = eFrom.evaluate(c).stringValue();\n    var to = eTo.evaluate(c).stringValue();\n    var cMap = reduce(function (acc, ch, i) {\n      if (!(ch in acc)) {\n        acc[ch] = i > to.length ? '' : to[i];\n      }\n      return acc;\n    }, {}, from);\n    var t = join('', map(function (ch) {\n      return ch in cMap ? cMap[ch] : ch;\n    }, value));\n    return new XString(t);\n  };\n  Functions.boolean_ = function () {\n    var c = arguments[0];\n    if (arguments.length != 2) {\n      throw new Error(\"Function boolean expects (object)\");\n    }\n    return arguments[1].evaluate(c).bool();\n  };\n  Functions.not = function (c, eValue) {\n    if (arguments.length != 2) {\n      throw new Error(\"Function not expects (object)\");\n    }\n    return eValue.evaluate(c).bool().not();\n  };\n  Functions.true_ = function () {\n    if (arguments.length != 1) {\n      throw new Error(\"Function true expects ()\");\n    }\n    return XBoolean.true_;\n  };\n  Functions.false_ = function () {\n    if (arguments.length != 1) {\n      throw new Error(\"Function false expects ()\");\n    }\n    return XBoolean.false_;\n  };\n  Functions.lang = function () {\n    var c = arguments[0];\n    if (arguments.length != 2) {\n      throw new Error(\"Function lang expects (string)\");\n    }\n    var lang;\n    for (var n = c.contextNode; n != null && n.nodeType != NodeTypes.DOCUMENT_NODE; n = n.parentNode) {\n      var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\n      if (a != null) {\n        lang = String(a);\n        break;\n      }\n    }\n    if (lang == null) {\n      return XBoolean.false_;\n    }\n    var s = arguments[1].evaluate(c).stringValue();\n    return new XBoolean(lang.substring(0, s.length) == s && (lang.length == s.length || lang.charAt(s.length) == '-'));\n  };\n  Functions.number = function () {\n    var c = arguments[0];\n    if (!(arguments.length == 1 || arguments.length == 2)) {\n      throw new Error(\"Function number expects (object?)\");\n    }\n    if (arguments.length == 1) {\n      return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\n    }\n    return arguments[1].evaluate(c).number();\n  };\n  Functions.sum = function () {\n    var c = arguments[0];\n    var ns;\n    if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\n      throw new Error(\"Function sum expects (node-set)\");\n    }\n    ns = ns.toUnsortedArray();\n    var n = 0;\n    for (var i = 0; i < ns.length; i++) {\n      n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\n    }\n    return new XNumber(n);\n  };\n  Functions.floor = function () {\n    var c = arguments[0];\n    if (arguments.length != 2) {\n      throw new Error(\"Function floor expects (number)\");\n    }\n    return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\n  };\n  Functions.ceiling = function () {\n    var c = arguments[0];\n    if (arguments.length != 2) {\n      throw new Error(\"Function ceiling expects (number)\");\n    }\n    return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\n  };\n  Functions.round = function () {\n    var c = arguments[0];\n    if (arguments.length != 2) {\n      throw new Error(\"Function round expects (number)\");\n    }\n    return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\n  };\n\n  // Utilities /////////////////////////////////////////////////////////////////\n\n  var Utilities = new Object();\n  Utilities.isAttribute = function (val) {\n    return val && (val.nodeType === NodeTypes.ATTRIBUTE_NODE || val.ownerElement);\n  };\n  Utilities.splitQName = function (qn) {\n    var i = qn.indexOf(\":\");\n    if (i == -1) {\n      return [null, qn];\n    }\n    return [qn.substring(0, i), qn.substring(i + 1)];\n  };\n  Utilities.resolveQName = function (qn, nr, n, useDefault) {\n    var parts = Utilities.splitQName(qn);\n    if (parts[0] != null) {\n      parts[0] = nr.getNamespace(parts[0], n);\n    } else {\n      if (useDefault) {\n        parts[0] = nr.getNamespace(\"\", n);\n        if (parts[0] == null) {\n          parts[0] = \"\";\n        }\n      } else {\n        parts[0] = \"\";\n      }\n    }\n    return parts;\n  };\n  Utilities.isSpace = function (c) {\n    return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\n  };\n  Utilities.isLetter = function (c) {\n    return c >= 0x0041 && c <= 0x005A || c >= 0x0061 && c <= 0x007A || c >= 0x00C0 && c <= 0x00D6 || c >= 0x00D8 && c <= 0x00F6 || c >= 0x00F8 && c <= 0x00FF || c >= 0x0100 && c <= 0x0131 || c >= 0x0134 && c <= 0x013E || c >= 0x0141 && c <= 0x0148 || c >= 0x014A && c <= 0x017E || c >= 0x0180 && c <= 0x01C3 || c >= 0x01CD && c <= 0x01F0 || c >= 0x01F4 && c <= 0x01F5 || c >= 0x01FA && c <= 0x0217 || c >= 0x0250 && c <= 0x02A8 || c >= 0x02BB && c <= 0x02C1 || c == 0x0386 || c >= 0x0388 && c <= 0x038A || c == 0x038C || c >= 0x038E && c <= 0x03A1 || c >= 0x03A3 && c <= 0x03CE || c >= 0x03D0 && c <= 0x03D6 || c == 0x03DA || c == 0x03DC || c == 0x03DE || c == 0x03E0 || c >= 0x03E2 && c <= 0x03F3 || c >= 0x0401 && c <= 0x040C || c >= 0x040E && c <= 0x044F || c >= 0x0451 && c <= 0x045C || c >= 0x045E && c <= 0x0481 || c >= 0x0490 && c <= 0x04C4 || c >= 0x04C7 && c <= 0x04C8 || c >= 0x04CB && c <= 0x04CC || c >= 0x04D0 && c <= 0x04EB || c >= 0x04EE && c <= 0x04F5 || c >= 0x04F8 && c <= 0x04F9 || c >= 0x0531 && c <= 0x0556 || c == 0x0559 || c >= 0x0561 && c <= 0x0586 || c >= 0x05D0 && c <= 0x05EA || c >= 0x05F0 && c <= 0x05F2 || c >= 0x0621 && c <= 0x063A || c >= 0x0641 && c <= 0x064A || c >= 0x0671 && c <= 0x06B7 || c >= 0x06BA && c <= 0x06BE || c >= 0x06C0 && c <= 0x06CE || c >= 0x06D0 && c <= 0x06D3 || c == 0x06D5 || c >= 0x06E5 && c <= 0x06E6 || c >= 0x0905 && c <= 0x0939 || c == 0x093D || c >= 0x0958 && c <= 0x0961 || c >= 0x0985 && c <= 0x098C || c >= 0x098F && c <= 0x0990 || c >= 0x0993 && c <= 0x09A8 || c >= 0x09AA && c <= 0x09B0 || c == 0x09B2 || c >= 0x09B6 && c <= 0x09B9 || c >= 0x09DC && c <= 0x09DD || c >= 0x09DF && c <= 0x09E1 || c >= 0x09F0 && c <= 0x09F1 || c >= 0x0A05 && c <= 0x0A0A || c >= 0x0A0F && c <= 0x0A10 || c >= 0x0A13 && c <= 0x0A28 || c >= 0x0A2A && c <= 0x0A30 || c >= 0x0A32 && c <= 0x0A33 || c >= 0x0A35 && c <= 0x0A36 || c >= 0x0A38 && c <= 0x0A39 || c >= 0x0A59 && c <= 0x0A5C || c == 0x0A5E || c >= 0x0A72 && c <= 0x0A74 || c >= 0x0A85 && c <= 0x0A8B || c == 0x0A8D || c >= 0x0A8F && c <= 0x0A91 || c >= 0x0A93 && c <= 0x0AA8 || c >= 0x0AAA && c <= 0x0AB0 || c >= 0x0AB2 && c <= 0x0AB3 || c >= 0x0AB5 && c <= 0x0AB9 || c == 0x0ABD || c == 0x0AE0 || c >= 0x0B05 && c <= 0x0B0C || c >= 0x0B0F && c <= 0x0B10 || c >= 0x0B13 && c <= 0x0B28 || c >= 0x0B2A && c <= 0x0B30 || c >= 0x0B32 && c <= 0x0B33 || c >= 0x0B36 && c <= 0x0B39 || c == 0x0B3D || c >= 0x0B5C && c <= 0x0B5D || c >= 0x0B5F && c <= 0x0B61 || c >= 0x0B85 && c <= 0x0B8A || c >= 0x0B8E && c <= 0x0B90 || c >= 0x0B92 && c <= 0x0B95 || c >= 0x0B99 && c <= 0x0B9A || c == 0x0B9C || c >= 0x0B9E && c <= 0x0B9F || c >= 0x0BA3 && c <= 0x0BA4 || c >= 0x0BA8 && c <= 0x0BAA || c >= 0x0BAE && c <= 0x0BB5 || c >= 0x0BB7 && c <= 0x0BB9 || c >= 0x0C05 && c <= 0x0C0C || c >= 0x0C0E && c <= 0x0C10 || c >= 0x0C12 && c <= 0x0C28 || c >= 0x0C2A && c <= 0x0C33 || c >= 0x0C35 && c <= 0x0C39 || c >= 0x0C60 && c <= 0x0C61 || c >= 0x0C85 && c <= 0x0C8C || c >= 0x0C8E && c <= 0x0C90 || c >= 0x0C92 && c <= 0x0CA8 || c >= 0x0CAA && c <= 0x0CB3 || c >= 0x0CB5 && c <= 0x0CB9 || c == 0x0CDE || c >= 0x0CE0 && c <= 0x0CE1 || c >= 0x0D05 && c <= 0x0D0C || c >= 0x0D0E && c <= 0x0D10 || c >= 0x0D12 && c <= 0x0D28 || c >= 0x0D2A && c <= 0x0D39 || c >= 0x0D60 && c <= 0x0D61 || c >= 0x0E01 && c <= 0x0E2E || c == 0x0E30 || c >= 0x0E32 && c <= 0x0E33 || c >= 0x0E40 && c <= 0x0E45 || c >= 0x0E81 && c <= 0x0E82 || c == 0x0E84 || c >= 0x0E87 && c <= 0x0E88 || c == 0x0E8A || c == 0x0E8D || c >= 0x0E94 && c <= 0x0E97 || c >= 0x0E99 && c <= 0x0E9F || c >= 0x0EA1 && c <= 0x0EA3 || c == 0x0EA5 || c == 0x0EA7 || c >= 0x0EAA && c <= 0x0EAB || c >= 0x0EAD && c <= 0x0EAE || c == 0x0EB0 || c >= 0x0EB2 && c <= 0x0EB3 || c == 0x0EBD || c >= 0x0EC0 && c <= 0x0EC4 || c >= 0x0F40 && c <= 0x0F47 || c >= 0x0F49 && c <= 0x0F69 || c >= 0x10A0 && c <= 0x10C5 || c >= 0x10D0 && c <= 0x10F6 || c == 0x1100 || c >= 0x1102 && c <= 0x1103 || c >= 0x1105 && c <= 0x1107 || c == 0x1109 || c >= 0x110B && c <= 0x110C || c >= 0x110E && c <= 0x1112 || c == 0x113C || c == 0x113E || c == 0x1140 || c == 0x114C || c == 0x114E || c == 0x1150 || c >= 0x1154 && c <= 0x1155 || c == 0x1159 || c >= 0x115F && c <= 0x1161 || c == 0x1163 || c == 0x1165 || c == 0x1167 || c == 0x1169 || c >= 0x116D && c <= 0x116E || c >= 0x1172 && c <= 0x1173 || c == 0x1175 || c == 0x119E || c == 0x11A8 || c == 0x11AB || c >= 0x11AE && c <= 0x11AF || c >= 0x11B7 && c <= 0x11B8 || c == 0x11BA || c >= 0x11BC && c <= 0x11C2 || c == 0x11EB || c == 0x11F0 || c == 0x11F9 || c >= 0x1E00 && c <= 0x1E9B || c >= 0x1EA0 && c <= 0x1EF9 || c >= 0x1F00 && c <= 0x1F15 || c >= 0x1F18 && c <= 0x1F1D || c >= 0x1F20 && c <= 0x1F45 || c >= 0x1F48 && c <= 0x1F4D || c >= 0x1F50 && c <= 0x1F57 || c == 0x1F59 || c == 0x1F5B || c == 0x1F5D || c >= 0x1F5F && c <= 0x1F7D || c >= 0x1F80 && c <= 0x1FB4 || c >= 0x1FB6 && c <= 0x1FBC || c == 0x1FBE || c >= 0x1FC2 && c <= 0x1FC4 || c >= 0x1FC6 && c <= 0x1FCC || c >= 0x1FD0 && c <= 0x1FD3 || c >= 0x1FD6 && c <= 0x1FDB || c >= 0x1FE0 && c <= 0x1FEC || c >= 0x1FF2 && c <= 0x1FF4 || c >= 0x1FF6 && c <= 0x1FFC || c == 0x2126 || c >= 0x212A && c <= 0x212B || c == 0x212E || c >= 0x2180 && c <= 0x2182 || c >= 0x3041 && c <= 0x3094 || c >= 0x30A1 && c <= 0x30FA || c >= 0x3105 && c <= 0x312C || c >= 0xAC00 && c <= 0xD7A3 || c >= 0x4E00 && c <= 0x9FA5 || c == 0x3007 || c >= 0x3021 && c <= 0x3029;\n  };\n  Utilities.isNCNameChar = function (c) {\n    return c >= 0x0030 && c <= 0x0039 || c >= 0x0660 && c <= 0x0669 || c >= 0x06F0 && c <= 0x06F9 || c >= 0x0966 && c <= 0x096F || c >= 0x09E6 && c <= 0x09EF || c >= 0x0A66 && c <= 0x0A6F || c >= 0x0AE6 && c <= 0x0AEF || c >= 0x0B66 && c <= 0x0B6F || c >= 0x0BE7 && c <= 0x0BEF || c >= 0x0C66 && c <= 0x0C6F || c >= 0x0CE6 && c <= 0x0CEF || c >= 0x0D66 && c <= 0x0D6F || c >= 0x0E50 && c <= 0x0E59 || c >= 0x0ED0 && c <= 0x0ED9 || c >= 0x0F20 && c <= 0x0F29 || c == 0x002E || c == 0x002D || c == 0x005F || Utilities.isLetter(c) || c >= 0x0300 && c <= 0x0345 || c >= 0x0360 && c <= 0x0361 || c >= 0x0483 && c <= 0x0486 || c >= 0x0591 && c <= 0x05A1 || c >= 0x05A3 && c <= 0x05B9 || c >= 0x05BB && c <= 0x05BD || c == 0x05BF || c >= 0x05C1 && c <= 0x05C2 || c == 0x05C4 || c >= 0x064B && c <= 0x0652 || c == 0x0670 || c >= 0x06D6 && c <= 0x06DC || c >= 0x06DD && c <= 0x06DF || c >= 0x06E0 && c <= 0x06E4 || c >= 0x06E7 && c <= 0x06E8 || c >= 0x06EA && c <= 0x06ED || c >= 0x0901 && c <= 0x0903 || c == 0x093C || c >= 0x093E && c <= 0x094C || c == 0x094D || c >= 0x0951 && c <= 0x0954 || c >= 0x0962 && c <= 0x0963 || c >= 0x0981 && c <= 0x0983 || c == 0x09BC || c == 0x09BE || c == 0x09BF || c >= 0x09C0 && c <= 0x09C4 || c >= 0x09C7 && c <= 0x09C8 || c >= 0x09CB && c <= 0x09CD || c == 0x09D7 || c >= 0x09E2 && c <= 0x09E3 || c == 0x0A02 || c == 0x0A3C || c == 0x0A3E || c == 0x0A3F || c >= 0x0A40 && c <= 0x0A42 || c >= 0x0A47 && c <= 0x0A48 || c >= 0x0A4B && c <= 0x0A4D || c >= 0x0A70 && c <= 0x0A71 || c >= 0x0A81 && c <= 0x0A83 || c == 0x0ABC || c >= 0x0ABE && c <= 0x0AC5 || c >= 0x0AC7 && c <= 0x0AC9 || c >= 0x0ACB && c <= 0x0ACD || c >= 0x0B01 && c <= 0x0B03 || c == 0x0B3C || c >= 0x0B3E && c <= 0x0B43 || c >= 0x0B47 && c <= 0x0B48 || c >= 0x0B4B && c <= 0x0B4D || c >= 0x0B56 && c <= 0x0B57 || c >= 0x0B82 && c <= 0x0B83 || c >= 0x0BBE && c <= 0x0BC2 || c >= 0x0BC6 && c <= 0x0BC8 || c >= 0x0BCA && c <= 0x0BCD || c == 0x0BD7 || c >= 0x0C01 && c <= 0x0C03 || c >= 0x0C3E && c <= 0x0C44 || c >= 0x0C46 && c <= 0x0C48 || c >= 0x0C4A && c <= 0x0C4D || c >= 0x0C55 && c <= 0x0C56 || c >= 0x0C82 && c <= 0x0C83 || c >= 0x0CBE && c <= 0x0CC4 || c >= 0x0CC6 && c <= 0x0CC8 || c >= 0x0CCA && c <= 0x0CCD || c >= 0x0CD5 && c <= 0x0CD6 || c >= 0x0D02 && c <= 0x0D03 || c >= 0x0D3E && c <= 0x0D43 || c >= 0x0D46 && c <= 0x0D48 || c >= 0x0D4A && c <= 0x0D4D || c == 0x0D57 || c == 0x0E31 || c >= 0x0E34 && c <= 0x0E3A || c >= 0x0E47 && c <= 0x0E4E || c == 0x0EB1 || c >= 0x0EB4 && c <= 0x0EB9 || c >= 0x0EBB && c <= 0x0EBC || c >= 0x0EC8 && c <= 0x0ECD || c >= 0x0F18 && c <= 0x0F19 || c == 0x0F35 || c == 0x0F37 || c == 0x0F39 || c == 0x0F3E || c == 0x0F3F || c >= 0x0F71 && c <= 0x0F84 || c >= 0x0F86 && c <= 0x0F8B || c >= 0x0F90 && c <= 0x0F95 || c == 0x0F97 || c >= 0x0F99 && c <= 0x0FAD || c >= 0x0FB1 && c <= 0x0FB7 || c == 0x0FB9 || c >= 0x20D0 && c <= 0x20DC || c == 0x20E1 || c >= 0x302A && c <= 0x302F || c == 0x3099 || c == 0x309A || c == 0x00B7 || c == 0x02D0 || c == 0x02D1 || c == 0x0387 || c == 0x0640 || c == 0x0E46 || c == 0x0EC6 || c == 0x3005 || c >= 0x3031 && c <= 0x3035 || c >= 0x309D && c <= 0x309E || c >= 0x30FC && c <= 0x30FE;\n  };\n  Utilities.coalesceText = function (n) {\n    for (var m = n.firstChild; m != null; m = m.nextSibling) {\n      if (m.nodeType == NodeTypes.TEXT_NODE || m.nodeType == NodeTypes.CDATA_SECTION_NODE) {\n        var s = m.nodeValue;\n        var first = m;\n        m = m.nextSibling;\n        while (m != null && (m.nodeType == NodeTypes.TEXT_NODE || m.nodeType == NodeTypes.CDATA_SECTION_NODE)) {\n          s += m.nodeValue;\n          var del = m;\n          m = m.nextSibling;\n          del.parentNode.removeChild(del);\n        }\n        if (first.nodeType == NodeTypes.CDATA_SECTION_NODE) {\n          var p = first.parentNode;\n          if (first.nextSibling == null) {\n            p.removeChild(first);\n            p.appendChild(p.ownerDocument.createTextNode(s));\n          } else {\n            var next = first.nextSibling;\n            p.removeChild(first);\n            p.insertBefore(p.ownerDocument.createTextNode(s), next);\n          }\n        } else {\n          first.nodeValue = s;\n        }\n        if (m == null) {\n          break;\n        }\n      } else if (m.nodeType == NodeTypes.ELEMENT_NODE) {\n        Utilities.coalesceText(m);\n      }\n    }\n  };\n  Utilities.instance_of = function (o, c) {\n    while (o != null) {\n      if (o.constructor === c) {\n        return true;\n      }\n      if (o === Object) {\n        return false;\n      }\n      o = o.constructor.superclass;\n    }\n    return false;\n  };\n  Utilities.getElementById = function (n, id) {\n    // Note that this does not check the DTD to check for actual\n    // attributes of type ID, so this may be a bit wrong.\n    if (n.nodeType == NodeTypes.ELEMENT_NODE) {\n      if (n.getAttribute(\"id\") == id || n.getAttributeNS(null, \"id\") == id) {\n        return n;\n      }\n    }\n    for (var m = n.firstChild; m != null; m = m.nextSibling) {\n      var res = Utilities.getElementById(m, id);\n      if (res != null) {\n        return res;\n      }\n    }\n    return null;\n  };\n\n  // XPathException ////////////////////////////////////////////////////////////\n\n  var XPathException = function () {\n    function getMessage(code, exception) {\n      var msg = exception ? \": \" + exception.toString() : \"\";\n      switch (code) {\n        case XPathException.INVALID_EXPRESSION_ERR:\n          return \"Invalid expression\" + msg;\n        case XPathException.TYPE_ERR:\n          return \"Type error\" + msg;\n      }\n      return null;\n    }\n    function XPathException(code, error, message) {\n      var err = Error.call(this, getMessage(code, error) || message);\n      err.code = code;\n      err.exception = error;\n      return err;\n    }\n    XPathException.prototype = Object.create(Error.prototype);\n    XPathException.prototype.constructor = XPathException;\n    XPathException.superclass = Error;\n    XPathException.prototype.toString = function () {\n      return this.message;\n    };\n    XPathException.fromMessage = function (message, error) {\n      return new XPathException(null, error, message);\n    };\n    XPathException.INVALID_EXPRESSION_ERR = 51;\n    XPathException.TYPE_ERR = 52;\n    return XPathException;\n  }();\n\n  // XPathExpression ///////////////////////////////////////////////////////////\n\n  XPathExpression.prototype = {};\n  XPathExpression.prototype.constructor = XPathExpression;\n  XPathExpression.superclass = Object.prototype;\n  function XPathExpression(e, r, p) {\n    this.xpath = p.parse(e);\n    this.context = new XPathContext();\n    this.context.namespaceResolver = new XPathNSResolverWrapper(r);\n  }\n  XPathExpression.getOwnerDocument = function (n) {\n    return n.nodeType === NodeTypes.DOCUMENT_NODE ? n : n.ownerDocument;\n  };\n  XPathExpression.detectHtmlDom = function (n) {\n    if (!n) {\n      return false;\n    }\n    var doc = XPathExpression.getOwnerDocument(n);\n    try {\n      return doc.implementation.hasFeature(\"HTML\", \"2.0\");\n    } catch (e) {\n      return true;\n    }\n  };\n  XPathExpression.prototype.evaluate = function (n, t, res) {\n    this.context.expressionContextNode = n;\n    // backward compatibility - no reliable way to detect whether the DOM is HTML, but\n    // this library has been using this method up until now, so we will continue to use it\n    // ONLY when using an XPathExpression\n    this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\n    var result = this.xpath.evaluate(this.context);\n    return new XPathResult(result, t);\n  };\n\n  // XPathNSResolverWrapper ////////////////////////////////////////////////////\n\n  XPathNSResolverWrapper.prototype = {};\n  XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\n  XPathNSResolverWrapper.superclass = Object.prototype;\n  function XPathNSResolverWrapper(r) {\n    this.xpathNSResolver = r;\n  }\n  XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\n    if (this.xpathNSResolver == null) {\n      return null;\n    }\n    return this.xpathNSResolver.lookupNamespaceURI(prefix);\n  };\n\n  // NodeXPathNSResolver ///////////////////////////////////////////////////////\n\n  NodeXPathNSResolver.prototype = {};\n  NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\n  NodeXPathNSResolver.superclass = Object.prototype;\n  function NodeXPathNSResolver(n) {\n    this.node = n;\n    this.namespaceResolver = new NamespaceResolver();\n  }\n  NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\n    return this.namespaceResolver.getNamespace(prefix, this.node);\n  };\n\n  // XPathResult ///////////////////////////////////////////////////////////////\n\n  XPathResult.prototype = {};\n  XPathResult.prototype.constructor = XPathResult;\n  XPathResult.superclass = Object.prototype;\n  function XPathResult(v, t) {\n    if (t == XPathResult.ANY_TYPE) {\n      if (v.constructor === XString) {\n        t = XPathResult.STRING_TYPE;\n      } else if (v.constructor === XNumber) {\n        t = XPathResult.NUMBER_TYPE;\n      } else if (v.constructor === XBoolean) {\n        t = XPathResult.BOOLEAN_TYPE;\n      } else if (v.constructor === XNodeSet) {\n        t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\n      }\n    }\n    this.resultType = t;\n    switch (t) {\n      case XPathResult.NUMBER_TYPE:\n        this.numberValue = v.numberValue();\n        return;\n      case XPathResult.STRING_TYPE:\n        this.stringValue = v.stringValue();\n        return;\n      case XPathResult.BOOLEAN_TYPE:\n        this.booleanValue = v.booleanValue();\n        return;\n      case XPathResult.ANY_UNORDERED_NODE_TYPE:\n      case XPathResult.FIRST_ORDERED_NODE_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.singleNodeValue = v.first();\n          return;\n        }\n        break;\n      case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\n      case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.invalidIteratorState = false;\n          this.nodes = v.toArray();\n          this.iteratorIndex = 0;\n          return;\n        }\n        break;\n      case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\n      case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.nodes = v.toArray();\n          this.snapshotLength = this.nodes.length;\n          return;\n        }\n        break;\n    }\n    throw new XPathException(XPathException.TYPE_ERR);\n  }\n  ;\n  XPathResult.prototype.iterateNext = function () {\n    if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\n      throw new XPathException(XPathException.TYPE_ERR);\n    }\n    return this.nodes[this.iteratorIndex++];\n  };\n  XPathResult.prototype.snapshotItem = function (i) {\n    if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\n      throw new XPathException(XPathException.TYPE_ERR);\n    }\n    return this.nodes[i];\n  };\n  XPathResult.ANY_TYPE = 0;\n  XPathResult.NUMBER_TYPE = 1;\n  XPathResult.STRING_TYPE = 2;\n  XPathResult.BOOLEAN_TYPE = 3;\n  XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\n  XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\n  XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\n  XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\n  XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\n  XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\n\n  // DOM 3 XPath support ///////////////////////////////////////////////////////\n\n  function installDOM3XPathSupport(doc, p) {\n    doc.createExpression = function (e, r) {\n      try {\n        return new XPathExpression(e, r, p);\n      } catch (e) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\n      }\n    };\n    doc.createNSResolver = function (n) {\n      return new NodeXPathNSResolver(n);\n    };\n    doc.evaluate = function (e, cn, r, t, res) {\n      if (t < 0 || t > 9) {\n        throw {\n          code: 0,\n          toString: function () {\n            return \"Request type not supported\";\n          }\n        };\n      }\n      return doc.createExpression(e, r, p).evaluate(cn, t, res);\n    };\n  }\n  ;\n\n  // ---------------------------------------------------------------------------\n\n  // Install DOM 3 XPath support for the current document.\n  try {\n    var shouldInstall = true;\n    try {\n      if (document.implementation && document.implementation.hasFeature && document.implementation.hasFeature(\"XPath\", null)) {\n        shouldInstall = false;\n      }\n    } catch (e) {}\n    if (shouldInstall) {\n      installDOM3XPathSupport(document, new XPathParser());\n    }\n  } catch (e) {}\n\n  // ---------------------------------------------------------------------------\n  // exports for node.js\n\n  installDOM3XPathSupport(exports, new XPathParser());\n  (function () {\n    var parser = new XPathParser();\n    var defaultNSResolver = new NamespaceResolver();\n    var defaultFunctionResolver = new FunctionResolver();\n    var defaultVariableResolver = new VariableResolver();\n    function makeNSResolverFromFunction(func) {\n      return {\n        getNamespace: function (prefix, node) {\n          var ns = func(prefix, node);\n          return ns || defaultNSResolver.getNamespace(prefix, node);\n        }\n      };\n    }\n    function makeNSResolverFromObject(obj) {\n      return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\n    }\n    function makeNSResolverFromMap(map) {\n      return makeNSResolverFromFunction(function (prefix) {\n        return map[prefix];\n      });\n    }\n    function makeNSResolver(resolver) {\n      if (resolver && typeof resolver.getNamespace === \"function\") {\n        return makeNSResolverFromObject(resolver);\n      }\n      if (typeof resolver === \"function\") {\n        return makeNSResolverFromFunction(resolver);\n      }\n\n      // assume prefix -> uri mapping\n      if (typeof resolver === \"object\") {\n        return makeNSResolverFromMap(resolver);\n      }\n      return defaultNSResolver;\n    }\n\n    /** Converts native JavaScript types to their XPath library equivalent */\n    function convertValue(value) {\n      if (value === null || typeof value === \"undefined\" || value instanceof XString || value instanceof XBoolean || value instanceof XNumber || value instanceof XNodeSet) {\n        return value;\n      }\n      switch (typeof value) {\n        case \"string\":\n          return new XString(value);\n        case \"boolean\":\n          return new XBoolean(value);\n        case \"number\":\n          return new XNumber(value);\n      }\n\n      // assume node(s)\n      var ns = new XNodeSet();\n      ns.addArray([].concat(value));\n      return ns;\n    }\n    function makeEvaluator(func) {\n      return function (context) {\n        var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\n          return arg.evaluate(context);\n        });\n        var result = func.apply(this, [].concat(context, args));\n        return convertValue(result);\n      };\n    }\n    function makeFunctionResolverFromFunction(func) {\n      return {\n        getFunction: function (name, namespace) {\n          var found = func(name, namespace);\n          if (found) {\n            return makeEvaluator(found);\n          }\n          return defaultFunctionResolver.getFunction(name, namespace);\n        }\n      };\n    }\n    function makeFunctionResolverFromObject(obj) {\n      return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\n    }\n    function makeFunctionResolverFromMap(map) {\n      return makeFunctionResolverFromFunction(function (name) {\n        return map[name];\n      });\n    }\n    function makeFunctionResolver(resolver) {\n      if (resolver && typeof resolver.getFunction === \"function\") {\n        return makeFunctionResolverFromObject(resolver);\n      }\n      if (typeof resolver === \"function\") {\n        return makeFunctionResolverFromFunction(resolver);\n      }\n\n      // assume map\n      if (typeof resolver === \"object\") {\n        return makeFunctionResolverFromMap(resolver);\n      }\n      return defaultFunctionResolver;\n    }\n    function makeVariableResolverFromFunction(func) {\n      return {\n        getVariable: function (name, namespace) {\n          var value = func(name, namespace);\n          return convertValue(value);\n        }\n      };\n    }\n    function makeVariableResolver(resolver) {\n      if (resolver) {\n        if (typeof resolver.getVariable === \"function\") {\n          return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\n        }\n        if (typeof resolver === \"function\") {\n          return makeVariableResolverFromFunction(resolver);\n        }\n\n        // assume map\n        if (typeof resolver === \"object\") {\n          return makeVariableResolverFromFunction(function (name) {\n            return resolver[name];\n          });\n        }\n      }\n      return defaultVariableResolver;\n    }\n    function copyIfPresent(prop, dest, source) {\n      if (prop in source) {\n        dest[prop] = source[prop];\n      }\n    }\n    function makeContext(options) {\n      var context = new XPathContext();\n      if (options) {\n        context.namespaceResolver = makeNSResolver(options.namespaces);\n        context.functionResolver = makeFunctionResolver(options.functions);\n        context.variableResolver = makeVariableResolver(options.variables);\n        context.expressionContextNode = options.node;\n        copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\n        copyIfPresent('isHtml', context, options);\n      } else {\n        context.namespaceResolver = defaultNSResolver;\n      }\n      return context;\n    }\n    function evaluate(parsedExpression, options) {\n      var context = makeContext(options);\n      return parsedExpression.evaluate(context);\n    }\n    var evaluatorPrototype = {\n      evaluate: function (options) {\n        return evaluate(this.expression, options);\n      },\n      evaluateNumber: function (options) {\n        return this.evaluate(options).numberValue();\n      },\n      evaluateString: function (options) {\n        return this.evaluate(options).stringValue();\n      },\n      evaluateBoolean: function (options) {\n        return this.evaluate(options).booleanValue();\n      },\n      evaluateNodeSet: function (options) {\n        return this.evaluate(options).nodeset();\n      },\n      select: function (options) {\n        return this.evaluateNodeSet(options).toArray();\n      },\n      select1: function (options) {\n        return this.select(options)[0];\n      }\n    };\n    function parse(xpath) {\n      var parsed = parser.parse(xpath);\n      return Object.create(evaluatorPrototype, {\n        expression: {\n          value: parsed\n        }\n      });\n    }\n    exports.parse = parse;\n  })();\n  assign(exports, {\n    XPath: XPath,\n    XPathParser: XPathParser,\n    XPathResult: XPathResult,\n    Step: Step,\n    PathExpr: PathExpr,\n    NodeTest: NodeTest,\n    LocationPath: LocationPath,\n    OrOperation: OrOperation,\n    AndOperation: AndOperation,\n    BarOperation: BarOperation,\n    EqualsOperation: EqualsOperation,\n    NotEqualOperation: NotEqualOperation,\n    LessThanOperation: LessThanOperation,\n    GreaterThanOperation: GreaterThanOperation,\n    LessThanOrEqualOperation: LessThanOrEqualOperation,\n    GreaterThanOrEqualOperation: GreaterThanOrEqualOperation,\n    PlusOperation: PlusOperation,\n    MinusOperation: MinusOperation,\n    MultiplyOperation: MultiplyOperation,\n    DivOperation: DivOperation,\n    ModOperation: ModOperation,\n    UnaryMinusOperation: UnaryMinusOperation,\n    FunctionCall: FunctionCall,\n    VariableReference: VariableReference,\n    XPathContext: XPathContext,\n    XNodeSet: XNodeSet,\n    XBoolean: XBoolean,\n    XString: XString,\n    XNumber: XNumber,\n    NamespaceResolver: NamespaceResolver,\n    FunctionResolver: FunctionResolver,\n    VariableResolver: VariableResolver,\n    Utilities: Utilities\n  });\n\n  // helper\n  exports.select = function (e, doc, single) {\n    return exports.selectWithResolver(e, doc, null, single);\n  };\n  exports.useNamespaces = function (mappings) {\n    var resolver = {\n      mappings: mappings || {},\n      lookupNamespaceURI: function (prefix) {\n        return this.mappings[prefix];\n      }\n    };\n    return function (e, doc, single) {\n      return exports.selectWithResolver(e, doc, resolver, single);\n    };\n  };\n  exports.selectWithResolver = function (e, doc, resolver, single) {\n    var expression = new XPathExpression(e, resolver, new XPathParser());\n    var type = XPathResult.ANY_TYPE;\n    var result = expression.evaluate(doc, type, null);\n    if (result.resultType == XPathResult.STRING_TYPE) {\n      result = result.stringValue;\n    } else if (result.resultType == XPathResult.NUMBER_TYPE) {\n      result = result.numberValue;\n    } else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\n      result = result.booleanValue;\n    } else {\n      result = result.nodes;\n      if (single) {\n        result = result[0];\n      }\n    }\n    return result;\n  };\n  exports.select1 = function (e, doc) {\n    return exports.select(e, doc, true);\n  };\n  var isNodeLike = function (value) {\n    return value && typeof value.nodeType === \"number\" && Number.isInteger(value.nodeType) && value.nodeType >= 1 && value.nodeType <= 11 && typeof value.nodeName === \"string\";\n  };\n  var isArrayOfNodes = function (value) {\n    return Array.isArray(value) && value.every(isNodeLike);\n  };\n  var isNodeOfType = function (type) {\n    return function (value) {\n      return isNodeLike(value) && value.nodeType === type;\n    };\n  };\n  assign(exports, {\n    isNodeLike: isNodeLike,\n    isArrayOfNodes: isArrayOfNodes,\n    isElement: isNodeOfType(NodeTypes.ELEMENT_NODE),\n    isAttribute: isNodeOfType(NodeTypes.ATTRIBUTE_NODE),\n    isTextNode: isNodeOfType(NodeTypes.TEXT_NODE),\n    isCDATASection: isNodeOfType(NodeTypes.CDATA_SECTION_NODE),\n    isProcessingInstruction: isNodeOfType(NodeTypes.PROCESSING_INSTRUCTION_NODE),\n    isComment: isNodeOfType(NodeTypes.COMMENT_NODE),\n    isDocumentNode: isNodeOfType(NodeTypes.DOCUMENT_NODE),\n    isDocumentTypeNode: isNodeOfType(NodeTypes.DOCUMENT_TYPE_NODE),\n    isDocumentFragment: isNodeOfType(NodeTypes.DOCUMENT_FRAGMENT_NODE)\n  });\n  // end non-node wrapper\n})(xpath);","map":{"version":3,"names":["xpath","exports","curry","func","slice","Array","prototype","totalargs","length","partial","args","fn","apply","concat","call","arguments","forEach","f","xs","i","reduce","seed","acc","x","map","mapped","filter","filtered","push","includes","values","value","always","toString","join","s","wrap","pref","suf","str","prototypeConcat","MAX_ARGUMENT_LENGTH","flatten","arr","result","start","chunk","assign","target","varArgs","to","Object","index","nextSource","nextKey","hasOwnProperty","NodeTypes","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","XPathParser","constructor","superclass","init","reduceActions","rhs","OrOperation","AndOperation","EqualsOperation","NotEqualOperation","LessThanOperation","GreaterThanOperation","LessThanOrEqualOperation","GreaterThanOrEqualOperation","PlusOperation","MinusOperation","MultiplyOperation","DivOperation","ModOperation","UnaryMinusOperation","BarOperation","PathExpr","undefined","locationPath","steps","unshift","Step","DESCENDANTORSELF","NodeTest","nodeTest","Utilities","instance_of","filterPredicates","XString","XNumber","FunctionCall","LocationPath","absolute","CHILD","ANCESTOR","ANCESTORORSELF","ATTRIBUTE","DESCENDANT","FOLLOWING","FOLLOWINGSIBLING","NAMESPACE","PARENT","PRECEDING","PRECEDINGSIBLING","SELF","commentTest","textTest","anyPiTest","PITest","VariableReference","nameTestAny","NameTestPrefixAny","split","NameTestQName","actionTable","actionTableNumber","gotoTable","productions","DOUBLEDOT","DOUBLECOLON","DOUBLESLASH","NOTEQUAL","LESSTHANOREQUAL","GREATERTHANOREQUAL","AND","OR","MOD","DIV","MULTIPLYOPERATOR","FUNCTIONNAME","AXISNAME","LITERAL","NUMBER","ASTERISKNAMETEST","QNAME","NCNAMECOLONASTERISK","NODETYPE","PROCESSINGINSTRUCTIONWITHLITERAL","EQUALS","LESSTHAN","GREATERTHAN","PLUS","MINUS","BAR","SLASH","LEFTPARENTHESIS","RIGHTPARENTHESIS","COMMA","AT","LEFTBRACKET","RIGHTBRACKET","DOT","DOLLAR","tokenize","s1","types","pos","c","charAt","number","delimiter","literal","XPathException","fromMessage","last","isLetter","charCodeAt","name","isNCNameChar","Error","SHIFT","REDUCE","ACCEPT","parse","res","tokenPos","state","tokenType","tokenValue","a","t","num","pop","s_","XPath","e","expression","setIfUnset","obj","prop","evaluate","contextNode","expressionContextNode","contextSize","contextPosition","isHtml","XML_NAMESPACE_URI","XMLNS_NAMESPACE_URI","Expression","UnaryOperation","negate","BinaryOperation","lhs","b","bool","booleanValue","equals","notequal","lessthan","greaterthan","lessthanorequal","greaterthanorequal","plus","minus","multiply","div","mod","nodeset","union","filterPreds","locpath","findRoot","node","parentNode","applyPredicates","predicates","nodes","ctx","extend","inNodes","pred","predicateMatches","getRoot","xpc","firstNode","nodeType","virtualRoot","ownerDoc","ownerDocument","n","applyStep","step","self","newNodes","axis","m","getOwnerElement","matches","nnm","attributes","k","item","firstChild","nextSibling","st","attr","nm","String","substring","pre","nsn","XPathNamespace","outer","previousSibling","applyStepWithPredicates","applyStepToNodes","context","bind","applySteps","applyFilter","ns","XNodeSet","nonNodes","toUnsortedArray","applyLocationPath","startNodes","XPathContext","filterResult","addArray","numberValue","predicateString","predicate","predicatesString","filterStr","ownerElement","selectSingleNode","doc","elts","getElementsByTagName","elt","j","an","abs","nodetest","preds","STEPNAMES","type","console","warn","NAMETESTANY","NAMETESTPREFIXANY","NAMETESTQNAME","COMMENT","TEXT","PI","NODE","isNodeType","makeNodeTestType","members","ctor","newType","makeNodeTypeTest","nodeTypes","stringVal","hasPrefix","prefix","nodeName","tagName","indexOf","isElementOrAttribute","nameSpaceMatches","nNamespace","namespaceURI","allowAnyNamespaceForNoPrefix","namespaceResolver","getNamespace","localNameMatches","localName","nLocalName","caseInsensitive","toLowerCase","XPATH_NAMESPACE_NODE","nameParts","v","variable","parts","resolveQName","variableResolver","getVariable","functionName","FunctionResolver","getFunctionFromContext","functionResolver","thisArg","Operators","l","r","string","XBoolean","stringValue","compareWithString","Number","numberFormat","test","parseFloat","NaN","padSmallNumber","numberStr","base","replace","exponent","padLargeNumber","zerosToAppend","strValue","compareWithNumber","Boolean","not","compareWithBoolean","true_","false_","AVLTree","left","right","depth","balance","ldepth","rdepth","lldepth","lrdepth","rotateRR","rotateLL","rrdepth","rldepth","nodeBefore","rightBefore","updateInNewLocation","leftBefore","getDepthFromChildren","nodeOrder","n1","n2","compareDocumentPosition","cpos","d1","d2","m1","m2","n1Par","n2Par","n1isAttr","isAttribute","n2isAttr","cn","childNodes","len","add","o","ret","tree","size","p","first","stringForNode","stringForContainerNode","nodeValue","isNamespaceNode","namespace","nt","buildTree","toArray","toArrayRec","compareWithNodeSet","oInvert","lop","rop","compareWith","isXPathNamespace","vr","nr","fr","VariableResolver","NamespaceResolver","newProps","ln","Functions","functions","addStandardFunctions","position","count","id","startsWith","contains","substringBefore","substringAfter","stringLength","normalizeSpace","translate","boolean_","lang","sum","floor","ceiling","round","addFunction","qName","getFunction","documentElement","aname","ids","getElementById","eNode","baseName","s2","Math","isSpace","eValue","eFrom","eTo","from","cMap","ch","getAttributeNS","ceil","val","splitQName","qn","useDefault","coalesceText","del","removeChild","appendChild","createTextNode","next","insertBefore","getAttribute","getMessage","code","exception","msg","INVALID_EXPRESSION_ERR","TYPE_ERR","error","message","err","create","XPathExpression","XPathNSResolverWrapper","getOwnerDocument","detectHtmlDom","implementation","hasFeature","XPathResult","xpathNSResolver","lookupNamespaceURI","NodeXPathNSResolver","ANY_TYPE","STRING_TYPE","NUMBER_TYPE","BOOLEAN_TYPE","UNORDERED_NODE_ITERATOR_TYPE","resultType","ANY_UNORDERED_NODE_TYPE","FIRST_ORDERED_NODE_TYPE","singleNodeValue","ORDERED_NODE_ITERATOR_TYPE","invalidIteratorState","iteratorIndex","UNORDERED_NODE_SNAPSHOT_TYPE","ORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","iterateNext","snapshotItem","installDOM3XPathSupport","createExpression","createNSResolver","shouldInstall","document","parser","defaultNSResolver","defaultFunctionResolver","defaultVariableResolver","makeNSResolverFromFunction","makeNSResolverFromObject","makeNSResolverFromMap","makeNSResolver","resolver","convertValue","makeEvaluator","arg","makeFunctionResolverFromFunction","found","makeFunctionResolverFromObject","makeFunctionResolverFromMap","makeFunctionResolver","makeVariableResolverFromFunction","makeVariableResolver","copyIfPresent","dest","source","makeContext","options","namespaces","variables","parsedExpression","evaluatorPrototype","evaluateNumber","evaluateString","evaluateBoolean","evaluateNodeSet","select","select1","parsed","single","selectWithResolver","useNamespaces","mappings","isNodeLike","isInteger","isArrayOfNodes","isArray","every","isNodeOfType","isElement","isTextNode","isCDATASection","isProcessingInstruction","isComment","isDocumentNode","isDocumentTypeNode","isDocumentFragment"],"sources":["/Users/soukaina/Desktop/hotel-reservation-management-soap/frontend-soapt/node_modules/xpath/xpath.js"],"sourcesContent":["/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\r\n\r\n// non-node wrapper\r\nvar xpath = (typeof exports === 'undefined') ? {} : exports;\r\n\r\n(function (exports) {\r\n    \"use strict\";\r\n\r\n    // functional helpers\r\n    function curry(func) {\r\n        var slice = Array.prototype.slice,\r\n            totalargs = func.length,\r\n            partial = function (args, fn) {\r\n                return function () {\r\n                    return fn.apply(this, args.concat(slice.call(arguments)));\r\n                }\r\n            },\r\n            fn = function () {\r\n                var args = slice.call(arguments);\r\n                return (args.length < totalargs) ?\r\n                    partial(args, fn) :\r\n                    func.apply(this, slice.apply(arguments, [0, totalargs]));\r\n            };\r\n        return fn;\r\n    }\r\n\r\n    var forEach = function (f, xs) {\r\n        for (var i = 0; i < xs.length; i += 1) {\r\n            f(xs[i], i, xs);\r\n        }\r\n    };\r\n\r\n    var reduce = function (f, seed, xs) {\r\n        var acc = seed;\r\n\r\n        forEach(function (x, i) { acc = f(acc, x, i); }, xs);\r\n\r\n        return acc;\r\n    };\r\n\r\n    var map = function (f, xs) {\r\n        var mapped = new Array(xs.length);\r\n\r\n        forEach(function (x, i) { mapped[i] = f(x); }, xs);\r\n\r\n        return mapped;\r\n    };\r\n\r\n    var filter = function (f, xs) {\r\n        var filtered = [];\r\n\r\n        forEach(function (x, i) { if (f(x, i)) { filtered.push(x); } }, xs);\r\n\r\n        return filtered;\r\n    };\r\n\r\n    var includes = function (values, value) {\r\n        for (var i = 0; i < values.length; i += 1) {\r\n            if (values[i] === value) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    function always(value) { return function () { return value; } }\r\n\r\n    function toString(x) { return x.toString(); }\r\n    var join = function (s, xs) { return xs.join(s); };\r\n    var wrap = function (pref, suf, str) { return pref + str + suf; };\r\n\r\n    var prototypeConcat = Array.prototype.concat;\r\n\r\n    // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\r\n    var MAX_ARGUMENT_LENGTH = 32767;\r\n\r\n    function flatten(arr) {\r\n        var result = [];\r\n\r\n        for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\r\n            var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\r\n            \r\n            result = prototypeConcat.apply(result, chunk);\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    function assign(target, varArgs) { // .length of function is 2\r\n        var to = Object(target);\r\n\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n\r\n            if (nextSource != null) { // Skip over if undefined or null\r\n                for (var nextKey in nextSource) {\r\n                    // Avoid bugs when hasOwnProperty is shadowed\r\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    var NodeTypes = {\r\n        ELEMENT_NODE: 1,\r\n        ATTRIBUTE_NODE: 2,\r\n        TEXT_NODE: 3,\r\n        CDATA_SECTION_NODE: 4,\r\n        PROCESSING_INSTRUCTION_NODE: 7,\r\n        COMMENT_NODE: 8,\r\n        DOCUMENT_NODE: 9,\r\n        DOCUMENT_TYPE_NODE: 10,\r\n        DOCUMENT_FRAGMENT_NODE: 11,\r\n    };\r\n\r\n    // XPathParser ///////////////////////////////////////////////////////////////\r\n\r\n    XPathParser.prototype = new Object();\r\n    XPathParser.prototype.constructor = XPathParser;\r\n    XPathParser.superclass = Object.prototype;\r\n\r\n    function XPathParser() {\r\n        this.init();\r\n    }\r\n\r\n    XPathParser.prototype.init = function () {\r\n        this.reduceActions = [];\r\n\r\n        this.reduceActions[3] = function (rhs) {\r\n            return new OrOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[5] = function (rhs) {\r\n            return new AndOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[7] = function (rhs) {\r\n            return new EqualsOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[8] = function (rhs) {\r\n            return new NotEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[10] = function (rhs) {\r\n            return new LessThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[11] = function (rhs) {\r\n            return new GreaterThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[12] = function (rhs) {\r\n            return new LessThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[13] = function (rhs) {\r\n            return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[15] = function (rhs) {\r\n            return new PlusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[16] = function (rhs) {\r\n            return new MinusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[18] = function (rhs) {\r\n            return new MultiplyOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[19] = function (rhs) {\r\n            return new DivOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[20] = function (rhs) {\r\n            return new ModOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[22] = function (rhs) {\r\n            return new UnaryMinusOperation(rhs[1]);\r\n        };\r\n        this.reduceActions[24] = function (rhs) {\r\n            return new BarOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[25] = function (rhs) {\r\n            return new PathExpr(undefined, undefined, rhs[0]);\r\n        };\r\n        this.reduceActions[27] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[28] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[29] = function (rhs) {\r\n            return new PathExpr(rhs[0], [], undefined);\r\n        };\r\n        this.reduceActions[30] = function (rhs) {\r\n            if (Utilities.instance_of(rhs[0], PathExpr)) {\r\n                if (rhs[0].filterPredicates == undefined) {\r\n                    rhs[0].filterPredicates = [];\r\n                }\r\n                rhs[0].filterPredicates.push(rhs[1]);\r\n                return rhs[0];\r\n            } else {\r\n                return new PathExpr(rhs[0], [rhs[1]], undefined);\r\n            }\r\n        };\r\n        this.reduceActions[32] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[33] = function (rhs) {\r\n            return new XString(rhs[0]);\r\n        };\r\n        this.reduceActions[34] = function (rhs) {\r\n            return new XNumber(rhs[0]);\r\n        };\r\n        this.reduceActions[36] = function (rhs) {\r\n            return new FunctionCall(rhs[0], []);\r\n        };\r\n        this.reduceActions[37] = function (rhs) {\r\n            return new FunctionCall(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[38] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[39] = function (rhs) {\r\n            rhs[2].unshift(rhs[0]);\r\n            return rhs[2];\r\n        };\r\n        this.reduceActions[43] = function (rhs) {\r\n            return new LocationPath(true, []);\r\n        };\r\n        this.reduceActions[44] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[46] = function (rhs) {\r\n            return new LocationPath(false, [rhs[0]]);\r\n        };\r\n        this.reduceActions[47] = function (rhs) {\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[49] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], []);\r\n        };\r\n        this.reduceActions[50] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], []);\r\n        };\r\n        this.reduceActions[51] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], rhs[2]);\r\n        };\r\n        this.reduceActions[52] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], rhs[1]);\r\n        };\r\n        this.reduceActions[54] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[55] = function (rhs) {\r\n            rhs[1].unshift(rhs[0]);\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[56] = function (rhs) {\r\n            if (rhs[0] == \"ancestor\") {\r\n                return Step.ANCESTOR;\r\n            } else if (rhs[0] == \"ancestor-or-self\") {\r\n                return Step.ANCESTORORSELF;\r\n            } else if (rhs[0] == \"attribute\") {\r\n                return Step.ATTRIBUTE;\r\n            } else if (rhs[0] == \"child\") {\r\n                return Step.CHILD;\r\n            } else if (rhs[0] == \"descendant\") {\r\n                return Step.DESCENDANT;\r\n            } else if (rhs[0] == \"descendant-or-self\") {\r\n                return Step.DESCENDANTORSELF;\r\n            } else if (rhs[0] == \"following\") {\r\n                return Step.FOLLOWING;\r\n            } else if (rhs[0] == \"following-sibling\") {\r\n                return Step.FOLLOWINGSIBLING;\r\n            } else if (rhs[0] == \"namespace\") {\r\n                return Step.NAMESPACE;\r\n            } else if (rhs[0] == \"parent\") {\r\n                return Step.PARENT;\r\n            } else if (rhs[0] == \"preceding\") {\r\n                return Step.PRECEDING;\r\n            } else if (rhs[0] == \"preceding-sibling\") {\r\n                return Step.PRECEDINGSIBLING;\r\n            } else if (rhs[0] == \"self\") {\r\n                return Step.SELF;\r\n            }\r\n            return -1;\r\n        };\r\n        this.reduceActions[57] = function (rhs) {\r\n            return Step.ATTRIBUTE;\r\n        };\r\n        this.reduceActions[59] = function (rhs) {\r\n            if (rhs[0] == \"comment\") {\r\n                return NodeTest.commentTest;\r\n            } else if (rhs[0] == \"text\") {\r\n                return NodeTest.textTest;\r\n            } else if (rhs[0] == \"processing-instruction\") {\r\n                return NodeTest.anyPiTest;\r\n            } else if (rhs[0] == \"node\") {\r\n                return NodeTest.nodeTest;\r\n            }\r\n            return new NodeTest(-1, undefined);\r\n        };\r\n        this.reduceActions[60] = function (rhs) {\r\n            return new NodeTest.PITest(rhs[2]);\r\n        };\r\n        this.reduceActions[61] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[63] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[64] = function (rhs) {\r\n            rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[65] = function (rhs) {\r\n            return new Step(Step.SELF, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[66] = function (rhs) {\r\n            return new Step(Step.PARENT, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[67] = function (rhs) {\r\n            return new VariableReference(rhs[1]);\r\n        };\r\n        this.reduceActions[68] = function (rhs) {\r\n            return NodeTest.nameTestAny;\r\n        };\r\n        this.reduceActions[69] = function (rhs) {\r\n            return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\r\n        };\r\n        this.reduceActions[70] = function (rhs) {\r\n            return new NodeTest.NameTestQName(rhs[0]);\r\n        };\r\n    };\r\n\r\n    XPathParser.actionTable = [\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                 s                  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                            s       \",\r\n        \"                            s       \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"  s                                 \",\r\n        \"                            s       \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"a                                   \",\r\n        \"r       s                    rr  r  \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrs  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr sr  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                sssss               \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"              s                     \",\r\n        \"                             s      \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s sss s  ss\",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss      ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             rr     \",\r\n        \"                             s      \",\r\n        \"                             rs     \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"                                 r  \",\r\n        \"                                 s  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             r      \"\r\n    ];\r\n\r\n    XPathParser.actionTableNumber = [\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                 J                  \",\r\n        \"a  aaaaaaaaa         aaaaaaa aa  a  \",\r\n        \"                YYYYY               \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                            N       \",\r\n        \"                            O       \",\r\n        \"e  eeeeeeeee         eeeeeee ee ee  \",\r\n        \"f  fffffffff         fffffff ff ff  \",\r\n        \"d  ddddddddd         ddddddd dd dd  \",\r\n        \"B  BBBBBBBBB         BBBBBBB BB BB  \",\r\n        \"A  AAAAAAAAA         AAAAAAA AA AA  \",\r\n        \"  P                                 \",\r\n        \"                            Q       \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"b  bbbbbbbbb         bbbbbbb bb  b  \",\r\n        \"                                    \",\r\n        \"!       S                    !!  !  \",\r\n        \"\\\"      T\\\"                    \\\"\\\"  \\\"  \",\r\n        \"$   V  $$            U       $$  $  \",\r\n        \"&   &ZY&&            &XW     &&  &  \",\r\n        \")   )))))            )))\\\\[   ))  )  \",\r\n        \".   ....._^]         .....   ..  .  \",\r\n        \"1   11111111         11111   11  1  \",\r\n        \"5   55555555         55555`  55  5  \",\r\n        \"7   77777777         777777  77  7  \",\r\n        \"9   99999999         999999  99  9  \",\r\n        \":  c::::::::         ::::::b :: a:  \",\r\n        \"I  fIIIIIIII         IIIIIIe II  I  \",\r\n        \"=  =========         ======= == ==  \",\r\n        \"?  ?????????         ??????? ?? ??  \",\r\n        \"C  CCCCCCCCC         CCCCCCC CC CC  \",\r\n        \"J   JJJJJJJJ         JJJJJJ  JJ  J  \",\r\n        \"M   MMMMMMMM         MMMMMM  MM  M  \",\r\n        \"N  NNNNNNNNN         NNNNNNN NN  N  \",\r\n        \"P  PPPPPPPPP         PPPPPPP PP  P  \",\r\n        \"                +*)('               \",\r\n        \"R  RRRRRRRRR         RRRRRRR RR aR  \",\r\n        \"U  UUUUUUUUU         UUUUUUU UU  U  \",\r\n        \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \",\r\n        \"c  ccccccccc         ccccccc cc cc  \",\r\n        \"                             j      \",\r\n        \"L  fLLLLLLLL         LLLLLLe LL  L  \",\r\n        \"6   66666666         66666   66  6  \",\r\n        \"              k                     \",\r\n        \"                             l      \",\r\n        \"                XXXXX               \",\r\n        \" 1 0        /.-,+*)('    & %$m #  \\\"!\",\r\n        \"_  f________         ______e __  _  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('      %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \">  >>>>>>>>>         >>>>>>> >> >>  \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"Q  QQQQQQQQQ         QQQQQQQ QQ aQ  \",\r\n        \"V  VVVVVVVVV         VVVVVVV VV aV  \",\r\n        \"T  TTTTTTTTT         TTTTTTT TT  T  \",\r\n        \"@  @@@@@@@@@         @@@@@@@ @@ @@  \",\r\n        \"                             \\x87      \",\r\n        \"[  [[[[[[[[[         [[[[[[[ [[ [[  \",\r\n        \"D  DDDDDDDDD         DDDDDDD DD DD  \",\r\n        \"                             HH     \",\r\n        \"                             \\x88      \",\r\n        \"                             F\\x89     \",\r\n        \"#      T#                    ##  #  \",\r\n        \"%   V  %%            U       %%  %  \",\r\n        \"'   'ZY''            'XW     ''  '  \",\r\n        \"(   (ZY((            (XW     ((  (  \",\r\n        \"+   +++++            +++\\\\[   ++  +  \",\r\n        \"*   *****            ***\\\\[   **  *  \",\r\n        \"-   -----            ---\\\\[   --  -  \",\r\n        \",   ,,,,,            ,,,\\\\[   ,,  ,  \",\r\n        \"0   00000_^]         00000   00  0  \",\r\n        \"/   /////_^]         /////   //  /  \",\r\n        \"2   22222222         22222   22  2  \",\r\n        \"3   33333333         33333   33  3  \",\r\n        \"4   44444444         44444   44  4  \",\r\n        \"8   88888888         888888  88  8  \",\r\n        \"                                 ^  \",\r\n        \"                                 \\x8a  \",\r\n        \";  f;;;;;;;;         ;;;;;;e ;;  ;  \",\r\n        \"<  f<<<<<<<<         <<<<<<e <<  <  \",\r\n        \"O  OOOOOOOOO         OOOOOOO OO  O  \",\r\n        \"`  `````````         ``````` ``  `  \",\r\n        \"S  SSSSSSSSS         SSSSSSS SS  S  \",\r\n        \"W  WWWWWWWWW         WWWWWWW WW  W  \",\r\n        \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \",\r\n        \"E  EEEEEEEEE         EEEEEEE EE EE  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \",\r\n        \"                             G      \"\r\n    ];\r\n\r\n    XPathParser.gotoTable = [\r\n        \"3456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"L456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"            M        EFGH IJ \",\r\n        \"       N;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"            S        EFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"              e              \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                        h  J \",\r\n        \"              i          j   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ ABpqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"  r6789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"   s789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    t89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    u89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     v9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     w9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     x9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     y9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      z:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      {:;<=>?@ AB  CDEFGH IJ \",\r\n        \"       |;<=>?@ AB  CDEFGH IJ \",\r\n        \"       };<=>?@ AB  CDEFGH IJ \",\r\n        \"       ~;<=>?@ AB  CDEFGH IJ \",\r\n        \"         \\x7f=>?@ AB  CDEFGH IJ \",\r\n        \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\",\r\n        \"            \\x82        EFGH IJ \",\r\n        \"            \\x83        EFGH IJ \",\r\n        \"                             \",\r\n        \"                     \\x84 GH IJ \",\r\n        \"                     \\x85 GH IJ \",\r\n        \"              i          \\x86   \",\r\n        \"              i          \\x87   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ AB\\x8cqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \"\r\n    ];\r\n\r\n    XPathParser.productions = [\r\n        [1, 1, 2],\r\n        [2, 1, 3],\r\n        [3, 1, 4],\r\n        [3, 3, 3, -9, 4],\r\n        [4, 1, 5],\r\n        [4, 3, 4, -8, 5],\r\n        [5, 1, 6],\r\n        [5, 3, 5, -22, 6],\r\n        [5, 3, 5, -5, 6],\r\n        [6, 1, 7],\r\n        [6, 3, 6, -23, 7],\r\n        [6, 3, 6, -24, 7],\r\n        [6, 3, 6, -6, 7],\r\n        [6, 3, 6, -7, 7],\r\n        [7, 1, 8],\r\n        [7, 3, 7, -25, 8],\r\n        [7, 3, 7, -26, 8],\r\n        [8, 1, 9],\r\n        [8, 3, 8, -12, 9],\r\n        [8, 3, 8, -11, 9],\r\n        [8, 3, 8, -10, 9],\r\n        [9, 1, 10],\r\n        [9, 2, -26, 9],\r\n        [10, 1, 11],\r\n        [10, 3, 10, -27, 11],\r\n        [11, 1, 12],\r\n        [11, 1, 13],\r\n        [11, 3, 13, -28, 14],\r\n        [11, 3, 13, -4, 14],\r\n        [13, 1, 15],\r\n        [13, 2, 13, 16],\r\n        [15, 1, 17],\r\n        [15, 3, -29, 2, -30],\r\n        [15, 1, -15],\r\n        [15, 1, -16],\r\n        [15, 1, 18],\r\n        [18, 3, -13, -29, -30],\r\n        [18, 4, -13, -29, 19, -30],\r\n        [19, 1, 20],\r\n        [19, 3, 20, -31, 19],\r\n        [20, 1, 2],\r\n        [12, 1, 14],\r\n        [12, 1, 21],\r\n        [21, 1, -28],\r\n        [21, 2, -28, 14],\r\n        [21, 1, 22],\r\n        [14, 1, 23],\r\n        [14, 3, 14, -28, 23],\r\n        [14, 1, 24],\r\n        [23, 2, 25, 26],\r\n        [23, 1, 26],\r\n        [23, 3, 25, 26, 27],\r\n        [23, 2, 26, 27],\r\n        [23, 1, 28],\r\n        [27, 1, 16],\r\n        [27, 2, 16, 27],\r\n        [25, 2, -14, -3],\r\n        [25, 1, -32],\r\n        [26, 1, 29],\r\n        [26, 3, -20, -29, -30],\r\n        [26, 4, -21, -29, -15, -30],\r\n        [16, 3, -33, 30, -34],\r\n        [30, 1, 2],\r\n        [22, 2, -4, 14],\r\n        [24, 3, 14, -4, 23],\r\n        [28, 1, -35],\r\n        [28, 1, -2],\r\n        [17, 2, -36, -18],\r\n        [29, 1, -17],\r\n        [29, 1, -19],\r\n        [29, 1, -18]\r\n    ];\r\n\r\n    XPathParser.DOUBLEDOT = 2;\r\n    XPathParser.DOUBLECOLON = 3;\r\n    XPathParser.DOUBLESLASH = 4;\r\n    XPathParser.NOTEQUAL = 5;\r\n    XPathParser.LESSTHANOREQUAL = 6;\r\n    XPathParser.GREATERTHANOREQUAL = 7;\r\n    XPathParser.AND = 8;\r\n    XPathParser.OR = 9;\r\n    XPathParser.MOD = 10;\r\n    XPathParser.DIV = 11;\r\n    XPathParser.MULTIPLYOPERATOR = 12;\r\n    XPathParser.FUNCTIONNAME = 13;\r\n    XPathParser.AXISNAME = 14;\r\n    XPathParser.LITERAL = 15;\r\n    XPathParser.NUMBER = 16;\r\n    XPathParser.ASTERISKNAMETEST = 17;\r\n    XPathParser.QNAME = 18;\r\n    XPathParser.NCNAMECOLONASTERISK = 19;\r\n    XPathParser.NODETYPE = 20;\r\n    XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\r\n    XPathParser.EQUALS = 22;\r\n    XPathParser.LESSTHAN = 23;\r\n    XPathParser.GREATERTHAN = 24;\r\n    XPathParser.PLUS = 25;\r\n    XPathParser.MINUS = 26;\r\n    XPathParser.BAR = 27;\r\n    XPathParser.SLASH = 28;\r\n    XPathParser.LEFTPARENTHESIS = 29;\r\n    XPathParser.RIGHTPARENTHESIS = 30;\r\n    XPathParser.COMMA = 31;\r\n    XPathParser.AT = 32;\r\n    XPathParser.LEFTBRACKET = 33;\r\n    XPathParser.RIGHTBRACKET = 34;\r\n    XPathParser.DOT = 35;\r\n    XPathParser.DOLLAR = 36;\r\n\r\n    XPathParser.prototype.tokenize = function (s1) {\r\n        var types = [];\r\n        var values = [];\r\n        var s = s1 + '\\0';\r\n\r\n        var pos = 0;\r\n        var c = s.charAt(pos++);\r\n        while (1) {\r\n            while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\r\n                c = s.charAt(pos++);\r\n            }\r\n            if (c == '\\0' || pos >= s.length) {\r\n                break;\r\n            }\r\n\r\n            if (c == '(') {\r\n                types.push(XPathParser.LEFTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ')') {\r\n                types.push(XPathParser.RIGHTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '[') {\r\n                types.push(XPathParser.LEFTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ']') {\r\n                types.push(XPathParser.RIGHTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '@') {\r\n                types.push(XPathParser.AT);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ',') {\r\n                types.push(XPathParser.COMMA);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '|') {\r\n                types.push(XPathParser.BAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '+') {\r\n                types.push(XPathParser.PLUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '-') {\r\n                types.push(XPathParser.MINUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '=') {\r\n                types.push(XPathParser.EQUALS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '$') {\r\n                types.push(XPathParser.DOLLAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '.') {\r\n                c = s.charAt(pos++);\r\n                if (c == '.') {\r\n                    types.push(XPathParser.DOUBLEDOT);\r\n                    values.push(\"..\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                if (c >= '0' && c <= '9') {\r\n                    var number = \".\" + c;\r\n                    c = s.charAt(pos++);\r\n                    while (c >= '0' && c <= '9') {\r\n                        number += c;\r\n                        c = s.charAt(pos++);\r\n                    }\r\n                    types.push(XPathParser.NUMBER);\r\n                    values.push(number);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.DOT);\r\n                values.push('.');\r\n                continue;\r\n            }\r\n\r\n            if (c == '\\'' || c == '\"') {\r\n                var delimiter = c;\r\n                var literal = \"\";\r\n                while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\r\n                    literal += c;\r\n                    pos += 1;\r\n                }\r\n                if (c !== delimiter) {\r\n                    throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\r\n                }\r\n                pos += 1;\r\n                types.push(XPathParser.LITERAL);\r\n                values.push(literal);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c >= '0' && c <= '9') {\r\n                var number = c;\r\n                c = s.charAt(pos++);\r\n                while (c >= '0' && c <= '9') {\r\n                    number += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (c == '.') {\r\n                    if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\r\n                        number += c;\r\n                        number += s.charAt(pos++);\r\n                        c = s.charAt(pos++);\r\n                        while (c >= '0' && c <= '9') {\r\n                            number += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                    }\r\n                }\r\n                types.push(XPathParser.NUMBER);\r\n                values.push(number);\r\n                continue;\r\n            }\r\n\r\n            if (c == '*') {\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        types.push(XPathParser.MULTIPLYOPERATOR);\r\n                        values.push(c);\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                }\r\n                types.push(XPathParser.ASTERISKNAMETEST);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == ':') {\r\n                if (s.charAt(pos) == ':') {\r\n                    types.push(XPathParser.DOUBLECOLON);\r\n                    values.push(\"::\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '/') {\r\n                c = s.charAt(pos++);\r\n                if (c == '/') {\r\n                    types.push(XPathParser.DOUBLESLASH);\r\n                    values.push(\"//\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.SLASH);\r\n                values.push('/');\r\n                continue;\r\n            }\r\n\r\n            if (c == '!') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.NOTEQUAL);\r\n                    values.push(\"!=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '<') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.LESSTHANOREQUAL);\r\n                    values.push(\"<=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.LESSTHAN);\r\n                values.push('<');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '>') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.GREATERTHANOREQUAL);\r\n                    values.push(\">=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.GREATERTHAN);\r\n                values.push('>');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\r\n                var name = c;\r\n                c = s.charAt(pos++);\r\n                while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                    name += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        if (name == \"and\") {\r\n                            types.push(XPathParser.AND);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"or\") {\r\n                            types.push(XPathParser.OR);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"mod\") {\r\n                            types.push(XPathParser.MOD);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"div\") {\r\n                            types.push(XPathParser.DIV);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                if (c == ':') {\r\n                    if (s.charAt(pos) == '*') {\r\n                        types.push(XPathParser.NCNAMECOLONASTERISK);\r\n                        values.push(name + \":*\");\r\n                        pos++;\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\r\n                        name += ':';\r\n                        c = s.charAt(pos++);\r\n                        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                            name += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                        if (c == '(') {\r\n                            types.push(XPathParser.FUNCTIONNAME);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        types.push(XPathParser.QNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == ':') {\r\n                        types.push(XPathParser.AXISNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                }\r\n                if (c == '(') {\r\n                    if (name == \"comment\" || name == \"text\" || name == \"node\") {\r\n                        types.push(XPathParser.NODETYPE);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (name == \"processing-instruction\") {\r\n                        if (s.charAt(pos) == ')') {\r\n                            types.push(XPathParser.NODETYPE);\r\n                        } else {\r\n                            types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\r\n                        }\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    types.push(XPathParser.FUNCTIONNAME);\r\n                    values.push(name);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.QNAME);\r\n                values.push(name);\r\n                continue;\r\n            }\r\n\r\n            throw new Error(\"Unexpected character \" + c);\r\n        }\r\n        types.push(1);\r\n        values.push(\"[EOF]\");\r\n        return [types, values];\r\n    };\r\n\r\n    XPathParser.SHIFT = 's';\r\n    XPathParser.REDUCE = 'r';\r\n    XPathParser.ACCEPT = 'a';\r\n\r\n    XPathParser.prototype.parse = function (s) {\r\n        var types;\r\n        var values;\r\n        var res = this.tokenize(s);\r\n        if (res == undefined) {\r\n            return undefined;\r\n        }\r\n        types = res[0];\r\n        values = res[1];\r\n        var tokenPos = 0;\r\n        var state = [];\r\n        var tokenType = [];\r\n        var tokenValue = [];\r\n        var s;\r\n        var a;\r\n        var t;\r\n\r\n        state.push(0);\r\n        tokenType.push(1);\r\n        tokenValue.push(\"_S\");\r\n\r\n        a = types[tokenPos];\r\n        t = values[tokenPos++];\r\n        while (1) {\r\n            s = state[state.length - 1];\r\n            switch (XPathParser.actionTable[s].charAt(a - 1)) {\r\n                case XPathParser.SHIFT:\r\n                    tokenType.push(-a);\r\n                    tokenValue.push(t);\r\n                    state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\r\n                    a = types[tokenPos];\r\n                    t = values[tokenPos++];\r\n                    break;\r\n                case XPathParser.REDUCE:\r\n                    var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\r\n                    var rhs = [];\r\n                    for (var i = 0; i < num; i++) {\r\n                        tokenType.pop();\r\n                        rhs.unshift(tokenValue.pop());\r\n                        state.pop();\r\n                    }\r\n                    var s_ = state[state.length - 1];\r\n                    tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\r\n                    if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\r\n                        tokenValue.push(rhs[0]);\r\n                    } else {\r\n                        tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\r\n                    }\r\n                    state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\r\n                    break;\r\n                case XPathParser.ACCEPT:\r\n                    return new XPath(tokenValue.pop());\r\n                default:\r\n                    throw new Error(\"XPath parse error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // XPath /////////////////////////////////////////////////////////////////////\r\n\r\n    XPath.prototype = new Object();\r\n    XPath.prototype.constructor = XPath;\r\n    XPath.superclass = Object.prototype;\r\n\r\n    function XPath(e) {\r\n        this.expression = e;\r\n    }\r\n\r\n    XPath.prototype.toString = function () {\r\n        return this.expression.toString();\r\n    };\r\n\r\n    function setIfUnset(obj, prop, value) {\r\n        if (!(prop in obj)) {\r\n            obj[prop] = value;\r\n        }\r\n    }\r\n\r\n    XPath.prototype.evaluate = function (c) {\r\n        c.contextNode = c.expressionContextNode;\r\n        c.contextSize = 1;\r\n        c.contextPosition = 1;\r\n\r\n        // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\r\n        //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\r\n        if (c.isHtml) {\r\n            setIfUnset(c, 'caseInsensitive', true);\r\n            setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\r\n        }\r\n\r\n        setIfUnset(c, 'caseInsensitive', false);\r\n\r\n        return this.expression.evaluate(c);\r\n    };\r\n\r\n    XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\r\n    XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n    // Expression ////////////////////////////////////////////////////////////////\r\n\r\n    Expression.prototype = new Object();\r\n    Expression.prototype.constructor = Expression;\r\n    Expression.superclass = Object.prototype;\r\n\r\n    function Expression() {\r\n    }\r\n\r\n    Expression.prototype.init = function () {\r\n    };\r\n\r\n    Expression.prototype.toString = function () {\r\n        return \"<Expression>\";\r\n    };\r\n\r\n    Expression.prototype.evaluate = function (c) {\r\n        throw new Error(\"Could not evaluate expression.\");\r\n    };\r\n\r\n    // UnaryOperation ////////////////////////////////////////////////////////////\r\n\r\n    UnaryOperation.prototype = new Expression();\r\n    UnaryOperation.prototype.constructor = UnaryOperation;\r\n    UnaryOperation.superclass = Expression.prototype;\r\n\r\n    function UnaryOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryOperation.prototype.init = function (rhs) {\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // UnaryMinusOperation ///////////////////////////////////////////////////////\r\n\r\n    UnaryMinusOperation.prototype = new UnaryOperation();\r\n    UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\r\n    UnaryMinusOperation.superclass = UnaryOperation.prototype;\r\n\r\n    function UnaryMinusOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryMinusOperation.prototype.init = function (rhs) {\r\n        UnaryMinusOperation.superclass.init.call(this, rhs);\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.evaluate = function (c) {\r\n        return this.rhs.evaluate(c).number().negate();\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.toString = function () {\r\n        return \"-\" + this.rhs.toString();\r\n    };\r\n\r\n    // BinaryOperation ///////////////////////////////////////////////////////////\r\n\r\n    BinaryOperation.prototype = new Expression();\r\n    BinaryOperation.prototype.constructor = BinaryOperation;\r\n    BinaryOperation.superclass = Expression.prototype;\r\n\r\n    function BinaryOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BinaryOperation.prototype.init = function (lhs, rhs) {\r\n        this.lhs = lhs;\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // OrOperation ///////////////////////////////////////////////////////////////\r\n\r\n    OrOperation.prototype = new BinaryOperation();\r\n    OrOperation.prototype.constructor = OrOperation;\r\n    OrOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function OrOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    OrOperation.prototype.init = function (lhs, rhs) {\r\n        OrOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    OrOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    OrOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // AndOperation //////////////////////////////////////////////////////////////\r\n\r\n    AndOperation.prototype = new BinaryOperation();\r\n    AndOperation.prototype.constructor = AndOperation;\r\n    AndOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function AndOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    AndOperation.prototype.init = function (lhs, rhs) {\r\n        AndOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    AndOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    AndOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (!b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // EqualsOperation ///////////////////////////////////////////////////////////\r\n\r\n    EqualsOperation.prototype = new BinaryOperation();\r\n    EqualsOperation.prototype.constructor = EqualsOperation;\r\n    EqualsOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function EqualsOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    EqualsOperation.prototype.init = function (lhs, rhs) {\r\n        EqualsOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    EqualsOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    EqualsOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // NotEqualOperation /////////////////////////////////////////////////////////\r\n\r\n    NotEqualOperation.prototype = new BinaryOperation();\r\n    NotEqualOperation.prototype.constructor = NotEqualOperation;\r\n    NotEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function NotEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    NotEqualOperation.prototype.init = function (lhs, rhs) {\r\n        NotEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    NotEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    NotEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // LessThanOperation /////////////////////////////////////////////////////////\r\n\r\n    LessThanOperation.prototype = new BinaryOperation();\r\n    LessThanOperation.prototype.constructor = LessThanOperation;\r\n    LessThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOperation //////////////////////////////////////////////////////\r\n\r\n    GreaterThanOperation.prototype = new BinaryOperation();\r\n    GreaterThanOperation.prototype.constructor = GreaterThanOperation;\r\n    GreaterThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // LessThanOrEqualOperation //////////////////////////////////////////////////\r\n\r\n    LessThanOrEqualOperation.prototype = new BinaryOperation();\r\n    LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\r\n    LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOrEqualOperation ///////////////////////////////////////////////\r\n\r\n    GreaterThanOrEqualOperation.prototype = new BinaryOperation();\r\n    GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\r\n    GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // PlusOperation /////////////////////////////////////////////////////////////\r\n\r\n    PlusOperation.prototype = new BinaryOperation();\r\n    PlusOperation.prototype.constructor = PlusOperation;\r\n    PlusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function PlusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    PlusOperation.prototype.init = function (lhs, rhs) {\r\n        PlusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    PlusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    PlusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MinusOperation ////////////////////////////////////////////////////////////\r\n\r\n    MinusOperation.prototype = new BinaryOperation();\r\n    MinusOperation.prototype.constructor = MinusOperation;\r\n    MinusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MinusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MinusOperation.prototype.init = function (lhs, rhs) {\r\n        MinusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MinusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MinusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MultiplyOperation /////////////////////////////////////////////////////////\r\n\r\n    MultiplyOperation.prototype = new BinaryOperation();\r\n    MultiplyOperation.prototype.constructor = MultiplyOperation;\r\n    MultiplyOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MultiplyOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MultiplyOperation.prototype.init = function (lhs, rhs) {\r\n        MultiplyOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MultiplyOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MultiplyOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // DivOperation //////////////////////////////////////////////////////////////\r\n\r\n    DivOperation.prototype = new BinaryOperation();\r\n    DivOperation.prototype.constructor = DivOperation;\r\n    DivOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function DivOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    DivOperation.prototype.init = function (lhs, rhs) {\r\n        DivOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    DivOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    DivOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // ModOperation //////////////////////////////////////////////////////////////\r\n\r\n    ModOperation.prototype = new BinaryOperation();\r\n    ModOperation.prototype.constructor = ModOperation;\r\n    ModOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function ModOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    ModOperation.prototype.init = function (lhs, rhs) {\r\n        ModOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    ModOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    ModOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // BarOperation //////////////////////////////////////////////////////////////\r\n\r\n    BarOperation.prototype = new BinaryOperation();\r\n    BarOperation.prototype.constructor = BarOperation;\r\n    BarOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function BarOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BarOperation.prototype.init = function (lhs, rhs) {\r\n        BarOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    BarOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\r\n    };\r\n\r\n    BarOperation.prototype.toString = function () {\r\n        return map(toString, [this.lhs, this.rhs]).join(' | ');\r\n    };\r\n\r\n    // PathExpr //////////////////////////////////////////////////////////////////\r\n\r\n    PathExpr.prototype = new Expression();\r\n    PathExpr.prototype.constructor = PathExpr;\r\n    PathExpr.superclass = Expression.prototype;\r\n\r\n    function PathExpr(filter, filterPreds, locpath) {\r\n        if (arguments.length > 0) {\r\n            this.init(filter, filterPreds, locpath);\r\n        }\r\n    }\r\n\r\n    PathExpr.prototype.init = function (filter, filterPreds, locpath) {\r\n        PathExpr.superclass.init.call(this);\r\n        this.filter = filter;\r\n        this.filterPredicates = filterPreds;\r\n        this.locationPath = locpath;\r\n    };\r\n\r\n    /**\r\n     * Returns the topmost node of the tree containing node\r\n     */\r\n    function findRoot(node) {\r\n        while (node && node.parentNode) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    PathExpr.applyPredicates = function (predicates, c, nodes) {\r\n        if (predicates.length === 0) {\r\n            return nodes;\r\n        }\r\n\r\n        var ctx = c.extend({});\r\n\r\n        return reduce(\r\n            function (inNodes, pred) {\r\n                ctx.contextSize = inNodes.length;\r\n\r\n                return filter(\r\n                    function (node, i) {\r\n                        ctx.contextNode = node;\r\n                        ctx.contextPosition = i + 1;\r\n\r\n                        return PathExpr.predicateMatches(pred, ctx);\r\n                    },\r\n                    inNodes\r\n                );\r\n            },\r\n            nodes,\r\n            predicates\r\n        );\r\n    };\r\n\r\n    PathExpr.getRoot = function (xpc, nodes) {\r\n        var firstNode = nodes[0];\r\n\r\n        if (firstNode.nodeType === NodeTypes.DOCUMENT_NODE) {\r\n            return firstNode;\r\n        }\r\n\r\n        if (xpc.virtualRoot) {\r\n            return xpc.virtualRoot;\r\n        }\r\n\r\n        var ownerDoc = firstNode.ownerDocument;\r\n\r\n        if (ownerDoc) {\r\n            return ownerDoc;\r\n        }\r\n\r\n        // IE 5.5 doesn't have ownerDocument?\r\n        var n = firstNode;\r\n        while (n.parentNode != null) {\r\n            n = n.parentNode;\r\n        }\r\n        return n;\r\n    }\r\n\r\n    PathExpr.applyStep = function (step, xpc, node) {\r\n        var self = this;\r\n        var newNodes = [];\r\n        xpc.contextNode = node;\r\n\r\n        switch (step.axis) {\r\n            case Step.ANCESTOR:\r\n                // look at all the ancestor nodes\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var m;\r\n                if (xpc.contextNode.nodeType == NodeTypes.ATTRIBUTE_NODE) {\r\n                    m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                } else {\r\n                    m = xpc.contextNode.parentNode;\r\n                }\r\n                while (m != null) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                    m = m.parentNode;\r\n                }\r\n                break;\r\n\r\n            case Step.ANCESTORORSELF:\r\n                // look at all the ancestor nodes and the current node\r\n                for (var m = xpc.contextNode; m != null; m = m.nodeType == NodeTypes.ATTRIBUTE_NODE ? PathExpr.getOwnerElement(m) : m.parentNode) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.ATTRIBUTE:\r\n                // look at the attributes\r\n                var nnm = xpc.contextNode.attributes;\r\n                if (nnm != null) {\r\n                    for (var k = 0; k < nnm.length; k++) {\r\n                        var m = nnm.item(k);\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.CHILD:\r\n                // look at all child elements\r\n                for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANT:\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANTORSELF:\r\n                // look at self\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.FOLLOWING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var st = [];\r\n                if (xpc.contextNode.firstChild != null) {\r\n                    st.unshift(xpc.contextNode.firstChild);\r\n                } else {\r\n                    st.unshift(xpc.contextNode.nextSibling);\r\n                }\r\n                for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != NodeTypes.DOCUMENT_NODE && m !== xpc.virtualRoot; m = m.parentNode) {\r\n                    st.unshift(m.nextSibling);\r\n                }\r\n                do {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                } while (st.length > 0);\r\n                break;\r\n\r\n            case Step.FOLLOWINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.NAMESPACE:\r\n                var n = {};\r\n                if (xpc.contextNode.nodeType == NodeTypes.ELEMENT_NODE) {\r\n                    n[\"xml\"] = XPath.XML_NAMESPACE_URI;\r\n                    n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\r\n                    for (var m = xpc.contextNode; m != null && m.nodeType == NodeTypes.ELEMENT_NODE; m = m.parentNode) {\r\n                        for (var k = 0; k < m.attributes.length; k++) {\r\n                            var attr = m.attributes.item(k);\r\n                            var nm = String(attr.name);\r\n                            if (nm == \"xmlns\") {\r\n                                if (n[\"\"] == undefined) {\r\n                                    n[\"\"] = attr.value;\r\n                                }\r\n                            } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\r\n                                var pre = nm.substring(6, nm.length);\r\n                                if (n[pre] == undefined) {\r\n                                    n[pre] = attr.value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var pre in n) {\r\n                        var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\r\n                        if (step.nodeTest.matches(nsn, xpc)) {\r\n                            newNodes.push(nsn);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PARENT:\r\n                m = null;\r\n                if (xpc.contextNode !== xpc.virtualRoot) {\r\n                    if (xpc.contextNode.nodeType == NodeTypes.ATTRIBUTE_NODE) {\r\n                        m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                    } else {\r\n                        m = xpc.contextNode.parentNode;\r\n                    }\r\n                }\r\n                if (m != null && step.nodeTest.matches(m, xpc)) {\r\n                    newNodes.push(m);\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDING:\r\n                var st;\r\n                if (xpc.virtualRoot != null) {\r\n                    st = [xpc.virtualRoot];\r\n                } else {\r\n                    // cannot rely on .ownerDocument because the node may be in a document fragment\r\n                    st = [findRoot(xpc.contextNode)];\r\n                }\r\n                outer: while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (m == xpc.contextNode) {\r\n                            break outer;\r\n                        }\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.unshift(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.SELF:\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                break;\r\n\r\n            default:\r\n        }\r\n\r\n        return newNodes;\r\n    };\r\n\r\n    function applyStepWithPredicates(step, xpc, node) {\r\n        return PathExpr.applyPredicates(\r\n            step.predicates,\r\n            xpc,\r\n            PathExpr.applyStep(step, xpc, node)\r\n        );\r\n    }\r\n\r\n    function applyStepToNodes(context, nodes, step) {\r\n        return flatten(\r\n            map(\r\n                applyStepWithPredicates.bind(null, step, context),\r\n                nodes\r\n            )\r\n        );\r\n    }\r\n\r\n    PathExpr.applySteps = function (steps, xpc, nodes) {\r\n        return reduce(\r\n            applyStepToNodes.bind(null, xpc),\r\n            nodes,\r\n            steps\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.applyFilter = function (c, xpc) {\r\n        if (!this.filter) {\r\n            return { nodes: [c.contextNode] };\r\n        }\r\n\r\n        var ns = this.filter.evaluate(c);\r\n\r\n        if (!Utilities.instance_of(ns, XNodeSet)) {\r\n            if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\r\n                throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\r\n            }\r\n\r\n            return { nonNodes: ns };\r\n        }\r\n\r\n        return {\r\n            nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\r\n        };\r\n    };\r\n\r\n    PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\r\n        if (!locationPath) {\r\n            return nodes;\r\n        }\r\n\r\n        var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\r\n\r\n        return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\r\n    };\r\n\r\n    PathExpr.prototype.evaluate = function (c) {\r\n        var xpc = assign(new XPathContext(), c);\r\n\r\n        var filterResult = this.applyFilter(c, xpc);\r\n\r\n        if ('nonNodes' in filterResult) {\r\n            return filterResult.nonNodes;\r\n        }\r\n\r\n        var ns = new XNodeSet();\r\n        ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\r\n        return ns;\r\n    };\r\n\r\n    PathExpr.predicateMatches = function (pred, c) {\r\n        var res = pred.evaluate(c);\r\n\r\n        return Utilities.instance_of(res, XNumber)\r\n            ? c.contextPosition === res.numberValue()\r\n            : res.booleanValue();\r\n    };\r\n\r\n    PathExpr.predicateString = function (predicate) {\r\n        return wrap('[', ']', predicate.toString());\r\n    }\r\n\r\n    PathExpr.predicatesString = function (predicates) {\r\n        return join(\r\n            '',\r\n            map(PathExpr.predicateString, predicates)\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.toString = function () {\r\n        if (this.filter != undefined) {\r\n            var filterStr = toString(this.filter);\r\n\r\n            if (Utilities.instance_of(this.filter, XString)) {\r\n                return wrap(\"'\", \"'\", filterStr);\r\n            }\r\n            if (this.filterPredicates != undefined && this.filterPredicates.length) {\r\n                return wrap('(', ')', filterStr) +\r\n                    PathExpr.predicatesString(this.filterPredicates);\r\n            }\r\n            if (this.locationPath != undefined) {\r\n                return filterStr +\r\n                    (this.locationPath.absolute ? '' : '/') +\r\n                    toString(this.locationPath);\r\n            }\r\n\r\n            return filterStr;\r\n        }\r\n\r\n        return toString(this.locationPath);\r\n    };\r\n\r\n    PathExpr.getOwnerElement = function (n) {\r\n        // DOM 2 has ownerElement\r\n        if (n.ownerElement) {\r\n            return n.ownerElement;\r\n        }\r\n        // DOM 1 Internet Explorer can use selectSingleNode (ironically)\r\n        try {\r\n            if (n.selectSingleNode) {\r\n                return n.selectSingleNode(\"..\");\r\n            }\r\n        } catch (e) {\r\n        }\r\n        // Other DOM 1 implementations must use this egregious search\r\n        var doc = n.nodeType == NodeTypes.DOCUMENT_NODE\r\n            ? n\r\n            : n.ownerDocument;\r\n        var elts = doc.getElementsByTagName(\"*\");\r\n        for (var i = 0; i < elts.length; i++) {\r\n            var elt = elts.item(i);\r\n            var nnm = elt.attributes;\r\n            for (var j = 0; j < nnm.length; j++) {\r\n                var an = nnm.item(j);\r\n                if (an === n) {\r\n                    return elt;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // LocationPath //////////////////////////////////////////////////////////////\r\n\r\n    LocationPath.prototype = new Object();\r\n    LocationPath.prototype.constructor = LocationPath;\r\n    LocationPath.superclass = Object.prototype;\r\n\r\n    function LocationPath(abs, steps) {\r\n        if (arguments.length > 0) {\r\n            this.init(abs, steps);\r\n        }\r\n    }\r\n\r\n    LocationPath.prototype.init = function (abs, steps) {\r\n        this.absolute = abs;\r\n        this.steps = steps;\r\n    };\r\n\r\n    LocationPath.prototype.toString = function () {\r\n        return (\r\n            (this.absolute ? '/' : '') +\r\n            map(toString, this.steps).join('/')\r\n        );\r\n    };\r\n\r\n    // Step //////////////////////////////////////////////////////////////////////\r\n\r\n    Step.prototype = new Object();\r\n    Step.prototype.constructor = Step;\r\n    Step.superclass = Object.prototype;\r\n\r\n    function Step(axis, nodetest, preds) {\r\n        if (arguments.length > 0) {\r\n            this.init(axis, nodetest, preds);\r\n        }\r\n    }\r\n\r\n    Step.prototype.init = function (axis, nodetest, preds) {\r\n        this.axis = axis;\r\n        this.nodeTest = nodetest;\r\n        this.predicates = preds;\r\n    };\r\n\r\n    Step.prototype.toString = function () {\r\n        return Step.STEPNAMES[this.axis] +\r\n            \"::\" +\r\n            this.nodeTest.toString() +\r\n            PathExpr.predicatesString(this.predicates);\r\n    };\r\n\r\n\r\n    Step.ANCESTOR = 0;\r\n    Step.ANCESTORORSELF = 1;\r\n    Step.ATTRIBUTE = 2;\r\n    Step.CHILD = 3;\r\n    Step.DESCENDANT = 4;\r\n    Step.DESCENDANTORSELF = 5;\r\n    Step.FOLLOWING = 6;\r\n    Step.FOLLOWINGSIBLING = 7;\r\n    Step.NAMESPACE = 8;\r\n    Step.PARENT = 9;\r\n    Step.PRECEDING = 10;\r\n    Step.PRECEDINGSIBLING = 11;\r\n    Step.SELF = 12;\r\n\r\n    Step.STEPNAMES = reduce(function (acc, x) { return acc[x[0]] = x[1], acc; }, {}, [\r\n        [Step.ANCESTOR, 'ancestor'],\r\n        [Step.ANCESTORORSELF, 'ancestor-or-self'],\r\n        [Step.ATTRIBUTE, 'attribute'],\r\n        [Step.CHILD, 'child'],\r\n        [Step.DESCENDANT, 'descendant'],\r\n        [Step.DESCENDANTORSELF, 'descendant-or-self'],\r\n        [Step.FOLLOWING, 'following'],\r\n        [Step.FOLLOWINGSIBLING, 'following-sibling'],\r\n        [Step.NAMESPACE, 'namespace'],\r\n        [Step.PARENT, 'parent'],\r\n        [Step.PRECEDING, 'preceding'],\r\n        [Step.PRECEDINGSIBLING, 'preceding-sibling'],\r\n        [Step.SELF, 'self']\r\n    ]);\r\n\r\n    // NodeTest //////////////////////////////////////////////////////////////////\r\n\r\n    NodeTest.prototype = new Object();\r\n    NodeTest.prototype.constructor = NodeTest;\r\n    NodeTest.superclass = Object.prototype;\r\n\r\n    function NodeTest(type, value) {\r\n        if (arguments.length > 0) {\r\n            this.init(type, value);\r\n        }\r\n    }\r\n\r\n    NodeTest.prototype.init = function (type, value) {\r\n        this.type = type;\r\n        this.value = value;\r\n    };\r\n\r\n    NodeTest.prototype.toString = function () {\r\n        return \"<unknown nodetest type>\";\r\n    };\r\n\r\n    NodeTest.prototype.matches = function (n, xpc) {\r\n        console.warn('unknown node test type');\r\n    };\r\n\r\n    NodeTest.NAMETESTANY = 0;\r\n    NodeTest.NAMETESTPREFIXANY = 1;\r\n    NodeTest.NAMETESTQNAME = 2;\r\n    NodeTest.COMMENT = 3;\r\n    NodeTest.TEXT = 4;\r\n    NodeTest.PI = 5;\r\n    NodeTest.NODE = 6;\r\n\r\n    NodeTest.isNodeType = function (types) {\r\n        return function (node) {\r\n            return includes(types, node.nodeType);\r\n        };\r\n    };\r\n\r\n    NodeTest.makeNodeTestType = function (type, members, ctor) {\r\n        var newType = ctor || function () { };\r\n\r\n        newType.prototype = new NodeTest(type);\r\n        newType.prototype.constructor = newType;\r\n\r\n        assign(newType.prototype, members);\r\n\r\n        return newType;\r\n    };\r\n    // create invariant node test for certain node types\r\n    NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\r\n        return new (NodeTest.makeNodeTestType(type, {\r\n            matches: NodeTest.isNodeType(nodeTypes),\r\n            toString: always(stringVal)\r\n        }))();\r\n    };\r\n\r\n    NodeTest.hasPrefix = function (node) {\r\n        return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\r\n    };\r\n\r\n    NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\r\n    NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\r\n        var nNamespace = (n.namespaceURI || '');\r\n\r\n        if (!prefix) {\r\n            return !nNamespace || (xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n));\r\n        }\r\n\r\n        var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\r\n\r\n        if (ns == null) {\r\n            throw new Error(\"Cannot resolve QName \" + prefix);\r\n        }\r\n\r\n        return ns === nNamespace;\r\n    };\r\n    NodeTest.localNameMatches = function (localName, xpc, n) {\r\n        var nLocalName = (n.localName || n.nodeName);\r\n\r\n        return xpc.caseInsensitive\r\n            ? localName.toLowerCase() === nLocalName.toLowerCase()\r\n            : localName === nLocalName;\r\n    };\r\n\r\n    NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTPREFIXANY,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isElementOrAttribute(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.prefix + \":*\";\r\n            }\r\n        },\r\n        function NameTestPrefixAny(prefix) { this.prefix = prefix; }\r\n    );\r\n\r\n    NodeTest.NameTestQName = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTQNAME,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isNodeType(\r\n                    [\r\n                        NodeTypes.ELEMENT_NODE,\r\n                        NodeTypes.ATTRIBUTE_NODE,\r\n                        XPathNamespace.XPATH_NAMESPACE_NODE,\r\n                    ]\r\n                )(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n) &&\r\n                    NodeTest.localNameMatches(this.localName, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.name;\r\n            }\r\n        },\r\n        function NameTestQName(name) {\r\n            var nameParts = name.split(':');\r\n\r\n            this.name = name;\r\n            this.prefix = nameParts.length > 1 ? nameParts[0] : null;\r\n            this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\r\n        }\r\n    );\r\n\r\n    NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\r\n        matches: function (n, xpc) {\r\n            return NodeTest.isNodeType(\r\n                [NodeTypes.PROCESSING_INSTRUCTION_NODE]\r\n            )(n) &&\r\n                (n.target || n.nodeName) === this.name;\r\n        },\r\n        toString: function () {\r\n            return wrap('processing-instruction(\"', '\")', this.name);\r\n        }\r\n    }, function (name) { this.name = name; })\r\n\r\n    // singletons\r\n\r\n    // elements, attributes, namespaces\r\n    NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(\r\n        NodeTest.NAMETESTANY,\r\n        [\r\n            NodeTypes.ELEMENT_NODE,\r\n            NodeTypes.ATTRIBUTE_NODE,\r\n            XPathNamespace.XPATH_NAMESPACE_NODE,\r\n        ],\r\n        '*'\r\n    );\r\n    // text, cdata\r\n    NodeTest.textTest = NodeTest.makeNodeTypeTest(\r\n        NodeTest.TEXT,\r\n        [\r\n            NodeTypes.TEXT_NODE,\r\n            NodeTypes.CDATA_SECTION_NODE,\r\n        ],\r\n        'text()'\r\n    );\r\n    NodeTest.commentTest = NodeTest.makeNodeTypeTest(\r\n        NodeTest.COMMENT,\r\n        [NodeTypes.COMMENT_NODE],\r\n        'comment()'\r\n    );\r\n    // elements, attributes, text, cdata, PIs, comments, document nodes\r\n    NodeTest.nodeTest = NodeTest.makeNodeTypeTest(\r\n        NodeTest.NODE,\r\n        [\r\n            NodeTypes.ELEMENT_NODE,\r\n            NodeTypes.ATTRIBUTE_NODE, \r\n            NodeTypes.TEXT_NODE, \r\n            NodeTypes.CDATA_SECTION_NODE,\r\n            NodeTypes.PROCESSING_INSTRUCTION_NODE,\r\n            NodeTypes.COMMENT_NODE,\r\n            NodeTypes.DOCUMENT_NODE,\r\n        ],\r\n        'node()'\r\n    );\r\n    NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(\r\n        NodeTest.PI,\r\n        [NodeTypes.PROCESSING_INSTRUCTION_NODE],\r\n        'processing-instruction()'\r\n    );\r\n\r\n    // VariableReference /////////////////////////////////////////////////////////\r\n\r\n    VariableReference.prototype = new Expression();\r\n    VariableReference.prototype.constructor = VariableReference;\r\n    VariableReference.superclass = Expression.prototype;\r\n\r\n    function VariableReference(v) {\r\n        if (arguments.length > 0) {\r\n            this.init(v);\r\n        }\r\n    }\r\n\r\n    VariableReference.prototype.init = function (v) {\r\n        this.variable = v;\r\n    };\r\n\r\n    VariableReference.prototype.toString = function () {\r\n        return \"$\" + this.variable;\r\n    };\r\n\r\n    VariableReference.prototype.evaluate = function (c) {\r\n        var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\r\n\r\n        if (parts[0] == null) {\r\n            throw new Error(\"Cannot resolve QName \" + fn);\r\n        }\r\n        var result = c.variableResolver.getVariable(parts[1], parts[0]);\r\n        if (!result) {\r\n            throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // FunctionCall //////////////////////////////////////////////////////////////\r\n\r\n    FunctionCall.prototype = new Expression();\r\n    FunctionCall.prototype.constructor = FunctionCall;\r\n    FunctionCall.superclass = Expression.prototype;\r\n\r\n    function FunctionCall(fn, args) {\r\n        if (arguments.length > 0) {\r\n            this.init(fn, args);\r\n        }\r\n    }\r\n\r\n    FunctionCall.prototype.init = function (fn, args) {\r\n        this.functionName = fn;\r\n        this.arguments = args;\r\n    };\r\n\r\n    FunctionCall.prototype.toString = function () {\r\n        var s = this.functionName + \"(\";\r\n        for (var i = 0; i < this.arguments.length; i++) {\r\n            if (i > 0) {\r\n                s += \", \";\r\n            }\r\n            s += this.arguments[i].toString();\r\n        }\r\n        return s + \")\";\r\n    };\r\n\r\n    FunctionCall.prototype.evaluate = function (c) {\r\n        var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\r\n\r\n        if (!f) {\r\n            throw new Error(\"Unknown function \" + this.functionName);\r\n        }\r\n\r\n        var a = [c].concat(this.arguments);\r\n        return f.apply(c.functionResolver.thisArg, a);\r\n    };\r\n\r\n    // Operators /////////////////////////////////////////////////////////////////\r\n\r\n    var Operators = new Object();\r\n\r\n    Operators.equals = function (l, r) {\r\n        return l.equals(r);\r\n    };\r\n\r\n    Operators.notequal = function (l, r) {\r\n        return l.notequal(r);\r\n    };\r\n\r\n    Operators.lessthan = function (l, r) {\r\n        return l.lessthan(r);\r\n    };\r\n\r\n    Operators.greaterthan = function (l, r) {\r\n        return l.greaterthan(r);\r\n    };\r\n\r\n    Operators.lessthanorequal = function (l, r) {\r\n        return l.lessthanorequal(r);\r\n    };\r\n\r\n    Operators.greaterthanorequal = function (l, r) {\r\n        return l.greaterthanorequal(r);\r\n    };\r\n\r\n    // XString ///////////////////////////////////////////////////////////////////\r\n\r\n    XString.prototype = new Expression();\r\n    XString.prototype.constructor = XString;\r\n    XString.superclass = Expression.prototype;\r\n\r\n    function XString(s) {\r\n        if (arguments.length > 0) {\r\n            this.init(s);\r\n        }\r\n    }\r\n\r\n    XString.prototype.init = function (s) {\r\n        this.str = String(s);\r\n    };\r\n\r\n    XString.prototype.toString = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.string = function () {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.number = function () {\r\n        return new XNumber(this.str);\r\n    };\r\n\r\n    XString.prototype.bool = function () {\r\n        return new XBoolean(this.str);\r\n    };\r\n\r\n    XString.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert string to nodeset\");\r\n    };\r\n\r\n    XString.prototype.stringValue = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XString.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XString.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.str == r.str);\r\n    };\r\n\r\n    XString.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.str != r.str);\r\n    };\r\n\r\n    XString.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XString.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XString.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XString.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    // XNumber ///////////////////////////////////////////////////////////////////\r\n\r\n    XNumber.prototype = new Expression();\r\n    XNumber.prototype.constructor = XNumber;\r\n    XNumber.superclass = Expression.prototype;\r\n\r\n    function XNumber(n) {\r\n        if (arguments.length > 0) {\r\n            this.init(n);\r\n        }\r\n    }\r\n\r\n    XNumber.prototype.init = function (n) {\r\n        this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\r\n    };\r\n\r\n    XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\r\n\r\n    XNumber.prototype.parse = function (s) {\r\n        // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\r\n        return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\r\n    };\r\n\r\n    function padSmallNumber(numberStr) {\r\n        var parts = numberStr.split('e-');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n\r\n        for (var i = 0; i < exponent - 1; i += 1) {\r\n            base = '0' + base;\r\n        }\r\n\r\n        return '0.' + base;\r\n    }\r\n\r\n    function padLargeNumber(numberStr) {\r\n        var parts = numberStr.split('e');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n        var zerosToAppend = exponent + 1 - base.length;\r\n\r\n        for (var i = 0; i < zerosToAppend; i += 1) {\r\n            base += '0';\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    XNumber.prototype.toString = function () {\r\n        var strValue = this.num.toString();\r\n\r\n        if (strValue.indexOf('e-') !== -1) {\r\n            return padSmallNumber(strValue);\r\n        }\r\n\r\n        if (strValue.indexOf('e') !== -1) {\r\n            return padLargeNumber(strValue);\r\n        }\r\n\r\n        return strValue;\r\n    };\r\n\r\n    XNumber.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.string = function () {\r\n\r\n\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNumber.prototype.number = function () {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.bool = function () {\r\n        return new XBoolean(this.num);\r\n    };\r\n\r\n    XNumber.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert number to nodeset\");\r\n    };\r\n\r\n    XNumber.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XNumber.prototype.numberValue = function () {\r\n        return this.num;\r\n    };\r\n\r\n    XNumber.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XNumber.prototype.negate = function () {\r\n        return new XNumber(-this.num);\r\n    };\r\n\r\n    XNumber.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.equals(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.num == r.num);\r\n    };\r\n\r\n    XNumber.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.notequal(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.num != r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthan(r.number());\r\n        }\r\n        return new XBoolean(this.num < r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthan(r.number());\r\n        }\r\n        return new XBoolean(this.num > r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num <= r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num >= r.num);\r\n    };\r\n\r\n    XNumber.prototype.plus = function (r) {\r\n        return new XNumber(this.num + r.num);\r\n    };\r\n\r\n    XNumber.prototype.minus = function (r) {\r\n        return new XNumber(this.num - r.num);\r\n    };\r\n\r\n    XNumber.prototype.multiply = function (r) {\r\n        return new XNumber(this.num * r.num);\r\n    };\r\n\r\n    XNumber.prototype.div = function (r) {\r\n        return new XNumber(this.num / r.num);\r\n    };\r\n\r\n    XNumber.prototype.mod = function (r) {\r\n        return new XNumber(this.num % r.num);\r\n    };\r\n\r\n    // XBoolean //////////////////////////////////////////////////////////////////\r\n\r\n    XBoolean.prototype = new Expression();\r\n    XBoolean.prototype.constructor = XBoolean;\r\n    XBoolean.superclass = Expression.prototype;\r\n\r\n    function XBoolean(b) {\r\n        if (arguments.length > 0) {\r\n            this.init(b);\r\n        }\r\n    }\r\n\r\n    XBoolean.prototype.init = function (b) {\r\n        this.b = Boolean(b);\r\n    };\r\n\r\n    XBoolean.prototype.toString = function () {\r\n        return this.b.toString();\r\n    };\r\n\r\n    XBoolean.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.string = function () {\r\n        return new XString(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.number = function () {\r\n        return new XNumber(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.bool = function () {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert boolean to nodeset\");\r\n    };\r\n\r\n    XBoolean.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XBoolean.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XBoolean.prototype.booleanValue = function () {\r\n        return this.b;\r\n    };\r\n\r\n    XBoolean.prototype.not = function () {\r\n        return new XBoolean(!this.b);\r\n    };\r\n\r\n    XBoolean.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.equals(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.b == r.b);\r\n    };\r\n\r\n    XBoolean.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.notequal(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.b != r.b);\r\n    };\r\n\r\n    XBoolean.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    XBoolean.true_ = new XBoolean(true);\r\n    XBoolean.false_ = new XBoolean(false);\r\n\r\n    // AVLTree ///////////////////////////////////////////////////////////////////\r\n\r\n    AVLTree.prototype = new Object();\r\n    AVLTree.prototype.constructor = AVLTree;\r\n    AVLTree.superclass = Object.prototype;\r\n\r\n    function AVLTree(n) {\r\n        this.init(n);\r\n    }\r\n\r\n    AVLTree.prototype.init = function (n) {\r\n        this.left = null;\r\n        this.right = null;\r\n        this.node = n;\r\n        this.depth = 1;\r\n    };\r\n\r\n    AVLTree.prototype.balance = function () {\r\n        var ldepth = this.left == null ? 0 : this.left.depth;\r\n        var rdepth = this.right == null ? 0 : this.right.depth;\r\n\r\n        if (ldepth > rdepth + 1) {\r\n            // LR or LL rotation\r\n            var lldepth = this.left.left == null ? 0 : this.left.left.depth;\r\n            var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\r\n\r\n            if (lldepth < lrdepth) {\r\n                // LR rotation consists of a RR rotation of the left child\r\n                this.left.rotateRR();\r\n                // plus a LL rotation of this node, which happens anyway\r\n            }\r\n            this.rotateLL();\r\n        } else if (ldepth + 1 < rdepth) {\r\n            // RR or RL rorarion\r\n            var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\r\n            var rldepth = this.right.left == null ? 0 : this.right.left.depth;\r\n\r\n            if (rldepth > rrdepth) {\r\n                // RR rotation consists of a LL rotation of the right child\r\n                this.right.rotateLL();\r\n                // plus a RR rotation of this node, which happens anyway\r\n            }\r\n            this.rotateRR();\r\n        }\r\n    };\r\n\r\n    AVLTree.prototype.rotateLL = function () {\r\n        // the left side is too long => rotate from the left (_not_ leftwards)\r\n        var nodeBefore = this.node;\r\n        var rightBefore = this.right;\r\n        this.node = this.left.node;\r\n        this.right = this.left;\r\n        this.left = this.left.left;\r\n        this.right.left = this.right.right;\r\n        this.right.right = rightBefore;\r\n        this.right.node = nodeBefore;\r\n        this.right.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.rotateRR = function () {\r\n        // the right side is too long => rotate from the right (_not_ rightwards)\r\n        var nodeBefore = this.node;\r\n        var leftBefore = this.left;\r\n        this.node = this.right.node;\r\n        this.left = this.right;\r\n        this.right = this.right.right;\r\n        this.left.right = this.left.left;\r\n        this.left.left = leftBefore;\r\n        this.left.node = nodeBefore;\r\n        this.left.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.updateInNewLocation = function () {\r\n        this.getDepthFromChildren();\r\n    };\r\n\r\n    AVLTree.prototype.getDepthFromChildren = function () {\r\n        this.depth = this.node == null ? 0 : 1;\r\n        if (this.left != null) {\r\n            this.depth = this.left.depth + 1;\r\n        }\r\n        if (this.right != null && this.depth <= this.right.depth) {\r\n            this.depth = this.right.depth + 1;\r\n        }\r\n    };\r\n\r\n    function nodeOrder(n1, n2) {\r\n        if (n1 === n2) {\r\n            return 0;\r\n        }\r\n\r\n        if (n1.compareDocumentPosition) {\r\n            var cpos = n1.compareDocumentPosition(n2);\r\n\r\n            if (cpos & 0x01) {\r\n                // not in the same document; return an arbitrary result (is there a better way to do this)\r\n                return 1;\r\n            }\r\n            if (cpos & 0x0A) {\r\n                // n2 precedes or contains n1\r\n                return 1;\r\n            }\r\n            if (cpos & 0x14) {\r\n                // n2 follows or is contained by n1\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        var d1 = 0,\r\n            d2 = 0;\r\n        for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\r\n            d1++;\r\n        }\r\n        for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\r\n            d2++;\r\n        }\r\n\r\n        // step up to same depth\r\n        if (d1 > d2) {\r\n            while (d1 > d2) {\r\n                n1 = n1.parentNode || n1.ownerElement;\r\n                d1--;\r\n            }\r\n            if (n1 === n2) {\r\n                return 1;\r\n            }\r\n        } else if (d2 > d1) {\r\n            while (d2 > d1) {\r\n                n2 = n2.parentNode || n2.ownerElement;\r\n                d2--;\r\n            }\r\n            if (n1 === n2) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        var n1Par = n1.parentNode || n1.ownerElement,\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n\r\n        // find common parent\r\n        while (n1Par !== n2Par) {\r\n            n1 = n1Par;\r\n            n2 = n2Par;\r\n            n1Par = n1.parentNode || n1.ownerElement;\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n        }\r\n\r\n        var n1isAttr = Utilities.isAttribute(n1);\r\n        var n2isAttr = Utilities.isAttribute(n2);\r\n\r\n        if (n1isAttr && !n2isAttr) {\r\n            return -1;\r\n        }\r\n        if (!n1isAttr && n2isAttr) {\r\n            return 1;\r\n        }\r\n\r\n        if (n1Par) {\r\n            var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\r\n                len = cn.length;\r\n            for (var i = 0; i < len; i += 1) {\r\n                var n = cn[i];\r\n                if (n === n1) {\r\n                    return -1;\r\n                }\r\n                if (n === n2) {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error('Unexpected: could not determine node order');\r\n    }\r\n\r\n    AVLTree.prototype.add = function (n) {\r\n        if (n === this.node) {\r\n            return false;\r\n        }\r\n\r\n        var o = nodeOrder(n, this.node);\r\n\r\n        var ret = false;\r\n        if (o == -1) {\r\n            if (this.left == null) {\r\n                this.left = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.left.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        } else if (o == 1) {\r\n            if (this.right == null) {\r\n                this.right = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.right.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ret) {\r\n            this.getDepthFromChildren();\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    // XNodeSet //////////////////////////////////////////////////////////////////\r\n\r\n    XNodeSet.prototype = new Expression();\r\n    XNodeSet.prototype.constructor = XNodeSet;\r\n    XNodeSet.superclass = Expression.prototype;\r\n\r\n    function XNodeSet() {\r\n        this.init();\r\n    }\r\n\r\n    XNodeSet.prototype.init = function () {\r\n        this.tree = null;\r\n        this.nodes = [];\r\n        this.size = 0;\r\n    };\r\n\r\n    XNodeSet.prototype.toString = function () {\r\n        var p = this.first();\r\n        if (p == null) {\r\n            return \"\";\r\n        }\r\n        return this.stringForNode(p);\r\n    };\r\n\r\n    XNodeSet.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.string = function () {\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNodeSet.prototype.stringValue = function () {\r\n        return this.toString();\r\n    };\r\n\r\n    XNodeSet.prototype.number = function () {\r\n        return new XNumber(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.numberValue = function () {\r\n        return Number(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.bool = function () {\r\n        return new XBoolean(this.booleanValue());\r\n    };\r\n\r\n    XNodeSet.prototype.booleanValue = function () {\r\n        return !!this.size;\r\n    };\r\n\r\n    XNodeSet.prototype.nodeset = function () {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForNode = function (n) {\r\n        if (n.nodeType == NodeTypes.DOCUMENT_NODE ||\r\n            n.nodeType == NodeTypes.ELEMENT_NODE ||\r\n            n.nodeType === NodeTypes.DOCUMENT_FRAGMENT_NODE) {\r\n            return this.stringForContainerNode(n);\r\n        }\r\n        if (n.nodeType === NodeTypes.ATTRIBUTE_NODE) {\r\n            return n.value || n.nodeValue;\r\n        }\r\n        if (n.isNamespaceNode) {\r\n            return n.namespace;\r\n        }\r\n        return n.nodeValue;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForContainerNode = function (n) {\r\n        var s = \"\";\r\n        for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\r\n            var nt = n2.nodeType;\r\n            //  Element,    Text,       CDATA,      Document,   Document Fragment\r\n            if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\r\n                s += this.stringForNode(n2);\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    XNodeSet.prototype.buildTree = function () {\r\n        if (!this.tree && this.nodes.length) {\r\n            this.tree = new AVLTree(this.nodes[0]);\r\n            for (var i = 1; i < this.nodes.length; i += 1) {\r\n                this.tree.add(this.nodes[i]);\r\n            }\r\n        }\r\n\r\n        return this.tree;\r\n    };\r\n\r\n    XNodeSet.prototype.first = function () {\r\n        var p = this.buildTree();\r\n        if (p == null) {\r\n            return null;\r\n        }\r\n        while (p.left != null) {\r\n            p = p.left;\r\n        }\r\n        return p.node;\r\n    };\r\n\r\n    XNodeSet.prototype.add = function (n) {\r\n        for (var i = 0; i < this.nodes.length; i += 1) {\r\n            if (n === this.nodes[i]) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.tree = null;\r\n        this.nodes.push(n);\r\n        this.size += 1;\r\n    };\r\n\r\n    XNodeSet.prototype.addArray = function (ns) {\r\n        var self = this;\r\n\r\n        forEach(function (x) { self.add(x); }, ns);\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in document order\r\n     */\r\n    XNodeSet.prototype.toArray = function () {\r\n        var a = [];\r\n        this.toArrayRec(this.buildTree(), a);\r\n        return a;\r\n    };\r\n\r\n    XNodeSet.prototype.toArrayRec = function (t, a) {\r\n        if (t != null) {\r\n            this.toArrayRec(t.left, a);\r\n            a.push(t.node);\r\n            this.toArrayRec(t.right, a);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in arbitrary order\r\n     */\r\n    XNodeSet.prototype.toUnsortedArray = function () {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithString = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XString(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNumber = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XNumber(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithBoolean = function (r, o) {\r\n        return o(this.bool(), r);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNodeSet = function (r, o) {\r\n        var arr = this.toUnsortedArray();\r\n        var oInvert = function (lop, rop) { return o(rop, lop); };\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var l = new XString(this.stringForNode(arr[i]));\r\n\r\n            var res = r.compareWithString(l, oInvert);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.compareWith = curry(function (o, r) {\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.compareWithString(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.compareWithNumber(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.compareWithBoolean(r, o);\r\n        }\r\n        return this.compareWithNodeSet(r, o);\r\n    });\r\n\r\n    XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\r\n    XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\r\n    XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\r\n    XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\r\n    XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\r\n    XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\r\n\r\n    XNodeSet.prototype.union = function (r) {\r\n        var ns = new XNodeSet();\r\n        ns.addArray(this.toUnsortedArray());\r\n        ns.addArray(r.toUnsortedArray());\r\n        return ns;\r\n    };\r\n\r\n    // XPathNamespace ////////////////////////////////////////////////////////////\r\n\r\n    XPathNamespace.prototype = new Object();\r\n    XPathNamespace.prototype.constructor = XPathNamespace;\r\n    XPathNamespace.superclass = Object.prototype;\r\n\r\n    function XPathNamespace(pre, ns, p) {\r\n        this.isXPathNamespace = true;\r\n        this.ownerDocument = p.ownerDocument;\r\n        this.nodeName = \"#namespace\";\r\n        this.prefix = pre;\r\n        this.localName = pre;\r\n        this.namespaceURI = ns;\r\n        this.nodeValue = ns;\r\n        this.ownerElement = p;\r\n        this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\r\n    }\r\n\r\n    XPathNamespace.prototype.toString = function () {\r\n        return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\r\n    };\r\n\r\n    // XPathContext //////////////////////////////////////////////////////////////\r\n\r\n    XPathContext.prototype = new Object();\r\n    XPathContext.prototype.constructor = XPathContext;\r\n    XPathContext.superclass = Object.prototype;\r\n\r\n    function XPathContext(vr, nr, fr) {\r\n        this.variableResolver = vr != null ? vr : new VariableResolver();\r\n        this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\r\n        this.functionResolver = fr != null ? fr : new FunctionResolver();\r\n    }\r\n\r\n    XPathContext.prototype.extend = function (newProps) {\r\n        return assign(new XPathContext(), this, newProps);\r\n    };\r\n\r\n    // VariableResolver //////////////////////////////////////////////////////////\r\n\r\n    VariableResolver.prototype = new Object();\r\n    VariableResolver.prototype.constructor = VariableResolver;\r\n    VariableResolver.superclass = Object.prototype;\r\n\r\n    function VariableResolver() {\r\n    }\r\n\r\n    VariableResolver.prototype.getVariable = function (ln, ns) {\r\n        return null;\r\n    };\r\n\r\n    // FunctionResolver //////////////////////////////////////////////////////////\r\n\r\n    FunctionResolver.prototype = new Object();\r\n    FunctionResolver.prototype.constructor = FunctionResolver;\r\n    FunctionResolver.superclass = Object.prototype;\r\n\r\n    function FunctionResolver(thisArg) {\r\n        this.thisArg = thisArg != null ? thisArg : Functions;\r\n        this.functions = new Object();\r\n        this.addStandardFunctions();\r\n    }\r\n\r\n    FunctionResolver.prototype.addStandardFunctions = function () {\r\n        this.functions[\"{}last\"] = Functions.last;\r\n        this.functions[\"{}position\"] = Functions.position;\r\n        this.functions[\"{}count\"] = Functions.count;\r\n        this.functions[\"{}id\"] = Functions.id;\r\n        this.functions[\"{}local-name\"] = Functions.localName;\r\n        this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\r\n        this.functions[\"{}name\"] = Functions.name;\r\n        this.functions[\"{}string\"] = Functions.string;\r\n        this.functions[\"{}concat\"] = Functions.concat;\r\n        this.functions[\"{}starts-with\"] = Functions.startsWith;\r\n        this.functions[\"{}contains\"] = Functions.contains;\r\n        this.functions[\"{}substring-before\"] = Functions.substringBefore;\r\n        this.functions[\"{}substring-after\"] = Functions.substringAfter;\r\n        this.functions[\"{}substring\"] = Functions.substring;\r\n        this.functions[\"{}string-length\"] = Functions.stringLength;\r\n        this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\r\n        this.functions[\"{}translate\"] = Functions.translate;\r\n        this.functions[\"{}boolean\"] = Functions.boolean_;\r\n        this.functions[\"{}not\"] = Functions.not;\r\n        this.functions[\"{}true\"] = Functions.true_;\r\n        this.functions[\"{}false\"] = Functions.false_;\r\n        this.functions[\"{}lang\"] = Functions.lang;\r\n        this.functions[\"{}number\"] = Functions.number;\r\n        this.functions[\"{}sum\"] = Functions.sum;\r\n        this.functions[\"{}floor\"] = Functions.floor;\r\n        this.functions[\"{}ceiling\"] = Functions.ceiling;\r\n        this.functions[\"{}round\"] = Functions.round;\r\n    };\r\n\r\n    FunctionResolver.prototype.addFunction = function (ns, ln, f) {\r\n        this.functions[\"{\" + ns + \"}\" + ln] = f;\r\n    };\r\n\r\n    FunctionResolver.getFunctionFromContext = function (qName, context) {\r\n        var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\r\n\r\n        if (parts[0] === null) {\r\n            throw new Error(\"Cannot resolve QName \" + name);\r\n        }\r\n\r\n        return context.functionResolver.getFunction(parts[1], parts[0]);\r\n    };\r\n\r\n    FunctionResolver.prototype.getFunction = function (localName, namespace) {\r\n        return this.functions[\"{\" + namespace + \"}\" + localName];\r\n    };\r\n\r\n    // NamespaceResolver /////////////////////////////////////////////////////////\r\n\r\n    NamespaceResolver.prototype = new Object();\r\n    NamespaceResolver.prototype.constructor = NamespaceResolver;\r\n    NamespaceResolver.superclass = Object.prototype;\r\n\r\n    function NamespaceResolver() {\r\n    }\r\n\r\n    NamespaceResolver.prototype.getNamespace = function (prefix, n) {\r\n        if (prefix == \"xml\") {\r\n            return XPath.XML_NAMESPACE_URI;\r\n        } else if (prefix == \"xmlns\") {\r\n            return XPath.XMLNS_NAMESPACE_URI;\r\n        }\r\n        if (n.nodeType == NodeTypes.DOCUMENT_NODE) {\r\n            n = n.documentElement;\r\n        } else if (n.nodeType == NodeTypes.ATTRIBUTE_NODE) {\r\n            n = PathExpr.getOwnerElement(n);\r\n        } else if (n.nodeType != NodeTypes.ELEMENT_NODE) {\r\n            n = n.parentNode;\r\n        }\r\n        while (n != null && n.nodeType == NodeTypes.ELEMENT_NODE) {\r\n            var nnm = n.attributes;\r\n            for (var i = 0; i < nnm.length; i++) {\r\n                var a = nnm.item(i);\r\n                var aname = a.name || a.nodeName;\r\n                if ((aname === \"xmlns\" && prefix === \"\")\r\n                    || aname === \"xmlns:\" + prefix) {\r\n                    return String(a.value || a.nodeValue);\r\n                }\r\n            }\r\n            n = n.parentNode;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Functions /////////////////////////////////////////////////////////////////\r\n\r\n    var Functions = new Object();\r\n\r\n    Functions.last = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function last expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextSize);\r\n    };\r\n\r\n    Functions.position = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function position expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextPosition);\r\n    };\r\n\r\n    Functions.count = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\r\n            throw new Error(\"Function count expects (node-set)\");\r\n        }\r\n        return new XNumber(ns.size);\r\n    };\r\n\r\n    Functions.id = function () {\r\n        var c = arguments[0];\r\n        var id;\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function id expects (object)\");\r\n        }\r\n        id = arguments[1].evaluate(c);\r\n        if (Utilities.instance_of(id, XNodeSet)) {\r\n            id = id.toArray().join(\" \");\r\n        } else {\r\n            id = id.stringValue();\r\n        }\r\n        var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\r\n        var count = 0;\r\n        var ns = new XNodeSet();\r\n        var doc = c.contextNode.nodeType == NodeTypes.DOCUMENT_NODE\r\n            ? c.contextNode\r\n            : c.contextNode.ownerDocument;\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var n;\r\n            if (doc.getElementById) {\r\n                n = doc.getElementById(ids[i]);\r\n            } else {\r\n                n = Utilities.getElementById(doc, ids[i]);\r\n            }\r\n            if (n != null) {\r\n                ns.add(n);\r\n                count++;\r\n            }\r\n        }\r\n        return ns;\r\n    };\r\n\r\n    Functions.localName = function (c, eNode) {\r\n        var n;\r\n\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = eNode.evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function local-name expects (node-set?)\");\r\n        }\r\n\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n\r\n        return new XString(\r\n            n.localName ||     //  standard elements and attributes\r\n            n.baseName ||     //  IE\r\n            n.target ||     //  processing instructions\r\n            n.nodeName ||     //  DOM1 elements\r\n            \"\"                 //  fallback\r\n        );\r\n    };\r\n\r\n    Functions.namespaceURI = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function namespace-uri expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(n.namespaceURI);\r\n    };\r\n\r\n    Functions.name = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function name expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        if (n.nodeType == NodeTypes.ELEMENT_NODE) {\r\n            return new XString(n.nodeName);\r\n        } else if (n.nodeType == NodeTypes.ATTRIBUTE_NODE) {\r\n            return new XString(n.name || n.nodeName);\r\n        } else if (n.nodeType === NodeTypes.PROCESSING_INSTRUCTION_NODE) {\r\n            return new XString(n.target || n.nodeName);\r\n        } else if (n.localName == null) {\r\n            return new XString(\"\");\r\n        } else {\r\n            return new XString(n.localName);\r\n        }\r\n    };\r\n\r\n    Functions.string = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length == 1) {\r\n            return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        } else if (arguments.length == 2) {\r\n            return arguments[1].evaluate(c).string();\r\n        }\r\n        throw new Error(\"Function string expects (object?)\");\r\n    };\r\n\r\n    Functions.concat = function (c) {\r\n        if (arguments.length < 3) {\r\n            throw new Error(\"Function concat expects (string, string[, string]*)\");\r\n        }\r\n        var s = \"\";\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            s += arguments[i].evaluate(c).stringValue();\r\n        }\r\n        return new XString(s);\r\n    };\r\n\r\n    Functions.startsWith = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function startsWith expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.substring(0, s2.length) == s2);\r\n    };\r\n\r\n    Functions.contains = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function contains expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.indexOf(s2) !== -1);\r\n    };\r\n\r\n    Functions.substringBefore = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-before expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XString(s1.substring(0, s1.indexOf(s2)));\r\n    };\r\n\r\n    Functions.substringAfter = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-after expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        if (s2.length == 0) {\r\n            return new XString(s1);\r\n        }\r\n        var i = s1.indexOf(s2);\r\n        if (i == -1) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(s1.substring(i + s2.length));\r\n    };\r\n\r\n    Functions.substring = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 3 || arguments.length == 4)) {\r\n            throw new Error(\"Function substring expects (string, number, number?)\");\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\r\n        var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\r\n        return new XString(s.substring(n1, n2));\r\n    };\r\n\r\n    Functions.stringLength = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function string-length expects (string?)\");\r\n        }\r\n        return new XNumber(s.length);\r\n    };\r\n\r\n    Functions.normalizeSpace = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function normalize-space expects (string?)\");\r\n        }\r\n        var i = 0;\r\n        var j = s.length - 1;\r\n        while (Utilities.isSpace(s.charCodeAt(j))) {\r\n            j--;\r\n        }\r\n        var t = \"\";\r\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n            i++;\r\n        }\r\n        while (i <= j) {\r\n            if (Utilities.isSpace(s.charCodeAt(i))) {\r\n                t += \" \";\r\n                while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n                    i++;\r\n                }\r\n            } else {\r\n                t += s.charAt(i);\r\n                i++;\r\n            }\r\n        }\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.translate = function (c, eValue, eFrom, eTo) {\r\n        if (arguments.length != 4) {\r\n            throw new Error(\"Function translate expects (string, string, string)\");\r\n        }\r\n\r\n        var value = eValue.evaluate(c).stringValue();\r\n        var from = eFrom.evaluate(c).stringValue();\r\n        var to = eTo.evaluate(c).stringValue();\r\n\r\n        var cMap = reduce(function (acc, ch, i) {\r\n            if (!(ch in acc)) {\r\n                acc[ch] = i > to.length ? '' : to[i];\r\n            }\r\n            return acc;\r\n        }, {}, from);\r\n\r\n        var t = join(\r\n            '',\r\n            map(function (ch) {\r\n                return ch in cMap ? cMap[ch] : ch;\r\n            }, value)\r\n        );\r\n\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.boolean_ = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function boolean expects (object)\");\r\n        }\r\n        return arguments[1].evaluate(c).bool();\r\n    };\r\n\r\n    Functions.not = function (c, eValue) {\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function not expects (object)\");\r\n        }\r\n        return eValue.evaluate(c).bool().not();\r\n    };\r\n\r\n    Functions.true_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function true expects ()\");\r\n        }\r\n        return XBoolean.true_;\r\n    };\r\n\r\n    Functions.false_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function false expects ()\");\r\n        }\r\n        return XBoolean.false_;\r\n    };\r\n\r\n    Functions.lang = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function lang expects (string)\");\r\n        }\r\n        var lang;\r\n        for (var n = c.contextNode; n != null && n.nodeType != NodeTypes.DOCUMENT_NODE; n = n.parentNode) {\r\n            var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\r\n            if (a != null) {\r\n                lang = String(a);\r\n                break;\r\n            }\r\n        }\r\n        if (lang == null) {\r\n            return XBoolean.false_;\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        return new XBoolean(lang.substring(0, s.length) == s\r\n            && (lang.length == s.length || lang.charAt(s.length) == '-'));\r\n    };\r\n\r\n    Functions.number = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 1 || arguments.length == 2)) {\r\n            throw new Error(\"Function number expects (object?)\");\r\n        }\r\n        if (arguments.length == 1) {\r\n            return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        }\r\n        return arguments[1].evaluate(c).number();\r\n    };\r\n\r\n    Functions.sum = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of((ns = arguments[1].evaluate(c)), XNodeSet)) {\r\n            throw new Error(\"Function sum expects (node-set)\");\r\n        }\r\n        ns = ns.toUnsortedArray();\r\n        var n = 0;\r\n        for (var i = 0; i < ns.length; i++) {\r\n            n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\r\n        }\r\n        return new XNumber(n);\r\n    };\r\n\r\n    Functions.floor = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function floor expects (number)\");\r\n        }\r\n        return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.ceiling = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function ceiling expects (number)\");\r\n        }\r\n        return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.round = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function round expects (number)\");\r\n        }\r\n        return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    // Utilities /////////////////////////////////////////////////////////////////\r\n\r\n    var Utilities = new Object();\r\n\r\n    Utilities.isAttribute = function (val) {\r\n        return val && (val.nodeType === NodeTypes.ATTRIBUTE_NODE || val.ownerElement);\r\n    }\r\n\r\n    Utilities.splitQName = function (qn) {\r\n        var i = qn.indexOf(\":\");\r\n        if (i == -1) {\r\n            return [null, qn];\r\n        }\r\n        return [qn.substring(0, i), qn.substring(i + 1)];\r\n    };\r\n\r\n    Utilities.resolveQName = function (qn, nr, n, useDefault) {\r\n        var parts = Utilities.splitQName(qn);\r\n        if (parts[0] != null) {\r\n            parts[0] = nr.getNamespace(parts[0], n);\r\n        } else {\r\n            if (useDefault) {\r\n                parts[0] = nr.getNamespace(\"\", n);\r\n                if (parts[0] == null) {\r\n                    parts[0] = \"\";\r\n                }\r\n            } else {\r\n                parts[0] = \"\";\r\n            }\r\n        }\r\n        return parts;\r\n    };\r\n\r\n    Utilities.isSpace = function (c) {\r\n        return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\r\n    };\r\n\r\n    Utilities.isLetter = function (c) {\r\n        return c >= 0x0041 && c <= 0x005A ||\r\n            c >= 0x0061 && c <= 0x007A ||\r\n            c >= 0x00C0 && c <= 0x00D6 ||\r\n            c >= 0x00D8 && c <= 0x00F6 ||\r\n            c >= 0x00F8 && c <= 0x00FF ||\r\n            c >= 0x0100 && c <= 0x0131 ||\r\n            c >= 0x0134 && c <= 0x013E ||\r\n            c >= 0x0141 && c <= 0x0148 ||\r\n            c >= 0x014A && c <= 0x017E ||\r\n            c >= 0x0180 && c <= 0x01C3 ||\r\n            c >= 0x01CD && c <= 0x01F0 ||\r\n            c >= 0x01F4 && c <= 0x01F5 ||\r\n            c >= 0x01FA && c <= 0x0217 ||\r\n            c >= 0x0250 && c <= 0x02A8 ||\r\n            c >= 0x02BB && c <= 0x02C1 ||\r\n            c == 0x0386 ||\r\n            c >= 0x0388 && c <= 0x038A ||\r\n            c == 0x038C ||\r\n            c >= 0x038E && c <= 0x03A1 ||\r\n            c >= 0x03A3 && c <= 0x03CE ||\r\n            c >= 0x03D0 && c <= 0x03D6 ||\r\n            c == 0x03DA ||\r\n            c == 0x03DC ||\r\n            c == 0x03DE ||\r\n            c == 0x03E0 ||\r\n            c >= 0x03E2 && c <= 0x03F3 ||\r\n            c >= 0x0401 && c <= 0x040C ||\r\n            c >= 0x040E && c <= 0x044F ||\r\n            c >= 0x0451 && c <= 0x045C ||\r\n            c >= 0x045E && c <= 0x0481 ||\r\n            c >= 0x0490 && c <= 0x04C4 ||\r\n            c >= 0x04C7 && c <= 0x04C8 ||\r\n            c >= 0x04CB && c <= 0x04CC ||\r\n            c >= 0x04D0 && c <= 0x04EB ||\r\n            c >= 0x04EE && c <= 0x04F5 ||\r\n            c >= 0x04F8 && c <= 0x04F9 ||\r\n            c >= 0x0531 && c <= 0x0556 ||\r\n            c == 0x0559 ||\r\n            c >= 0x0561 && c <= 0x0586 ||\r\n            c >= 0x05D0 && c <= 0x05EA ||\r\n            c >= 0x05F0 && c <= 0x05F2 ||\r\n            c >= 0x0621 && c <= 0x063A ||\r\n            c >= 0x0641 && c <= 0x064A ||\r\n            c >= 0x0671 && c <= 0x06B7 ||\r\n            c >= 0x06BA && c <= 0x06BE ||\r\n            c >= 0x06C0 && c <= 0x06CE ||\r\n            c >= 0x06D0 && c <= 0x06D3 ||\r\n            c == 0x06D5 ||\r\n            c >= 0x06E5 && c <= 0x06E6 ||\r\n            c >= 0x0905 && c <= 0x0939 ||\r\n            c == 0x093D ||\r\n            c >= 0x0958 && c <= 0x0961 ||\r\n            c >= 0x0985 && c <= 0x098C ||\r\n            c >= 0x098F && c <= 0x0990 ||\r\n            c >= 0x0993 && c <= 0x09A8 ||\r\n            c >= 0x09AA && c <= 0x09B0 ||\r\n            c == 0x09B2 ||\r\n            c >= 0x09B6 && c <= 0x09B9 ||\r\n            c >= 0x09DC && c <= 0x09DD ||\r\n            c >= 0x09DF && c <= 0x09E1 ||\r\n            c >= 0x09F0 && c <= 0x09F1 ||\r\n            c >= 0x0A05 && c <= 0x0A0A ||\r\n            c >= 0x0A0F && c <= 0x0A10 ||\r\n            c >= 0x0A13 && c <= 0x0A28 ||\r\n            c >= 0x0A2A && c <= 0x0A30 ||\r\n            c >= 0x0A32 && c <= 0x0A33 ||\r\n            c >= 0x0A35 && c <= 0x0A36 ||\r\n            c >= 0x0A38 && c <= 0x0A39 ||\r\n            c >= 0x0A59 && c <= 0x0A5C ||\r\n            c == 0x0A5E ||\r\n            c >= 0x0A72 && c <= 0x0A74 ||\r\n            c >= 0x0A85 && c <= 0x0A8B ||\r\n            c == 0x0A8D ||\r\n            c >= 0x0A8F && c <= 0x0A91 ||\r\n            c >= 0x0A93 && c <= 0x0AA8 ||\r\n            c >= 0x0AAA && c <= 0x0AB0 ||\r\n            c >= 0x0AB2 && c <= 0x0AB3 ||\r\n            c >= 0x0AB5 && c <= 0x0AB9 ||\r\n            c == 0x0ABD ||\r\n            c == 0x0AE0 ||\r\n            c >= 0x0B05 && c <= 0x0B0C ||\r\n            c >= 0x0B0F && c <= 0x0B10 ||\r\n            c >= 0x0B13 && c <= 0x0B28 ||\r\n            c >= 0x0B2A && c <= 0x0B30 ||\r\n            c >= 0x0B32 && c <= 0x0B33 ||\r\n            c >= 0x0B36 && c <= 0x0B39 ||\r\n            c == 0x0B3D ||\r\n            c >= 0x0B5C && c <= 0x0B5D ||\r\n            c >= 0x0B5F && c <= 0x0B61 ||\r\n            c >= 0x0B85 && c <= 0x0B8A ||\r\n            c >= 0x0B8E && c <= 0x0B90 ||\r\n            c >= 0x0B92 && c <= 0x0B95 ||\r\n            c >= 0x0B99 && c <= 0x0B9A ||\r\n            c == 0x0B9C ||\r\n            c >= 0x0B9E && c <= 0x0B9F ||\r\n            c >= 0x0BA3 && c <= 0x0BA4 ||\r\n            c >= 0x0BA8 && c <= 0x0BAA ||\r\n            c >= 0x0BAE && c <= 0x0BB5 ||\r\n            c >= 0x0BB7 && c <= 0x0BB9 ||\r\n            c >= 0x0C05 && c <= 0x0C0C ||\r\n            c >= 0x0C0E && c <= 0x0C10 ||\r\n            c >= 0x0C12 && c <= 0x0C28 ||\r\n            c >= 0x0C2A && c <= 0x0C33 ||\r\n            c >= 0x0C35 && c <= 0x0C39 ||\r\n            c >= 0x0C60 && c <= 0x0C61 ||\r\n            c >= 0x0C85 && c <= 0x0C8C ||\r\n            c >= 0x0C8E && c <= 0x0C90 ||\r\n            c >= 0x0C92 && c <= 0x0CA8 ||\r\n            c >= 0x0CAA && c <= 0x0CB3 ||\r\n            c >= 0x0CB5 && c <= 0x0CB9 ||\r\n            c == 0x0CDE ||\r\n            c >= 0x0CE0 && c <= 0x0CE1 ||\r\n            c >= 0x0D05 && c <= 0x0D0C ||\r\n            c >= 0x0D0E && c <= 0x0D10 ||\r\n            c >= 0x0D12 && c <= 0x0D28 ||\r\n            c >= 0x0D2A && c <= 0x0D39 ||\r\n            c >= 0x0D60 && c <= 0x0D61 ||\r\n            c >= 0x0E01 && c <= 0x0E2E ||\r\n            c == 0x0E30 ||\r\n            c >= 0x0E32 && c <= 0x0E33 ||\r\n            c >= 0x0E40 && c <= 0x0E45 ||\r\n            c >= 0x0E81 && c <= 0x0E82 ||\r\n            c == 0x0E84 ||\r\n            c >= 0x0E87 && c <= 0x0E88 ||\r\n            c == 0x0E8A ||\r\n            c == 0x0E8D ||\r\n            c >= 0x0E94 && c <= 0x0E97 ||\r\n            c >= 0x0E99 && c <= 0x0E9F ||\r\n            c >= 0x0EA1 && c <= 0x0EA3 ||\r\n            c == 0x0EA5 ||\r\n            c == 0x0EA7 ||\r\n            c >= 0x0EAA && c <= 0x0EAB ||\r\n            c >= 0x0EAD && c <= 0x0EAE ||\r\n            c == 0x0EB0 ||\r\n            c >= 0x0EB2 && c <= 0x0EB3 ||\r\n            c == 0x0EBD ||\r\n            c >= 0x0EC0 && c <= 0x0EC4 ||\r\n            c >= 0x0F40 && c <= 0x0F47 ||\r\n            c >= 0x0F49 && c <= 0x0F69 ||\r\n            c >= 0x10A0 && c <= 0x10C5 ||\r\n            c >= 0x10D0 && c <= 0x10F6 ||\r\n            c == 0x1100 ||\r\n            c >= 0x1102 && c <= 0x1103 ||\r\n            c >= 0x1105 && c <= 0x1107 ||\r\n            c == 0x1109 ||\r\n            c >= 0x110B && c <= 0x110C ||\r\n            c >= 0x110E && c <= 0x1112 ||\r\n            c == 0x113C ||\r\n            c == 0x113E ||\r\n            c == 0x1140 ||\r\n            c == 0x114C ||\r\n            c == 0x114E ||\r\n            c == 0x1150 ||\r\n            c >= 0x1154 && c <= 0x1155 ||\r\n            c == 0x1159 ||\r\n            c >= 0x115F && c <= 0x1161 ||\r\n            c == 0x1163 ||\r\n            c == 0x1165 ||\r\n            c == 0x1167 ||\r\n            c == 0x1169 ||\r\n            c >= 0x116D && c <= 0x116E ||\r\n            c >= 0x1172 && c <= 0x1173 ||\r\n            c == 0x1175 ||\r\n            c == 0x119E ||\r\n            c == 0x11A8 ||\r\n            c == 0x11AB ||\r\n            c >= 0x11AE && c <= 0x11AF ||\r\n            c >= 0x11B7 && c <= 0x11B8 ||\r\n            c == 0x11BA ||\r\n            c >= 0x11BC && c <= 0x11C2 ||\r\n            c == 0x11EB ||\r\n            c == 0x11F0 ||\r\n            c == 0x11F9 ||\r\n            c >= 0x1E00 && c <= 0x1E9B ||\r\n            c >= 0x1EA0 && c <= 0x1EF9 ||\r\n            c >= 0x1F00 && c <= 0x1F15 ||\r\n            c >= 0x1F18 && c <= 0x1F1D ||\r\n            c >= 0x1F20 && c <= 0x1F45 ||\r\n            c >= 0x1F48 && c <= 0x1F4D ||\r\n            c >= 0x1F50 && c <= 0x1F57 ||\r\n            c == 0x1F59 ||\r\n            c == 0x1F5B ||\r\n            c == 0x1F5D ||\r\n            c >= 0x1F5F && c <= 0x1F7D ||\r\n            c >= 0x1F80 && c <= 0x1FB4 ||\r\n            c >= 0x1FB6 && c <= 0x1FBC ||\r\n            c == 0x1FBE ||\r\n            c >= 0x1FC2 && c <= 0x1FC4 ||\r\n            c >= 0x1FC6 && c <= 0x1FCC ||\r\n            c >= 0x1FD0 && c <= 0x1FD3 ||\r\n            c >= 0x1FD6 && c <= 0x1FDB ||\r\n            c >= 0x1FE0 && c <= 0x1FEC ||\r\n            c >= 0x1FF2 && c <= 0x1FF4 ||\r\n            c >= 0x1FF6 && c <= 0x1FFC ||\r\n            c == 0x2126 ||\r\n            c >= 0x212A && c <= 0x212B ||\r\n            c == 0x212E ||\r\n            c >= 0x2180 && c <= 0x2182 ||\r\n            c >= 0x3041 && c <= 0x3094 ||\r\n            c >= 0x30A1 && c <= 0x30FA ||\r\n            c >= 0x3105 && c <= 0x312C ||\r\n            c >= 0xAC00 && c <= 0xD7A3 ||\r\n            c >= 0x4E00 && c <= 0x9FA5 ||\r\n            c == 0x3007 ||\r\n            c >= 0x3021 && c <= 0x3029;\r\n    };\r\n\r\n    Utilities.isNCNameChar = function (c) {\r\n        return c >= 0x0030 && c <= 0x0039\r\n            || c >= 0x0660 && c <= 0x0669\r\n            || c >= 0x06F0 && c <= 0x06F9\r\n            || c >= 0x0966 && c <= 0x096F\r\n            || c >= 0x09E6 && c <= 0x09EF\r\n            || c >= 0x0A66 && c <= 0x0A6F\r\n            || c >= 0x0AE6 && c <= 0x0AEF\r\n            || c >= 0x0B66 && c <= 0x0B6F\r\n            || c >= 0x0BE7 && c <= 0x0BEF\r\n            || c >= 0x0C66 && c <= 0x0C6F\r\n            || c >= 0x0CE6 && c <= 0x0CEF\r\n            || c >= 0x0D66 && c <= 0x0D6F\r\n            || c >= 0x0E50 && c <= 0x0E59\r\n            || c >= 0x0ED0 && c <= 0x0ED9\r\n            || c >= 0x0F20 && c <= 0x0F29\r\n            || c == 0x002E\r\n            || c == 0x002D\r\n            || c == 0x005F\r\n            || Utilities.isLetter(c)\r\n            || c >= 0x0300 && c <= 0x0345\r\n            || c >= 0x0360 && c <= 0x0361\r\n            || c >= 0x0483 && c <= 0x0486\r\n            || c >= 0x0591 && c <= 0x05A1\r\n            || c >= 0x05A3 && c <= 0x05B9\r\n            || c >= 0x05BB && c <= 0x05BD\r\n            || c == 0x05BF\r\n            || c >= 0x05C1 && c <= 0x05C2\r\n            || c == 0x05C4\r\n            || c >= 0x064B && c <= 0x0652\r\n            || c == 0x0670\r\n            || c >= 0x06D6 && c <= 0x06DC\r\n            || c >= 0x06DD && c <= 0x06DF\r\n            || c >= 0x06E0 && c <= 0x06E4\r\n            || c >= 0x06E7 && c <= 0x06E8\r\n            || c >= 0x06EA && c <= 0x06ED\r\n            || c >= 0x0901 && c <= 0x0903\r\n            || c == 0x093C\r\n            || c >= 0x093E && c <= 0x094C\r\n            || c == 0x094D\r\n            || c >= 0x0951 && c <= 0x0954\r\n            || c >= 0x0962 && c <= 0x0963\r\n            || c >= 0x0981 && c <= 0x0983\r\n            || c == 0x09BC\r\n            || c == 0x09BE\r\n            || c == 0x09BF\r\n            || c >= 0x09C0 && c <= 0x09C4\r\n            || c >= 0x09C7 && c <= 0x09C8\r\n            || c >= 0x09CB && c <= 0x09CD\r\n            || c == 0x09D7\r\n            || c >= 0x09E2 && c <= 0x09E3\r\n            || c == 0x0A02\r\n            || c == 0x0A3C\r\n            || c == 0x0A3E\r\n            || c == 0x0A3F\r\n            || c >= 0x0A40 && c <= 0x0A42\r\n            || c >= 0x0A47 && c <= 0x0A48\r\n            || c >= 0x0A4B && c <= 0x0A4D\r\n            || c >= 0x0A70 && c <= 0x0A71\r\n            || c >= 0x0A81 && c <= 0x0A83\r\n            || c == 0x0ABC\r\n            || c >= 0x0ABE && c <= 0x0AC5\r\n            || c >= 0x0AC7 && c <= 0x0AC9\r\n            || c >= 0x0ACB && c <= 0x0ACD\r\n            || c >= 0x0B01 && c <= 0x0B03\r\n            || c == 0x0B3C\r\n            || c >= 0x0B3E && c <= 0x0B43\r\n            || c >= 0x0B47 && c <= 0x0B48\r\n            || c >= 0x0B4B && c <= 0x0B4D\r\n            || c >= 0x0B56 && c <= 0x0B57\r\n            || c >= 0x0B82 && c <= 0x0B83\r\n            || c >= 0x0BBE && c <= 0x0BC2\r\n            || c >= 0x0BC6 && c <= 0x0BC8\r\n            || c >= 0x0BCA && c <= 0x0BCD\r\n            || c == 0x0BD7\r\n            || c >= 0x0C01 && c <= 0x0C03\r\n            || c >= 0x0C3E && c <= 0x0C44\r\n            || c >= 0x0C46 && c <= 0x0C48\r\n            || c >= 0x0C4A && c <= 0x0C4D\r\n            || c >= 0x0C55 && c <= 0x0C56\r\n            || c >= 0x0C82 && c <= 0x0C83\r\n            || c >= 0x0CBE && c <= 0x0CC4\r\n            || c >= 0x0CC6 && c <= 0x0CC8\r\n            || c >= 0x0CCA && c <= 0x0CCD\r\n            || c >= 0x0CD5 && c <= 0x0CD6\r\n            || c >= 0x0D02 && c <= 0x0D03\r\n            || c >= 0x0D3E && c <= 0x0D43\r\n            || c >= 0x0D46 && c <= 0x0D48\r\n            || c >= 0x0D4A && c <= 0x0D4D\r\n            || c == 0x0D57\r\n            || c == 0x0E31\r\n            || c >= 0x0E34 && c <= 0x0E3A\r\n            || c >= 0x0E47 && c <= 0x0E4E\r\n            || c == 0x0EB1\r\n            || c >= 0x0EB4 && c <= 0x0EB9\r\n            || c >= 0x0EBB && c <= 0x0EBC\r\n            || c >= 0x0EC8 && c <= 0x0ECD\r\n            || c >= 0x0F18 && c <= 0x0F19\r\n            || c == 0x0F35\r\n            || c == 0x0F37\r\n            || c == 0x0F39\r\n            || c == 0x0F3E\r\n            || c == 0x0F3F\r\n            || c >= 0x0F71 && c <= 0x0F84\r\n            || c >= 0x0F86 && c <= 0x0F8B\r\n            || c >= 0x0F90 && c <= 0x0F95\r\n            || c == 0x0F97\r\n            || c >= 0x0F99 && c <= 0x0FAD\r\n            || c >= 0x0FB1 && c <= 0x0FB7\r\n            || c == 0x0FB9\r\n            || c >= 0x20D0 && c <= 0x20DC\r\n            || c == 0x20E1\r\n            || c >= 0x302A && c <= 0x302F\r\n            || c == 0x3099\r\n            || c == 0x309A\r\n            || c == 0x00B7\r\n            || c == 0x02D0\r\n            || c == 0x02D1\r\n            || c == 0x0387\r\n            || c == 0x0640\r\n            || c == 0x0E46\r\n            || c == 0x0EC6\r\n            || c == 0x3005\r\n            || c >= 0x3031 && c <= 0x3035\r\n            || c >= 0x309D && c <= 0x309E\r\n            || c >= 0x30FC && c <= 0x30FE;\r\n    };\r\n\r\n    Utilities.coalesceText = function (n) {\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            if (m.nodeType == NodeTypes.TEXT_NODE || m.nodeType == NodeTypes.CDATA_SECTION_NODE) {\r\n                var s = m.nodeValue;\r\n                var first = m;\r\n                m = m.nextSibling;\r\n                while (m != null && (m.nodeType == NodeTypes.TEXT_NODE || m.nodeType == NodeTypes.CDATA_SECTION_NODE)) {\r\n                    s += m.nodeValue;\r\n                    var del = m;\r\n                    m = m.nextSibling;\r\n                    del.parentNode.removeChild(del);\r\n                }\r\n                if (first.nodeType == NodeTypes.CDATA_SECTION_NODE) {\r\n                    var p = first.parentNode;\r\n                    if (first.nextSibling == null) {\r\n                        p.removeChild(first);\r\n                        p.appendChild(p.ownerDocument.createTextNode(s));\r\n                    } else {\r\n                        var next = first.nextSibling;\r\n                        p.removeChild(first);\r\n                        p.insertBefore(p.ownerDocument.createTextNode(s), next);\r\n                    }\r\n                } else {\r\n                    first.nodeValue = s;\r\n                }\r\n                if (m == null) {\r\n                    break;\r\n                }\r\n            } else if (m.nodeType == NodeTypes.ELEMENT_NODE) {\r\n                Utilities.coalesceText(m);\r\n            }\r\n        }\r\n    };\r\n\r\n    Utilities.instance_of = function (o, c) {\r\n        while (o != null) {\r\n            if (o.constructor === c) {\r\n                return true;\r\n            }\r\n            if (o === Object) {\r\n                return false;\r\n            }\r\n            o = o.constructor.superclass;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Utilities.getElementById = function (n, id) {\r\n        // Note that this does not check the DTD to check for actual\r\n        // attributes of type ID, so this may be a bit wrong.\r\n        if (n.nodeType == NodeTypes.ELEMENT_NODE) {\r\n            if (n.getAttribute(\"id\") == id\r\n                || n.getAttributeNS(null, \"id\") == id) {\r\n                return n;\r\n            }\r\n        }\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            var res = Utilities.getElementById(m, id);\r\n            if (res != null) {\r\n                return res;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // XPathException ////////////////////////////////////////////////////////////\r\n\r\n    var XPathException = (function () {\r\n        function getMessage(code, exception) {\r\n            var msg = exception ? \": \" + exception.toString() : \"\";\r\n            switch (code) {\r\n                case XPathException.INVALID_EXPRESSION_ERR:\r\n                    return \"Invalid expression\" + msg;\r\n                case XPathException.TYPE_ERR:\r\n                    return \"Type error\" + msg;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function XPathException(code, error, message) {\r\n            var err = Error.call(this, getMessage(code, error) || message);\r\n\r\n            err.code = code;\r\n            err.exception = error;\r\n\r\n            return err;\r\n        }\r\n\r\n        XPathException.prototype = Object.create(Error.prototype);\r\n        XPathException.prototype.constructor = XPathException;\r\n        XPathException.superclass = Error;\r\n\r\n        XPathException.prototype.toString = function () {\r\n            return this.message;\r\n        };\r\n\r\n        XPathException.fromMessage = function (message, error) {\r\n            return new XPathException(null, error, message);\r\n        };\r\n\r\n        XPathException.INVALID_EXPRESSION_ERR = 51;\r\n        XPathException.TYPE_ERR = 52;\r\n\r\n        return XPathException;\r\n    })();\r\n\r\n    // XPathExpression ///////////////////////////////////////////////////////////\r\n\r\n    XPathExpression.prototype = {};\r\n    XPathExpression.prototype.constructor = XPathExpression;\r\n    XPathExpression.superclass = Object.prototype;\r\n\r\n    function XPathExpression(e, r, p) {\r\n        this.xpath = p.parse(e);\r\n        this.context = new XPathContext();\r\n        this.context.namespaceResolver = new XPathNSResolverWrapper(r);\r\n    }\r\n\r\n    XPathExpression.getOwnerDocument = function (n) {\r\n        return n.nodeType === NodeTypes.DOCUMENT_NODE ? n : n.ownerDocument;\r\n    }\r\n\r\n    XPathExpression.detectHtmlDom = function (n) {\r\n        if (!n) { return false; }\r\n\r\n        var doc = XPathExpression.getOwnerDocument(n);\r\n\r\n        try {\r\n            return doc.implementation.hasFeature(\"HTML\", \"2.0\");\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    XPathExpression.prototype.evaluate = function (n, t, res) {\r\n        this.context.expressionContextNode = n;\r\n        // backward compatibility - no reliable way to detect whether the DOM is HTML, but\r\n        // this library has been using this method up until now, so we will continue to use it\r\n        // ONLY when using an XPathExpression\r\n        this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\r\n\r\n        var result = this.xpath.evaluate(this.context);\r\n        return new XPathResult(result, t);\r\n    }\r\n\r\n    // XPathNSResolverWrapper ////////////////////////////////////////////////////\r\n\r\n    XPathNSResolverWrapper.prototype = {};\r\n    XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\r\n    XPathNSResolverWrapper.superclass = Object.prototype;\r\n\r\n    function XPathNSResolverWrapper(r) {\r\n        this.xpathNSResolver = r;\r\n    }\r\n\r\n    XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\r\n        if (this.xpathNSResolver == null) {\r\n            return null;\r\n        }\r\n        return this.xpathNSResolver.lookupNamespaceURI(prefix);\r\n    };\r\n\r\n    // NodeXPathNSResolver ///////////////////////////////////////////////////////\r\n\r\n    NodeXPathNSResolver.prototype = {};\r\n    NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\r\n    NodeXPathNSResolver.superclass = Object.prototype;\r\n\r\n    function NodeXPathNSResolver(n) {\r\n        this.node = n;\r\n        this.namespaceResolver = new NamespaceResolver();\r\n    }\r\n\r\n    NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\r\n        return this.namespaceResolver.getNamespace(prefix, this.node);\r\n    };\r\n\r\n    // XPathResult ///////////////////////////////////////////////////////////////\r\n\r\n    XPathResult.prototype = {};\r\n    XPathResult.prototype.constructor = XPathResult;\r\n    XPathResult.superclass = Object.prototype;\r\n\r\n    function XPathResult(v, t) {\r\n        if (t == XPathResult.ANY_TYPE) {\r\n            if (v.constructor === XString) {\r\n                t = XPathResult.STRING_TYPE;\r\n            } else if (v.constructor === XNumber) {\r\n                t = XPathResult.NUMBER_TYPE;\r\n            } else if (v.constructor === XBoolean) {\r\n                t = XPathResult.BOOLEAN_TYPE;\r\n            } else if (v.constructor === XNodeSet) {\r\n                t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\r\n            }\r\n        }\r\n        this.resultType = t;\r\n        switch (t) {\r\n            case XPathResult.NUMBER_TYPE:\r\n                this.numberValue = v.numberValue();\r\n                return;\r\n            case XPathResult.STRING_TYPE:\r\n                this.stringValue = v.stringValue();\r\n                return;\r\n            case XPathResult.BOOLEAN_TYPE:\r\n                this.booleanValue = v.booleanValue();\r\n                return;\r\n            case XPathResult.ANY_UNORDERED_NODE_TYPE:\r\n            case XPathResult.FIRST_ORDERED_NODE_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.singleNodeValue = v.first();\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\r\n            case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.invalidIteratorState = false;\r\n                    this.nodes = v.toArray();\r\n                    this.iteratorIndex = 0;\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\r\n            case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.nodes = v.toArray();\r\n                    this.snapshotLength = this.nodes.length;\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        throw new XPathException(XPathException.TYPE_ERR);\r\n    };\r\n\r\n    XPathResult.prototype.iterateNext = function () {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[this.iteratorIndex++];\r\n    };\r\n\r\n    XPathResult.prototype.snapshotItem = function (i) {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[i];\r\n    };\r\n\r\n    XPathResult.ANY_TYPE = 0;\r\n    XPathResult.NUMBER_TYPE = 1;\r\n    XPathResult.STRING_TYPE = 2;\r\n    XPathResult.BOOLEAN_TYPE = 3;\r\n    XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\r\n    XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\r\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\r\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\r\n    XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\r\n    XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\r\n\r\n    // DOM 3 XPath support ///////////////////////////////////////////////////////\r\n\r\n    function installDOM3XPathSupport(doc, p) {\r\n        doc.createExpression = function (e, r) {\r\n            try {\r\n                return new XPathExpression(e, r, p);\r\n            } catch (e) {\r\n                throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\r\n            }\r\n        };\r\n        doc.createNSResolver = function (n) {\r\n            return new NodeXPathNSResolver(n);\r\n        };\r\n        doc.evaluate = function (e, cn, r, t, res) {\r\n            if (t < 0 || t > 9) {\r\n                throw { code: 0, toString: function () { return \"Request type not supported\"; } };\r\n            }\r\n            return doc.createExpression(e, r, p).evaluate(cn, t, res);\r\n        };\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    // Install DOM 3 XPath support for the current document.\r\n    try {\r\n        var shouldInstall = true;\r\n        try {\r\n            if (document.implementation\r\n                && document.implementation.hasFeature\r\n                && document.implementation.hasFeature(\"XPath\", null)) {\r\n                shouldInstall = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n        if (shouldInstall) {\r\n            installDOM3XPathSupport(document, new XPathParser());\r\n        }\r\n    } catch (e) {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------\r\n    // exports for node.js\r\n\r\n    installDOM3XPathSupport(exports, new XPathParser());\r\n\r\n    (function () {\r\n        var parser = new XPathParser();\r\n\r\n        var defaultNSResolver = new NamespaceResolver();\r\n        var defaultFunctionResolver = new FunctionResolver();\r\n        var defaultVariableResolver = new VariableResolver();\r\n\r\n        function makeNSResolverFromFunction(func) {\r\n            return {\r\n                getNamespace: function (prefix, node) {\r\n                    var ns = func(prefix, node);\r\n\r\n                    return ns || defaultNSResolver.getNamespace(prefix, node);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeNSResolverFromObject(obj) {\r\n            return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\r\n        }\r\n\r\n        function makeNSResolverFromMap(map) {\r\n            return makeNSResolverFromFunction(function (prefix) {\r\n                return map[prefix];\r\n            });\r\n        }\r\n\r\n        function makeNSResolver(resolver) {\r\n            if (resolver && typeof resolver.getNamespace === \"function\") {\r\n                return makeNSResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeNSResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume prefix -> uri mapping\r\n            if (typeof resolver === \"object\") {\r\n                return makeNSResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultNSResolver;\r\n        }\r\n\r\n        /** Converts native JavaScript types to their XPath library equivalent */\r\n        function convertValue(value) {\r\n            if (value === null ||\r\n                typeof value === \"undefined\" ||\r\n                value instanceof XString ||\r\n                value instanceof XBoolean ||\r\n                value instanceof XNumber ||\r\n                value instanceof XNodeSet) {\r\n                return value;\r\n            }\r\n\r\n            switch (typeof value) {\r\n                case \"string\": return new XString(value);\r\n                case \"boolean\": return new XBoolean(value);\r\n                case \"number\": return new XNumber(value);\r\n            }\r\n\r\n            // assume node(s)\r\n            var ns = new XNodeSet();\r\n            ns.addArray([].concat(value));\r\n            return ns;\r\n        }\r\n\r\n        function makeEvaluator(func) {\r\n            return function (context) {\r\n                var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\r\n                    return arg.evaluate(context);\r\n                });\r\n                var result = func.apply(this, [].concat(context, args));\r\n                return convertValue(result);\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromFunction(func) {\r\n            return {\r\n                getFunction: function (name, namespace) {\r\n                    var found = func(name, namespace);\r\n                    if (found) {\r\n                        return makeEvaluator(found);\r\n                    }\r\n                    return defaultFunctionResolver.getFunction(name, namespace);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromObject(obj) {\r\n            return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\r\n        }\r\n\r\n        function makeFunctionResolverFromMap(map) {\r\n            return makeFunctionResolverFromFunction(function (name) {\r\n                return map[name];\r\n            });\r\n        }\r\n\r\n        function makeFunctionResolver(resolver) {\r\n            if (resolver && typeof resolver.getFunction === \"function\") {\r\n                return makeFunctionResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeFunctionResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume map\r\n            if (typeof resolver === \"object\") {\r\n                return makeFunctionResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultFunctionResolver;\r\n        }\r\n\r\n        function makeVariableResolverFromFunction(func) {\r\n            return {\r\n                getVariable: function (name, namespace) {\r\n                    var value = func(name, namespace);\r\n                    return convertValue(value);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeVariableResolver(resolver) {\r\n            if (resolver) {\r\n                if (typeof resolver.getVariable === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\r\n                }\r\n\r\n                if (typeof resolver === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver);\r\n                }\r\n\r\n                // assume map\r\n                if (typeof resolver === \"object\") {\r\n                    return makeVariableResolverFromFunction(function (name) {\r\n                        return resolver[name];\r\n                    });\r\n                }\r\n            }\r\n\r\n            return defaultVariableResolver;\r\n        }\r\n\r\n        function copyIfPresent(prop, dest, source) {\r\n            if (prop in source) { dest[prop] = source[prop]; }\r\n        }\r\n\r\n        function makeContext(options) {\r\n            var context = new XPathContext();\r\n\r\n            if (options) {\r\n                context.namespaceResolver = makeNSResolver(options.namespaces);\r\n                context.functionResolver = makeFunctionResolver(options.functions);\r\n                context.variableResolver = makeVariableResolver(options.variables);\r\n                context.expressionContextNode = options.node;\r\n                copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\r\n                copyIfPresent('isHtml', context, options);\r\n            } else {\r\n                context.namespaceResolver = defaultNSResolver;\r\n            }\r\n\r\n            return context;\r\n        }\r\n\r\n        function evaluate(parsedExpression, options) {\r\n            var context = makeContext(options);\r\n\r\n            return parsedExpression.evaluate(context);\r\n        }\r\n\r\n        var evaluatorPrototype = {\r\n            evaluate: function (options) {\r\n                return evaluate(this.expression, options);\r\n            }\r\n\r\n            , evaluateNumber: function (options) {\r\n                return this.evaluate(options).numberValue();\r\n            }\r\n\r\n            , evaluateString: function (options) {\r\n                return this.evaluate(options).stringValue();\r\n            }\r\n\r\n            , evaluateBoolean: function (options) {\r\n                return this.evaluate(options).booleanValue();\r\n            }\r\n\r\n            , evaluateNodeSet: function (options) {\r\n                return this.evaluate(options).nodeset();\r\n            }\r\n\r\n            , select: function (options) {\r\n                return this.evaluateNodeSet(options).toArray()\r\n            }\r\n\r\n            , select1: function (options) {\r\n                return this.select(options)[0];\r\n            }\r\n        };\r\n\r\n        function parse(xpath) {\r\n            var parsed = parser.parse(xpath);\r\n\r\n            return Object.create(evaluatorPrototype, {\r\n                expression: {\r\n                    value: parsed\r\n                }\r\n            });\r\n        }\r\n\r\n        exports.parse = parse;\r\n    })();\r\n\r\n    assign(\r\n        exports,\r\n        {\r\n            XPath: XPath,\r\n            XPathParser: XPathParser,\r\n            XPathResult: XPathResult,\r\n\r\n            Step: Step,\r\n            PathExpr: PathExpr,\r\n            NodeTest: NodeTest,\r\n            LocationPath: LocationPath,\r\n\r\n            OrOperation: OrOperation,\r\n            AndOperation: AndOperation,\r\n\r\n            BarOperation: BarOperation,\r\n\r\n            EqualsOperation: EqualsOperation,\r\n            NotEqualOperation: NotEqualOperation,\r\n            LessThanOperation: LessThanOperation,\r\n            GreaterThanOperation: GreaterThanOperation,\r\n            LessThanOrEqualOperation: LessThanOrEqualOperation,\r\n            GreaterThanOrEqualOperation: GreaterThanOrEqualOperation,\r\n\r\n            PlusOperation: PlusOperation,\r\n            MinusOperation: MinusOperation,\r\n            MultiplyOperation: MultiplyOperation,\r\n            DivOperation: DivOperation,\r\n            ModOperation: ModOperation,\r\n            UnaryMinusOperation: UnaryMinusOperation,\r\n          \r\n            FunctionCall: FunctionCall,\r\n            VariableReference: VariableReference,\r\n          \r\n            XPathContext: XPathContext,\r\n          \r\n            XNodeSet: XNodeSet,\r\n            XBoolean: XBoolean,\r\n            XString: XString,\r\n            XNumber: XNumber,\r\n          \r\n            NamespaceResolver: NamespaceResolver,\r\n            FunctionResolver: FunctionResolver,\r\n            VariableResolver: VariableResolver,\r\n          \r\n            Utilities: Utilities,\r\n        }\r\n    );\r\n\r\n    // helper\r\n    exports.select = function (e, doc, single) {\r\n        return exports.selectWithResolver(e, doc, null, single);\r\n    };\r\n\r\n    exports.useNamespaces = function (mappings) {\r\n        var resolver = {\r\n            mappings: mappings || {},\r\n            lookupNamespaceURI: function (prefix) {\r\n                return this.mappings[prefix];\r\n            }\r\n        };\r\n\r\n        return function (e, doc, single) {\r\n            return exports.selectWithResolver(e, doc, resolver, single);\r\n        };\r\n    };\r\n\r\n    exports.selectWithResolver = function (e, doc, resolver, single) {\r\n        var expression = new XPathExpression(e, resolver, new XPathParser());\r\n        var type = XPathResult.ANY_TYPE;\r\n\r\n        var result = expression.evaluate(doc, type, null);\r\n\r\n        if (result.resultType == XPathResult.STRING_TYPE) {\r\n            result = result.stringValue;\r\n        }\r\n        else if (result.resultType == XPathResult.NUMBER_TYPE) {\r\n            result = result.numberValue;\r\n        }\r\n        else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\r\n            result = result.booleanValue;\r\n        }\r\n        else {\r\n            result = result.nodes;\r\n            if (single) {\r\n                result = result[0];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    exports.select1 = function (e, doc) {\r\n        return exports.select(e, doc, true);\r\n    };\r\n\r\n    var isNodeLike = function (value) {\r\n        return value \r\n            && typeof value.nodeType === \"number\" \r\n            && Number.isInteger(value.nodeType)\r\n            && value.nodeType >= 1\r\n            && value.nodeType <= 11\r\n            && typeof value.nodeName === \"string\";\r\n    };\r\n\r\n    var isArrayOfNodes = function (value) {\r\n        return Array.isArray(value) && value.every(isNodeLike);\r\n    };\r\n\r\n    var isNodeOfType = function (type) {\r\n        return function (value) {\r\n            return isNodeLike(value) && value.nodeType === type;\r\n        };\r\n    };\r\n\r\n    assign(\r\n        exports,\r\n        {\r\n            isNodeLike: isNodeLike,\r\n            isArrayOfNodes: isArrayOfNodes,\r\n            isElement: isNodeOfType(NodeTypes.ELEMENT_NODE),\r\n            isAttribute: isNodeOfType(NodeTypes.ATTRIBUTE_NODE),\r\n            isTextNode: isNodeOfType(NodeTypes.TEXT_NODE),\r\n            isCDATASection: isNodeOfType(NodeTypes.CDATA_SECTION_NODE),\r\n            isProcessingInstruction: isNodeOfType(NodeTypes.PROCESSING_INSTRUCTION_NODE),\r\n            isComment: isNodeOfType(NodeTypes.COMMENT_NODE),\r\n            isDocumentNode: isNodeOfType(NodeTypes.DOCUMENT_NODE),\r\n            isDocumentTypeNode: isNodeOfType(NodeTypes.DOCUMENT_TYPE_NODE),\r\n            isDocumentFragment: isNodeOfType(NodeTypes.DOCUMENT_FRAGMENT_NODE),\r\n        }\r\n    );\r\n    // end non-node wrapper\r\n})(xpath);\r\n"],"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C,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EACtC,sCAAsC,EA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AC,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACjB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACd,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EACX,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC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M,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM;EAClC,CAAC;EAEDxE,SAAS,CAACmF,YAAY,GAAG,UAAUX,CAAC,EAAE;IAClC,OAAOA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXxE,SAAS,CAACgF,QAAQ,CAACR,CAAC,CAAC,IACrBA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC,IAAI,MAAM,IAC1BA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IACXA,CAAC,IAAI,MAAM,IAAIA,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}