{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api\";\nconst transformReservationData = data => {\n  try {\n    console.log(\"Données brutes reçues du backend:\", data);\n    return data.map(item => {\n      var _item$client, _item$client2, _item$chambre;\n      return {\n        id: item.id,\n        clientName: item.client ? `${item.client.prenom || \"\"} ${item.client.nom || \"\"}`.trim() || \"Non spécifié\" : \"Non spécifié\",\n        email: ((_item$client = item.client) === null || _item$client === void 0 ? void 0 : _item$client.email) || \"Non spécifié\",\n        phone: ((_item$client2 = item.client) === null || _item$client2 === void 0 ? void 0 : _item$client2.telephone) || \"Non spécifié\",\n        roomType: ((_item$chambre = item.chambre) === null || _item$chambre === void 0 ? void 0 : _item$chambre.type) || \"Non spécifié\",\n        startDate: item.dateDebut || \"Non spécifié\",\n        endDate: item.dateFin || \"Non spécifié\",\n        preferences: item.preferences || \"Aucune préférence\"\n      };\n    });\n  } catch (error) {\n    console.error(\"Erreur détaillée transformation:\", error);\n    console.error(\"Données problématiques:\", data);\n    return [];\n  }\n};\nexport const reservationService = {\n  getReservations: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations`);\n      console.log(\"Réponse GET reservations:\", response.data);\n      const transformed = transformReservationData(response.data);\n      console.log(\"Données transformées:\", transformed);\n      return transformed;\n    } catch (error) {\n      console.error(\"Erreur getReservations:\", error);\n      throw error;\n    }\n  },\n  createReservation: async formData => {\n    try {\n      const nameParts = (formData.clientName || \"\").split(\" \");\n      const firstName = nameParts[0] || \"\";\n      const lastName = nameParts.slice(1).join(\" \") || \"\";\n      const backendData = {\n        client: {\n          id: null,\n          // Ajout de l'id null pour nouveau client\n          nom: lastName,\n          prenom: firstName,\n          email: formData.email || \"\",\n          telephone: formData.phone || \"\"\n        },\n        chambre: {\n          id: null,\n          // Ajout de l'id null pour nouvelle chambre\n          type: formData.roomType.toUpperCase(),\n          prix: 0.0,\n          // Valeur par défaut\n          disponible: true\n        },\n        dateDebut: formData.startDate,\n        dateFin: formData.endDate,\n        preferences: formData.preferences || \"\"\n      };\n      console.log(\"Données envoyées au backend:\", backendData);\n      const response = await axios.post(`${API_URL}/reservations`, backendData);\n      console.log(\"Réponse création:\", response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error(\"Erreur détaillée:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      throw error;\n    }\n  },\n  updateReservation: async (id, formData) => {\n    try {\n      const nameParts = (formData.clientName || \"\").split(\" \");\n      const firstName = nameParts[0] || \"\";\n      const lastName = nameParts.slice(1).join(\" \") || \"\";\n      const backendData = {\n        client: {\n          nom: lastName,\n          prenom: firstName,\n          email: formData.email || \"\",\n          telephone: formData.phone || \"\"\n        },\n        chambre: {\n          type: formData.roomType.toUpperCase()\n        },\n        dateDebut: formData.startDate,\n        dateFin: formData.endDate,\n        preferences: formData.preferences || \"\"\n      };\n      console.log(\"Données update envoyées:\", backendData);\n      const response = await axios.put(`${API_URL}/reservations/${id}`, backendData);\n      console.log(\"Réponse update:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erreur update:\", error);\n      throw error;\n    }\n  },\n  getReservationById: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations/${id}`);\n      console.log(\"Réservation brute reçue:\", response.data);\n      const transformed = transformReservationData([response.data])[0];\n      console.log(\"Réservation transformée:\", transformed);\n      return transformed;\n    } catch (error) {\n      console.error(\"Erreur getReservationById:\", error);\n      throw error;\n    }\n  },\n  deleteReservation: async id => {\n    try {\n      await axios.delete(`${API_URL}/reservations/${id}`);\n      return true;\n    } catch (error) {\n      console.error(\"Erreur deleteReservation:\", error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","transformReservationData","data","console","log","map","item","_item$client","_item$client2","_item$chambre","id","clientName","client","prenom","nom","trim","email","phone","telephone","roomType","chambre","type","startDate","dateDebut","endDate","dateFin","preferences","error","reservationService","getReservations","response","get","transformed","createReservation","formData","nameParts","split","firstName","lastName","slice","join","backendData","toUpperCase","prix","disponible","post","_error$response","updateReservation","put","getReservationById","deleteReservation","delete"],"sources":["/Users/soukaina/Desktop/hotel-reservation-management-rest/frontend/src/services/reservationService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api\";\n\nconst transformReservationData = (data) => {\n  try {\n    console.log(\"Données brutes reçues du backend:\", data);\n    return data.map((item) => ({\n      id: item.id,\n      clientName: item.client\n        ? `${item.client.prenom || \"\"} ${item.client.nom || \"\"}`.trim() ||\n          \"Non spécifié\"\n        : \"Non spécifié\",\n      email: item.client?.email || \"Non spécifié\",\n      phone: item.client?.telephone || \"Non spécifié\",\n      roomType: item.chambre?.type || \"Non spécifié\",\n      startDate: item.dateDebut || \"Non spécifié\",\n      endDate: item.dateFin || \"Non spécifié\",\n      preferences: item.preferences || \"Aucune préférence\",\n    }));\n  } catch (error) {\n    console.error(\"Erreur détaillée transformation:\", error);\n    console.error(\"Données problématiques:\", data);\n    return [];\n  }\n};\n\nexport const reservationService = {\n  getReservations: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations`);\n      console.log(\"Réponse GET reservations:\", response.data);\n      const transformed = transformReservationData(response.data);\n      console.log(\"Données transformées:\", transformed);\n      return transformed;\n    } catch (error) {\n      console.error(\"Erreur getReservations:\", error);\n      throw error;\n    }\n  },\n\n  createReservation: async (formData) => {\n    try {\n      const nameParts = (formData.clientName || \"\").split(\" \");\n      const firstName = nameParts[0] || \"\";\n      const lastName = nameParts.slice(1).join(\" \") || \"\";\n\n      const backendData = {\n        client: {\n          id: null, // Ajout de l'id null pour nouveau client\n          nom: lastName,\n          prenom: firstName,\n          email: formData.email || \"\",\n          telephone: formData.phone || \"\",\n        },\n        chambre: {\n          id: null, // Ajout de l'id null pour nouvelle chambre\n          type: formData.roomType.toUpperCase(),\n          prix: 0.0, // Valeur par défaut\n          disponible: true,\n        },\n        dateDebut: formData.startDate,\n        dateFin: formData.endDate,\n        preferences: formData.preferences || \"\",\n      };\n\n      console.log(\"Données envoyées au backend:\", backendData);\n      const response = await axios.post(`${API_URL}/reservations`, backendData);\n      console.log(\"Réponse création:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erreur détaillée:\", error.response?.data);\n      throw error;\n    }\n  },\n\n  updateReservation: async (id, formData) => {\n    try {\n      const nameParts = (formData.clientName || \"\").split(\" \");\n      const firstName = nameParts[0] || \"\";\n      const lastName = nameParts.slice(1).join(\" \") || \"\";\n\n      const backendData = {\n        client: {\n          nom: lastName,\n          prenom: firstName,\n          email: formData.email || \"\",\n          telephone: formData.phone || \"\",\n        },\n        chambre: {\n          type: formData.roomType.toUpperCase(),\n        },\n        dateDebut: formData.startDate,\n        dateFin: formData.endDate,\n        preferences: formData.preferences || \"\",\n      };\n\n      console.log(\"Données update envoyées:\", backendData);\n      const response = await axios.put(\n        `${API_URL}/reservations/${id}`,\n        backendData\n      );\n      console.log(\"Réponse update:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erreur update:\", error);\n      throw error;\n    }\n  },\n\n  getReservationById: async (id) => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations/${id}`);\n      console.log(\"Réservation brute reçue:\", response.data);\n      const transformed = transformReservationData([response.data])[0];\n      console.log(\"Réservation transformée:\", transformed);\n      return transformed;\n    } catch (error) {\n      console.error(\"Erreur getReservationById:\", error);\n      throw error;\n    }\n  },\n\n  deleteReservation: async (id) => {\n    try {\n      await axios.delete(`${API_URL}/reservations/${id}`);\n      return true;\n    } catch (error) {\n      console.error(\"Erreur deleteReservation:\", error);\n      throw error;\n    }\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}