{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api\";\nconst formatDate = dateArray => {\n  if (!dateArray || !Array.isArray(dateArray) || dateArray.length !== 3) {\n    return \"\";\n  }\n  // Ajoute un zéro devant les chiffres < 10\n  const month = dateArray[1].toString().padStart(2, \"0\");\n  const day = dateArray[2].toString().padStart(2, \"0\");\n  return `${dateArray[0]}-${month}-${day}`;\n};\nconst transformReservationData = data => {\n  var _data$List;\n  if (!data || !Array.isArray(data) && !((_data$List = data.List) !== null && _data$List !== void 0 && _data$List.item)) {\n    return [];\n  }\n  const items = Array.isArray(data) ? data : data.List.item;\n  return items.map(item => {\n    // Vérifie si client existe et n'est pas vide\n    const hasClient = item.client && Object.keys(item.client).length > 0;\n    // Vérifie si chambre existe et n'est pas vide\n    const hasRoom = item.chambre && Object.keys(item.chambre).length > 0;\n    return {\n      id: item.id || \"\",\n      clientName: hasClient ? `${item.client.prenom} ${item.client.nom}` : \"\",\n      email: hasClient ? item.client.email : \"\",\n      phone: hasClient ? item.client.telephone : \"\",\n      roomType: hasRoom ? item.chambre.type.toLowerCase() : \"\",\n      startDate: formatDate(item.dateDebut),\n      endDate: formatDate(item.dateFin),\n      preferences: item.preferences || \"\"\n    };\n  });\n};\nexport const reservationService = {\n  getReservations: async () => {\n    try {\n      console.log(\"Appel GET reservations...\");\n      const response = await axios.get(`${API_URL}/reservations`);\n      console.log(\"Données brutes reçues:\", response.data);\n      const transformedData = transformReservationData(response.data);\n      console.log(\"Données transformées:\", transformedData);\n      return transformedData;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error(\"Erreur getReservations:\", {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n      });\n      throw error;\n    }\n  },\n  createReservation: async reservationData => {\n    try {\n      const response = await axios.post(`${API_URL}/reservations`, reservationData);\n      return transformReservationData([response.data])[0];\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Erreur createReservation:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw error;\n    }\n  },\n  updateReservation: async (id, reservationData) => {\n    try {\n      const response = await axios.put(`${API_URL}/reservations/${id}`, reservationData);\n      return transformReservationData([response.data])[0];\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Erreur updateReservation:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      throw error;\n    }\n  },\n  deleteReservation: async id => {\n    try {\n      await axios.delete(`${API_URL}/reservations/${id}`);\n      return true;\n    } catch (error) {\n      var _error$response5;\n      console.error(\"Erreur deleteReservation:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      throw error;\n    }\n  },\n  getReservationById: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations/${id}`);\n      return transformReservationData([response.data])[0];\n    } catch (error) {\n      var _error$response6;\n      console.error(\"Erreur getReservationById:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","formatDate","dateArray","Array","isArray","length","month","toString","padStart","day","transformReservationData","data","_data$List","List","item","items","map","hasClient","client","Object","keys","hasRoom","chambre","id","clientName","prenom","nom","email","phone","telephone","roomType","type","toLowerCase","startDate","dateDebut","endDate","dateFin","preferences","reservationService","getReservations","console","log","response","get","transformedData","error","_error$response","_error$response2","message","status","createReservation","reservationData","post","_error$response3","updateReservation","put","_error$response4","deleteReservation","delete","_error$response5","getReservationById","_error$response6"],"sources":["/Users/soukaina/Desktop/hotel-reservation-management-rest/frontend/src/services/reservationService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api\";\n\nconst formatDate = (dateArray) => {\n  if (!dateArray || !Array.isArray(dateArray) || dateArray.length !== 3) {\n    return \"\";\n  }\n  // Ajoute un zéro devant les chiffres < 10\n  const month = dateArray[1].toString().padStart(2, \"0\");\n  const day = dateArray[2].toString().padStart(2, \"0\");\n  return `${dateArray[0]}-${month}-${day}`;\n};\n\nconst transformReservationData = (data) => {\n  if (!data || (!Array.isArray(data) && !data.List?.item)) {\n    return [];\n  }\n\n  const items = Array.isArray(data) ? data : data.List.item;\n\n  return items.map((item) => {\n    // Vérifie si client existe et n'est pas vide\n    const hasClient = item.client && Object.keys(item.client).length > 0;\n    // Vérifie si chambre existe et n'est pas vide\n    const hasRoom = item.chambre && Object.keys(item.chambre).length > 0;\n\n    return {\n      id: item.id || \"\",\n      clientName: hasClient ? `${item.client.prenom} ${item.client.nom}` : \"\",\n      email: hasClient ? item.client.email : \"\",\n      phone: hasClient ? item.client.telephone : \"\",\n      roomType: hasRoom ? item.chambre.type.toLowerCase() : \"\",\n      startDate: formatDate(item.dateDebut),\n      endDate: formatDate(item.dateFin),\n      preferences: item.preferences || \"\",\n    };\n  });\n};\n\nexport const reservationService = {\n  getReservations: async () => {\n    try {\n      console.log(\"Appel GET reservations...\");\n      const response = await axios.get(`${API_URL}/reservations`);\n      console.log(\"Données brutes reçues:\", response.data);\n\n      const transformedData = transformReservationData(response.data);\n      console.log(\"Données transformées:\", transformedData);\n\n      return transformedData;\n    } catch (error) {\n      console.error(\"Erreur getReservations:\", {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status,\n      });\n      throw error;\n    }\n  },\n\n  createReservation: async (reservationData) => {\n    try {\n      const response = await axios.post(\n        `${API_URL}/reservations`,\n        reservationData\n      );\n      return transformReservationData([response.data])[0];\n    } catch (error) {\n      console.error(\n        \"Erreur createReservation:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n\n  updateReservation: async (id, reservationData) => {\n    try {\n      const response = await axios.put(\n        `${API_URL}/reservations/${id}`,\n        reservationData\n      );\n      return transformReservationData([response.data])[0];\n    } catch (error) {\n      console.error(\n        \"Erreur updateReservation:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n\n  deleteReservation: async (id) => {\n    try {\n      await axios.delete(`${API_URL}/reservations/${id}`);\n      return true;\n    } catch (error) {\n      console.error(\n        \"Erreur deleteReservation:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n\n  getReservationById: async (id) => {\n    try {\n      const response = await axios.get(`${API_URL}/reservations/${id}`);\n      return transformReservationData([response.data])[0];\n    } catch (error) {\n      console.error(\n        \"Erreur getReservationById:\",\n        error.response?.data || error.message\n      );\n      throw error;\n    }\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}